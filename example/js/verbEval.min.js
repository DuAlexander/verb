/*! verb 2013-12-08 */
function crossprod(e,r){return[e[1]*r[2]-e[2]*r[1],e[2]*r[0]-e[0]*r[2],e[0]*r[1]-e[1]*r[0]]}if("object"!=typeof exports||void 0===exports)importScripts("labor.js"),importScripts("binomial.js"),importScripts("numeric-1.2.6.min.js");else var labor=require("labor");var verb=verb||{};verb.eval=verb.eval||{},verb.eval=verb.eval||{},verb.eval=verb.eval||{},verb.eval=verb.eval||{},verb=verb||{},verb.EPSILON=1e-8,verb.TOLERANCE=.001;var router=new labor.Router(verb.eval);numeric.normalized=function(e){return numeric.div(e,numeric.norm2(e))},numeric.cross=function(e,r){return[e[1]*r[2]-e[2]*r[1],e[2]*r[0]-e[0]*r[2],e[0]*r[1]-e[1]*r[0]]},verb.eval.get_sweep1_surface=function(e,r,t,n,i,s,o,a){for(var u=verb.eval.homogenize_1d(o,a),v=verb.eval.rational_curve_point(s,i,u,0),l=1/o.length,c=[],b=[],h=0;o.length>h;h++){for(var g=verb.eval.rational_curve_point(s,i,u,h*l),_=numeric.sub(g,v),m=[],p=[],d=0;t.length>d;d++)m.push(numeric.add(_,t[d])),p.push(n[d]*a[h]);c.push(m),b.push(p)}return{knots_u:i,knots_v:e,control_points:c,degree_u:s,degree_v:r,weights:b}},verb.eval.get_ellipse_arc=function(e,r,t,n,i,s,o){s>o&&(o=2*Math.PI+s);var a=o-s,u=0;u=Math.PI/2>=a?1:Math.PI>=a?2:3*Math.PI/2>=a?3:4;var v=a/u,l=Math.cos(v/2),c=numeric.add(e,numeric.mul(n,Math.cos(s),r),numeric.mul(i,Math.sin(s),t)),b=numeric.sub(numeric.mul(Math.cos(s),t),numeric.mul(Math.sin(s),r)),h=verb.eval.zeros_1d(2*u),g=verb.eval.zeros_1d(2*u+3),_=0,m=s,p=verb.eval.zeros_1d(2*u);h[0]=c,p[0]=1;for(var d=1;u>=d;d++){m+=v;var f=numeric.add(e,numeric.mul(n,Math.cos(m),r),numeric.mul(i,Math.sin(m),t));p[_+2]=1,h[_+2]=f;var y=numeric.sub(numeric.mul(Math.cos(m),t),numeric.mul(Math.sin(m),r)),x=verb.eval.intersect_rays(c,numeric.mul(1/numeric.norm2(b),b),f,numeric.mul(1/numeric.norm2(y),y)),w=numeric.add(c,numeric.mul(b,x[0]));p[_+1]=l,h[_+1]=w,_+=2,u>d&&(c=f,b=y)}for(var N=2*u+1,d=0;3>d;d++)g[d]=0,g[d+N]=1;switch(u){case 1:break;case 2:g[3]=g[4]=.5;break;case 3:g[3]=g[4]=1/3,g[5]=g[6]=2/3;break;case 4:g[3]=g[4]=.25,g[5]=g[6]=.5,g[7]=g[8]=.75}return{knots:g,control_points:h,degree:2,weights:p}},verb.eval.get_sphere_surface=function(e,r,t,n){var i=verb.eval.get_arc(e,numeric.mul(r,-1),t,n,0,Math.PI);return verb.eval.get_revolved_surface(e,r,2*Math.PI,i.knots,i.degree,i.control_points,i.weights)},verb.eval.get_polyline_curve=function(e){for(var r=e.length-1,t=1/r,n=[0,0],i=1;r>i;i++)n.push(i*t);n.push(1),n.push(1);for(var s=[],i=0;e.length>i;i++)s.push(1);return{knots:n,control_points:e.slice(0),degree:1,weights:s}},verb.eval.get_4pt_surface=function(e,r,t,n){return{knots_u:[0,0,1,1],knots_v:[0,0,1,1],control_points:[[e,n],[r,t]],degree_u:1,degree_v:1,weights:[[1,1],[1,1]]}},verb.eval.get_cylinder_surface=function(e,r,t,n,i){var s=crossprod(e,r),o=(2*Math.PI,verb.eval.get_arc(t,r,s,i,0,2*Math.PI));return verb.eval.get_extruded_surface(e,n,o.knots,o.degree,o.control_points,o.weights)},verb.eval.get_cone_surface=function(e,r,t,n,i){var s=2*Math.PI,o=1,a=[numeric.add(t,numeric.mul(n,e)),numeric.add(t,numeric.mul(i,r))],u=[0,0,1,1],v=[1,1];return verb.eval.get_revolved_surface(t,e,s,u,o,a,v)},verb.eval.get_extruded_surface=function(e,r,t,n,i,s){for(var o=verb.eval.zeros_2d(2,i.length),a=verb.eval.zeros_2d(2,i.length),u=0;i.length>u;u++)o[0][u]=i[u],a[0][u]=s[u];for(var v=numeric.mul(e,r),u=0;i.length>u;u++)o[1][u]=numeric.add(v,i[u]),a[1][u]=s[u];return{knots_u:[0,0,1,1],knots_v:t,control_points:o,degree_u:1,degree_v:n,weights:a}},verb.eval.get_revolved_surface=function(e,r,t,n,i,s,o){var a,u,v,l;Math.PI/2>=t?(a=1,u=verb.eval.zeros_1d(6+2*(a-1))):Math.PI>=t?(a=2,u=verb.eval.zeros_1d(6+2*(a-1)),u[3]=u[4]=.5):3*Math.PI/2>=t?(a=3,u=verb.eval.zeros_1d(6+2*(a-1)),u[3]=u[4]=1/3,u[5]=u[6]=2/3):(a=4,u=verb.eval.zeros_1d(6+2*(a-1)),u[3]=u[4]=.25,u[5]=u[6]=.5,u[7]=u[8]=.75);for(var c=t/a,b=3+2*(a-1),h=0;3>h;b++,h++)u[h]=0,u[b]=1;for(var g=Math.cos(c/2),_=0,m=verb.eval.zeros_1d(a+1),p=verb.eval.zeros_1d(a+1),v=verb.eval.zeros_2d(2*a+1,s.length),l=verb.eval.zeros_2d(2*a+1,s.length),h=1;a>=h;h++)_+=c,p[h]=Math.cos(_),m[h]=Math.sin(_);for(b=0;s.length>b;b++){var d=verb.eval.closest_point_on_ray(s[b],e,r),f=numeric.sub(s[b],d),y=numeric.norm2(f),x=crossprod(r,f);y>verb.EPSILON&&(f=numeric.mul(1/y,f),x=numeric.mul(1/y,x)),v[0][b]=s[b];var w=s[b];l[0][b]=o[b];for(var N=x,k=0,_=0,h=1;a>=h;h++){var z=0==y?d:numeric.add(d,numeric.mul(y,p[h],f),numeric.mul(y,m[h],x));v[k+2][b]=z,l[k+2][b]=o[b];var M=numeric.sub(numeric.mul(p[h],x),numeric.mul(m[h],f));if(0==y)v[k+1][b]=d;else{var A=verb.eval.intersect_rays(w,numeric.mul(1/numeric.norm2(N),N),z,numeric.mul(1/numeric.norm2(M),M)),E=numeric.add(w,numeric.mul(N,A[0]));v[k+1][b]=E}l[k+1][b]=g*o[b],k+=2,a>h&&(w=z,N=M)}}return{knots_u:u,knots_v:n,control_points:v,degree_u:2,degree_v:i,weights:l}},verb.eval.get_arc=function(e,r,t,n,i,s){return verb.eval.get_ellipse_arc(e,r,t,n,n,i,s)},verb.eval.intersect_rational_surfaces=function(){},verb.eval.intersect_meshes=function(){},verb.eval.intersect_meshes_by_aabb=function(e,r,t,n,i){var s=_.range(r.length),o=_.range(i.length),a=verb.eval.make_mesh_aabb_tree(e,r,s),u=verb.eval.make_mesh_aabb_tree(n,i,o);verb.eval.intersect_aabb_tree(e,r,n,i,a,u)},verb.eval.intersect_tris=function(e,r,t,n,i){for(var s=[e[tr1[0]],e[tr1[1]]],o=[e[tr1[1]],e[tr1[2]]],a=[e[tr1[2]],e[tr1[0]]],u=[n[tr2[0]],n[tr2[1]]],v=[n[tr2[1]],n[tr2[2]]],l=[n[tr2[2]],n[tr2[0]]],c=[s,o,a],b=[u,v,l],h=[],g=verb.eval.get_tri_norm(n,i),_=n[tr2[0]],m=0;3>m;m++){var p=verb.eval.intersect_segment_with_plane(c[m][0],b[m][1],_,g);p.intersects&&h.push(p)}if(2!==h.length)return null;for(var d=[h[0].point,h[1].point],f=[],m=0;3>m;m++){var y=verb.eval.intersect_segments(d[0],d[1],d,b1,tol);y&&f.push(y)}0===f.length||1===f.length||2===f.length},verb.eval.intersect_segment_with_tri=function(e,r,t,n){var i=t[n[0]],s=t[n[1]],o=t[n[2]],a=numeric.sub(s,i),u=numeric.sub(o,i),v=numeric.dot(a,u),l=numeric.dot(a,a),c=numeric.dot(u,u),b=v*v-l*c,h=(v*numeric.dot(a,u)-c*numeric.dot(w,a))/b,g=(v*numeric.dot(w,a)-l*numeric.dot(w,u))/b;if(h>1+EPSILON||g>1+EPSILON||-EPSILON>g||-EPSILON>h||h+g>1+EPSILON)return null;var _=numeric.add(i,numeric.add(numeric.mul(h,a),numeric.mul(g,u))),m=numeric.sub(e,r),p=numeric.dot(m,m),d=numeric.sub(_,r),f=numeric.dot(d,d),y=f/p;return{point:_,s:h,t:g,param:y}},verb.eval.intersect_segment_with_plane=function(e,r,t,n){var i=numeric.dot(n,numeric.sub(e,r));if(EPSILON>abs(i))return null;var s=numeric.dot(n,numeric.sub(t,e));return{param:s/i}},verb.eval.intersect_aabb_trees=function(e,r,t,n,i,s){var o=i.bounding_box.intersects(s.bounding_box);return o?0===i.children.length&&0===s.children.length?[[i.triangle,s.triangle]]:0===i.children.length&&0!=s.children.length?verb.eval.intersect_aabb_trees(e,r,t,n,i,s.children[0]).concat(verb.eval.intersect_aabb_trees(e,r,t,n,i,s.children[1])):0!=i.children.length&&0===s.children.length?verb.eval.intersect_aabb_trees(e,r,t,n,i.children[0],s).concat(verb.eval.intersect_aabb_trees(e,r,t,n,i.children[1],s)):0!=i.children.length&&0!=s.children.length?verb.eval.intersect_aabb_trees(e,r,t,n,i.children[0],s.children[0]).concat(verb.eval.intersect_aabb_trees(e,r,t,n,i.children[0],s.children[1])).concat(verb.eval.intersect_aabb_trees(e,r,t,n,i.children[1],s.children[0])).concat(verb.eval.intersect_aabb_trees(e,r,t,n,i.children[1],s.children[1])):void 0:[]},verb.eval.make_mesh_aabb_tree=function(e,r,t){var n={bounding_box:verb.eval.make_mesh_aabb(e,r,t),children:[]};if(1===t.length)return n.triangle=t[0],n;var i=verb.eval.sort_tris_on_longest_axis(n.bounding_box,e,r,t),s=i.slice(0,Math.floor(i.length/2)),o=i.slice(Math.floor(i.length/2),i.length);return n.children=[verb.eval.make_mesh_aabb_tree(e,r,s),verb.eval.make_mesh_aabb_tree(e,r,o)],n},verb.eval.make_mesh_aabb=function(e,r,t){for(var n=new verb.BoundingBox,i=t.length-1;i>=0;i--){var s=t[i];n.add(e[r[s][0]]),n.add(e[r[s][1]]),n.add(e[r[s][2]])}return n},verb.eval.sort_tris_on_longest_axis=function(e,r,t,n){for(var i=e.get_longest_axis(),s=[],o=n.length-1;o>=0;o--){var a=n[o],u=verb.eval.get_min_coordinate_on_axis(r,t[a],i);s.push([u,a])}s.sort(function(e,r){return e[0]>r[0]});for(var v=[],o=0,l=s.length;l>o;o++)v.push(s[o][1]);return v},verb.eval.get_min_coordinate_on_axis=function(e,r,t){for(var n=[],i=0;3>i;i++)n.push(e[r[i]][t]);return Math.min.apply(Math,n)},verb.eval.get_tri_centroid=function(e,r){for(var t=[0,0,0],n=0;3>n;n++)for(var i=0;3>i;i++)t[i]+=e[r[n]][i];for(var n=0;3>n;n++)t[n]/=3;return t},verb.eval.get_tri_norm=function(e,r){var t=e[r[0]],n=e[r[1]],i=e[r[2]],s=numeric.sub(n,t),o=numeric.sub(i,t),a=numeric.cross(s,o);return numeric.mul(1/numeric.norm2(a),a)},verb.eval.tesselate_rational_surface_naive=function(e,r,t,n,i,s,o){1>s&&(s=1),1>o&&(o=1);for(var a=1/s,u=1/o,v=[],l=[],c=[],b=0;s+1>b;b++)for(var h=0;o+1>h;h++){var g=b*a,_=h*u;l.push([g,_]);var m=verb.eval.rational_surface_derivs(e,r,t,n,i,1,g,_),p=m[0][0];v.push(p);var d=numeric.cross(m[0][1],m[1][0]);c.push(d)}for(var f=[],b=0;s>b;b++)for(var h=0;o>h;h++){var y=b*(o+1)+h,x=(b+1)*(o+1)+h,w=x+1,N=y+1,k=[y,x,w],z=[y,w,N];f.push(k),f.push(z)}return{points:v,faces:f,uvs:l,normals:c}},verb.eval.rational_curve_curve_bb_intersect_refine=function(e,r,t,n,i,s,o){var a=function(o){var a=verb.eval.rational_curve_point(e,r,t,o[0]),u=verb.eval.rational_curve_point(n,i,s,o[1]),v=numeric.sub(a,u);return numeric.dot(v,v)},u=numeric.uncmin(a,o);return[u.f].concat(u.solution)},verb.eval.intersect_rational_curves_by_aabb=function(e,r,t,n,i,s,o,a){var u=verb.eval.rational_curve_adaptive_sample(e,r,t,o),v=verb.eval.rational_curve_adaptive_sample(e,r,t,o),l=_.map(u,function(e){return e[0]}),c=_.map(v,function(e){return e[0]}),b=_.map(u,function(e){return e.slice(1)}),h=_.map(v,function(e){return e.slice(1)});return verb.eval.intersect_parametric_polylines_by_aabb(b,h,l,c,a)},verb.eval.intersect_parametric_polylines_by_aabb=function(e,r,t,n,i){var s=new verb.BoundingBox(e),o=new verb.BoundingBox(r);if(s.intersects(o)){if(2!==e.length||2!==r.length){if(2===e.length){var a=Math.ceil(r.length/2),u=r.slice(0,a),v=n.slice(0,a),l=r.slice(a-1);return m=r.slice(a-1),verb.eval.parametric_polyline_polyline_bb_intersect(e,u,t,v,i).concat(verb.eval.parametric_polyline_polyline_bb_intersect(e,l,t,m,i))}if(2===r.length){var c=Math.ceil(e.length/2),b=e.slice(0,c),h=t.slice(0,c),g=e.slice(c-1);return _=e.slice(c-1),verb.eval.parametric_polyline_polyline_bb_intersect(r,b,n,b,i).concat(verb.eval.parametric_polyline_polyline_bb_intersect(r,g,n,_,i))}var c=Math.ceil(e.length/2),b=e.slice(0,c),h=t.slice(0,c),g=e.slice(c-1),_=e.slice(c-1),a=Math.ceil(r.length/2),u=r.slice(0,a),v=n.slice(0,a),l=r.slice(a-1),m=r.slice(a-1);return verb.eval.parametric_polyline_polyline_bb_intersect(b,u,h,u,i).concat(verb.eval.parametric_polyline_polyline_bb_intersect(b,l,h,m,i)).concat(verb.eval.parametric_polyline_polyline_bb_intersect(g,u,_,v,i)).concat(verb.eval.parametric_polyline_polyline_bb_intersect(g,l,_,m,i))}var p=verb.eval.segment_segment_intersect(e[0],e[1],r[0],r[1],i);return null!=p?(p[0][0]=p[0][0]*(t[1]-t[0])+t[0],p[1][0]=p[1][0]*(n[1]-n[0])+n[0],p):[]}},verb.eval.intersect_segments=function(e,r,t,n){var i=numeric.sub(r,e),s=Math.sqrt(numeric.dot(i,i)),o=numeric.mul(1/s,i);if(b1mb0=numeric.sub(n,t),bN=Math.sqrt(numeric.dot(b1mb0,b1mb0)),o=numeric.mul(1/bN,i),int_params=ray_ray_intersect(e,o,t,b),null!=int_params){var a=Math.min(Math.max(0,int_params[0]/o),1),u=Math.min(Math.max(0,int_params[1]/b),1),v=numeric.add(numeric.mul(a,i),e),l=numeric.add(numeric.mul(u,b1mb0),t),c=numeric.norm2Squared(numeric.sub(v,l));if(tolerance*tolerance>c)return[[a].concat(v),[u].concat(l)]}return null},verb.eval.closest_point_on_ray=function(e,r,t){var n=numeric.sub(e,r),i=numeric.dot(n,t),s=numeric.add(r,numeric.mul(i,t));return s},verb.eval.intersect_rays=function(e,r,t,n){var i=numeric.dot(r,n),s=numeric.dot(r,t),o=numeric.dot(r,e),a=numeric.dot(n,t),u=numeric.dot(n,e),v=numeric.dot(r,r),l=numeric.dot(n,n),c=v*l-i*i;if(Math.abs(c)<verb.EPSILON)return null;var b=i*(s-o)-v*(a-u),h=b/c,g=(s-o+h*i)/v;return[g,h]},verb.eval.rational_curve_regular_sample=function(e,r,t,n,i){return verb.eval.rational_curve_regular_sample_range(e,r,t,0,1,n,i)},verb.eval.rational_curve_regular_sample_range=function(e,r,t,n,i,s,o){1>s&&(s=2);for(var a=[],u=(i-n)/(s-1),v=0,l=0;s>l;l++)v=n+u*l,o?a.push([v].concat(verb.eval.rational_curve_point(e,r,t,v))):a.push(verb.eval.rational_curve_point(e,r,t,v));return a},verb.eval.rational_curve_adaptive_sample=function(e,r,t,n,i){return 1===e?t.map(verb.eval.dehomogenize):verb.eval.rational_curve_adaptive_sample_range(e,r,t,0,1,n,i)},verb.eval.rational_curve_adaptive_sample_range=function(e,r,t,n,i,s,o){var a=verb.eval.rational_curve_point(e,r,t,n),u=verb.eval.rational_curve_point(e,r,t,i),v=.5+.2*Math.random(),l=n+(i-n)*v,c=verb.eval.rational_curve_point(e,r,t,l),b=numeric.sub(a,u),h=numeric.sub(a,c);if(s>numeric.dot(b,b)&&numeric.dot(h,h)>s||!verb.eval.three_points_are_flat(a,c,u,s)){var g=verb.eval.rational_curve_adaptive_sample_range(e,r,t,n,l,s,o),_=verb.eval.rational_curve_adaptive_sample_range(e,r,t,l,i,s,o);return g.slice(0,-1).concat(_)}return o?[[n].concat(a),[i].concat(u)]:[a,u]},verb.eval.three_points_are_flat=function(e,r,t,n){var i=numeric.sub(r,e),s=numeric.sub(t,e),o=crossprod(i,s),a=numeric.dot(o,o);return n>a},verb.eval.curve_knot_insert=function(e,r,t,n,i,s){var o=(t[0].length,r.length-e-2),a=t.length,u=verb.eval.knot_span(e,n,r),v=o+e+1,l=a+s,c=Array(e+1),b=Array(r.length+s),h=Array(l),g=0;for(g=0;u>=g;g++)b[g]=r[g];for(g=1;s>=g;g++)b[u+g]=n;for(g=u+1;v>=g;g++)b[g+s]=r[g];for(g=0;u-e>=g;g++)h[g]=t[g];for(g=u-i;o>=g;g++)h[g+s]=t[g];for(g=0;e-i>=g;g++)c[g]=t[u-e+1];for(var _=0,m=0,p=1;s>=p;p++){for(_=u-e+p,g=0;e-p-i>=g;g++)m=(n-r[_+g])/(r[g+u+1]-r[_+g]),c[g]=numeric.add(numeric.mul(m,c[g+1]),numeric.mul(1-m,c[g]));h[_]=c[0],h[u+s-p-i]=c[e-p-i]}for(g=_+1;u-i>g;g++)h[g]=c[g-_];return[b,h]},verb.eval.rational_surface_derivs=function(e,r,t,n,i,s,o,a){var u=verb.eval.surface_derivs(e,r,t,n,i,s,o,a),v=verb.eval.separate_homo_derivs_2d(u),l=v[0],c=v[1],b=0,h=0,g=0,_=0,m=[],p=l[0][0].length;for(b=0;s>=b;b++)for(m.push([]),_=0;s-b>=_;_++){var a=l[b][_];for(g=1;_>=g;g++)a=numeric.sub(a,numeric.mul(numeric.mul(binomial.get(_,g),c[0][g]),m[b][_-g]));for(h=1;b>=h;h++){a=numeric.sub(a,numeric.mul(numeric.mul(binomial.get(b,h),c[h][0]),m[b-h][_]));var d=verb.eval.zeros_1d(p);for(g=1;_>=g;g++)d=numeric.add(d,numeric.mul(numeric.mul(binomial.get(_,g),c[h][g]),m[b-h][_-g]));a=numeric.sub(a,numeric.mul(binomial.get(b,h),d))}m[b].push(numeric.mul(1/c[0][0],a))}return m},verb.eval.rational_surface_point=function(e,r,t,n,i,s,o){return verb.eval.dehomogenize(verb.eval.surface_point(e,r,t,n,i,s,o))},verb.eval.rational_curve_derivs=function(e,r,t,n,i){var s=verb.eval.separate_homo_derivs_1d(verb.eval.curve_derivs(e,r,t,n,i)),o=s[0],a=s[1],u=0,v=0,l=[];for(u=0;i>=u;u++){var c=o[u];for(v=1;u>=v;v++)c=numeric.sub(c,numeric.mul(numeric.mul(binomial.get(u,v),a[v]),l[u-v]));l.push(numeric.mul(1/a[0],c))}return l},verb.eval.separate_homo_derivs_1d=function(e){for(var r=e[0].length,t=r-1,n=[],i=[],s=0,o=e.length;o>s;s++)n.push(e[s].slice(0,t)),i.push(e[s][t]);return[n,i]},verb.eval.separate_homo_derivs_2d=function(e){for(var r=[],t=[],n=0,i=e.length;i>n;n++){var s=verb.eval.separate_homo_derivs_1d(e[n]);r.push(s[0]),t.push(s[1])}return[r,t]},verb.eval.rational_curve_point=function(e,r,t,n){return verb.eval.dehomogenize(verb.eval.curve_point(e,r,t,n))},verb.eval.dehomogenize=function(e){for(var r=e.length,t=[],n=e[r-1],i=0;e.length-1>i;i++)t.push(e[i]/n);return t},verb.eval.homogenize_1d=function(e,r){for(var t=e.length,n=e[0].length,i=0,s=[],o=0,a=[],u=0;t>u;u++){var v=[];for(a=e[u],o=r[u],i=0;n>i;i++)v.push(a[i]*o);v.push(o),s.push(v)}return s},verb.eval.homogenize_2d=function(e,r){for(var t=e.length,n=(e[0].length,e[0][0].length,[]),i=0;t>i;i++)n.push(verb.eval.homogenize_1d(e[i],r[i]));return n},verb.eval.surface_derivs=function(e,r,t,n,i,s,o,a){var u=r.length-e-2,v=n.length-t-2;return verb.eval.surface_derivs_given_n_m(u,e,r,v,t,n,i,s,o,a)},verb.eval.surface_derivs_given_n_m=function(e,r,t,n,i,s,o,a,u,v){if(verb.eval.are_valid_relations(r,o.length,t.length)===!1||verb.eval.are_valid_relations(i,o[0].length,s.length)===!1)return console.error("Invalid relations between control points, knot vector, and n"),null;var l=o[0][0].length,c=Math.min(a,r),b=Math.min(a,i),h=verb.eval.zeros_3d(c+1,b+1,l),g=verb.eval.knot_span_given_n(e,r,u,t),_=verb.eval.knot_span_given_n(n,i,v,s),m=verb.eval.deriv_basis_functions_given_n_i(g,u,r,e,t),p=verb.eval.deriv_basis_functions_given_n_i(_,v,i,n,s),d=verb.eval.zeros_2d(i+1,l),f=0,y=0,x=0,w=0,N=0;for(f=0;c>=f;f++){for(y=0;i>=y;y++)for(d[y]=verb.eval.zeros_1d(l),x=0;r>=x;x++)d[y]=numeric.add(d[y],numeric.mul(m[f][x],o[g-r+x][_-i+y]));for(N=Math.min(a-f,b),w=0;N>=w;w++)for(h[f][w]=verb.eval.zeros_1d(l),y=0;i>=y;y++)h[f][w]=numeric.add(h[f][w],numeric.mul(p[w][y],d[y]))}return h},verb.eval.surface_point=function(e,r,t,n,i,s,o){var a=r.length-e-2,u=n.length-t-2;return verb.eval.surface_point_given_n_m(a,e,r,u,t,n,i,s,o)},verb.eval.surface_point_given_n_m=function(e,r,t,n,i,s,o,a,u){if(verb.eval.are_valid_relations(r,o.length,t.length)===!1||verb.eval.are_valid_relations(i,o[0].length,s.length)===!1)return console.error("Invalid relations between control points, knot vector, and n"),null;var v=o[0][0].length,l=verb.eval.knot_span_given_n(e,r,a,t),c=verb.eval.knot_span_given_n(n,i,u,s),b=verb.eval.basis_functions_given_knot_span_index(l,a,r,t),h=verb.eval.basis_functions_given_knot_span_index(c,u,i,s),g=l-r,_=c,m=verb.eval.zeros_1d(v),p=verb.eval.zeros_1d(v),d=0,f=0;for(d=0;i>=d;d++){for(p=verb.eval.zeros_1d(v),_=c-i+d,f=0;r>=f;f++)p=numeric.add(p,numeric.mul(b[f],o[g+f][_]));m=numeric.add(m,numeric.mul(h[d],p))}return m},verb.eval.curve_derivs=function(e,r,t,n,i){var s=r.length-e-2;return verb.eval.curve_derivs_given_n(s,e,r,t,n,i)},verb.eval.curve_derivs_given_n=function(e,r,t,n,i,s){if(verb.eval.are_valid_relations(r,n.length,t.length)===!1)return console.error("Invalid relations between control points, knot vector, and n"),null;var o=n[0].length,a=Math.min(s,r),u=verb.eval.zeros_2d(a+1,o),v=verb.eval.knot_span_given_n(e,r,i,t),l=verb.eval.deriv_basis_functions_given_n_i(v,i,r,a,t),c=0,b=0;for(c=0;a>=c;c++)for(b=0;r>=b;b++)u[c]=numeric.add(u[c],numeric.mul(l[c][b],n[v-r+b]));return u},verb.eval.are_valid_relations=function(e,r,t){return 0===r+e+1-t?!0:!1},verb.eval.curve_point=function(e,r,t,n){var i=r.length-e-2;return verb.eval.curve_point_given_n(i,e,r,t,n)},verb.eval.curve_point_given_n=function(e,r,t,n,i){if(verb.eval.are_valid_relations(r,n.length,t.length)===!1)return console.error("Invalid relations between control points, knot vector, and n"),null;for(var s=verb.eval.knot_span_given_n(e,r,i,t),o=verb.eval.basis_functions_given_knot_span_index(s,i,r,t),a=verb.eval.zeros_1d(n[0].length),u=0;r>=u;u++)a=numeric.add(a,numeric.mul(o[u],n[s-r+u]));return a},verb.eval.zeros_1d=function(e){e=e>0?e:0;for(var r=[];e--;)r.push(0);return r},verb.eval.zeros_2d=function(e,r){r=r>0?r:0,e=e>0?e:0;for(var t=[],n=r,i=e;e--;){for(t.push([]);n--;)t[i-e-1].push(0);n=r}return t},verb.eval.zeros_3d=function(e,r,t){r=r>0?r:0,e=e>0?e:0;for(var n=[],i=r,s=e;e--;){for(n.push([]);i--;)n[s-e-1].push(verb.eval.zeros_1d(t));i=r}return n},verb.eval.deriv_basis_functions=function(e,r,t){var n=verb.eval.knot_span(r,e,t),i=t.length-1,s=i-r-1;return verb.eval.deriv_basis_functions_given_n_i(n,e,r,s,t)},verb.eval.deriv_basis_functions_given_n_i=function(e,r,t,n,i){var s=verb.eval.zeros_2d(t+1,t+1),o=Array(t+1),a=Array(t+1),u=0,v=0,l=1,c=0;for(s[0][0]=1,l=1;t>=l;l++){for(o[l]=r-i[e+1-l],a[l]=i[e+l]-r,u=0,c=0;l>c;c++)s[l][c]=a[c+1]+o[l-c],v=s[c][l-1]/s[l][c],s[c][l]=u+a[c+1]*v,u=o[l-c]*v;s[l][l]=u}var b=verb.eval.zeros_2d(n+1,t+1),h=verb.eval.zeros_2d(2,t+1),g=1,_=0,m=1,p=0,d=0,f=0,y=0,x=0;for(l=0;t>=l;l++)b[0][l]=s[l][t];for(c=0;t>=c;c++)for(_=0,m=1,h[0][0]=1,g=1;n>=g;g++){for(p=0,d=c-g,f=t-g,c>=g&&(h[m][0]=h[_][0]/s[f+1][d],p=h[m][0]*s[d][f]),y=d>=-1?1:-d,x=f>=c-1?g-1:t-c,l=y;x>=l;l++)h[m][l]=(h[_][l]-h[_][l-1])/s[f+1][d+l],p+=h[m][l]*s[d+l][f];f>=c&&(h[m][g]=-h[_][g-1]/s[f+1][c],p+=h[m][g]*s[c][f]),b[g][c]=p,l=_,_=m,m=l}for(c=t,g=1;n>=g;g++){for(l=0;t>=l;l++)b[g][l]*=c;c*=t-g}return b},verb.eval.basis_functions=function(e,r,t){var n=verb.eval.knot_span(e,r,t);return verb.eval.basis_functions_given_knot_span_index(n,e,r,t)},verb.eval.basis_functions_given_knot_span_index=function(e,r,t,n){var i=Array(t+1),s=Array(t+1),o=Array(t+1),a=0,u=0;i[0]=1;for(var v=1;t>=v;v++){s[v]=r-n[e+1-v],o[v]=n[e+v]-r,a=0;for(var l=0;v>l;l++)u=i[l]/(o[l+1]+s[v-l]),i[l]=a+o[l+1]*u,a=s[v-l]*u;i[v]=a}return i},verb.eval.knot_span=function(e,r,t){var n=t.length-1,i=n-e-1;return verb.eval.knot_span_given_n(i,e,r,t)},verb.eval.knot_span_given_n=function(e,r,t,n){if(t>=n[e+1])return e;if(n[r]>t)return r;for(var i=r,s=e+1,o=Math.floor((i+s)/2);n[o]>t||t>=n[o+1];)n[o]>t?s=o:i=o,o=Math.floor((i+s)/2);return o};