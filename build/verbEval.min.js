/*! verb 2014-11-29 */
function crossprod(e,r){return[e[1]*r[2]-e[2]*r[1],e[2]*r[0]-e[0]*r[2],e[0]*r[1]-e[1]*r[0]]}if("object"!=typeof exports||void 0===exports)importScripts("labor.js"),importScripts("binomial.js"),importScripts("numeric-1.2.6.min.js");else var labor=require("labor");var verb=verb||{};verb.eval=verb.eval||{},verb.eval.nurbs=verb.eval.nurbs||{},verb.eval.mesh=verb.eval.mesh||{},verb.eval.geom=verb.eval.geom||{},verb.geom=verb.geom||{},verb.EPSILON=1e-8,verb.TOLERANCE=.001;var router=new labor.Router(verb.eval.nurbs);numeric.normalized=function(e){return numeric.div(e,numeric.norm2(e))},numeric.cross=function(e,r){return[e[1]*r[2]-e[2]*r[1],e[2]*r[0]-e[0]*r[2],e[0]*r[1]-e[1]*r[0]]},verb.left=function(e){if(0===e.length)return[];var r=Math.ceil(e.length/2);return e.slice(0,r)},verb.right=function(e){if(0===e.length)return[];var r=Math.ceil(e.length/2);return e.slice(r)},verb.rightWithPivot=function(e){if(0===e.length)return[];var r=Math.ceil(e.length/2);return e.slice(r-1)},verb.unique=function(e,r){if(0===e.length)return[];for(var n=[e.pop()],t=0;e.length>t;t++){for(var i=e.pop(),s=!0,u=0;n.length>u;u++)if(r(i,n[t])){s=!1;break}s&&n.push(i)}return n},verb.eval.nurbs.intersect_rational_curve_surface_by_aabb_refine=function(e,r,n,t,i,s,u,o,a,v,l,c){var b=verb.eval.nurbs.intersect_rational_curve_surface_by_aabb(e,r,n,t,i,s,u,o,a,v,l,c);return b.map(function(a){var v=[a.p,a.uv[0],a.uv[1]],l=verb.eval.nurbs.refine_rational_curve_surface_intersection(e,r,n,t,i,s,u,o,v);return a.p=l[0],a.uv[0]=l[1],a.uv[1]=l[2],a.distance=l[3],delete a.face,a})},verb.eval.nurbs.refine_rational_curve_surface_intersection=function(e,r,n,t,i,s,u,o,a){var v=function(a){var v=verb.eval.nurbs.rational_curve_point(s,u,o,a[0]),l=verb.eval.nurbs.rational_surface_point(e,r,n,t,i,a[1],a[2]),c=numeric.sub(v,l);return numeric.dot(c,c)},l=numeric.uncmin(v,a);return l.solution.concat(l.f)},verb.eval.nurbs.intersect_rational_curve_surface_by_aabb=function(e,r,n,t,i,s,u,o,a,v,l,c){var b=verb.eval.nurbs.rational_curve_adaptive_sample(s,u,o,a,!0),h=verb.eval.nurbs.tessellate_rational_surface_naive(e,r,n,t,i,l,c),m=b.map(function(e){return e[0]}),_=b.map(function(e){return e.slice(1)}),g=verb.eval.nurbs.intersect_parametric_polyline_mesh_by_aabb(_,m,h,verb.range(h.faces.length),v);return verb.unique(g,function(e,r){return v>numeric.norm2(numeric.sub(e.point,r.point))&&v>Math.abs(e.p-r.p)&&v>numeric.norm2(numeric.sub(e.uv,r.uv))})},verb.eval.nurbs.intersect_parametric_polyline_mesh_by_aabb=function(e,r,n,t,i){var s=new verb.geom.BoundingBox(e),u=verb.eval.mesh.make_mesh_aabb(n.points,n.faces,t),o=verb.eval.nurbs.intersect_parametric_polyline_mesh_by_aabb;if(!s.intersects(u,i))return[];if(2!==e.length||1!==t.length){if(1===t.length){var a=verb.left(e),v=verb.rightWithPivot(e),l=verb.left(r),c=verb.rightWithPivot(r);return o(a,l,n,t,i).concat(o(v,c,n,t,i))}if(2===e.length){var b=verb.eval.mesh.sort_tris_on_longest_axis(u,n.points,n.faces,t),h=verb.left(b),m=verb.right(b);return o(e,r,n,h,i).concat(o(e,r,n,m,i))}var b=verb.eval.mesh.sort_tris_on_longest_axis(u,n.points,n.faces,t),h=verb.left(b),m=verb.right(b),a=verb.left(e),v=verb.rightWithPivot(e),l=verb.left(r),c=verb.rightWithPivot(r);return o(a,l,n,h,i).concat(o(a,l,n,m,i)).concat(o(v,c,n,h,i)).concat(o(v,c,n,m,i))}var _=verb.eval.geom.intersect_segment_with_tri(e[0],e[1],n.points,n.faces[t[0]]);if(null!=_){var g=_.p*(r[1]-r[0])+r[0],f=n.faces[t][0],d=n.faces[t][1],p=n.faces[t][2],y=n.uvs[f],k=n.uvs[d],x=n.uvs[p],E=numeric.sub(k,y),N=numeric.sub(x,y),z=numeric.add(y,numeric.mul(_.s,E),numeric.mul(_.t,N));return[{point:_.point,p:g,uv:z,face:t[0]}]}return[]},verb.eval.geom.intersect_segment_with_tri=function(e,r,n,t){var i=n[t[0]],s=n[t[1]],u=n[t[2]],o=numeric.sub(s,i),a=numeric.sub(u,i),v=numeric.cross(o,a),l=numeric.sub(r,e),c=numeric.sub(e,i),b=-numeric.dot(v,c),h=numeric.dot(v,l);if(Math.abs(h)<verb.EPSILON)return null;var m=b/h;if(0>m||m>1)return null;var _=numeric.add(e,numeric.mul(m,l)),g=numeric.dot(o,a),f=numeric.dot(o,o),d=numeric.dot(a,a),p=numeric.sub(_,i),y=numeric.dot(p,o),k=numeric.dot(p,a),x=g*g-f*d,E=(g*k-d*y)/x,N=(g*y-f*k)/x;return E>1+verb.EPSILON||N>1+verb.EPSILON||-verb.EPSILON>N||-verb.EPSILON>E||E+N>1+verb.EPSILON?null:{point:_,s:E,t:N,p:m}},verb.eval.geom.intersect_segment_with_plane=function(e,r,n,t){var i=numeric.dot(t,numeric.sub(e,r));if(EPSILON>abs(i))return null;var s=numeric.dot(t,numeric.sub(n,e));return{p:s/i}},verb.eval.geom.intersect_aabb_trees=function(e,r,n,t,i,s){var u=i.bounding_box.intersects(s.bounding_box),o=verb.eval.geom.intersect_aabb_trees;return u?0===i.children.length&&0===s.children.length?[[i.triangle,s.triangle]]:0===i.children.length&&0!=s.children.length?o(e,r,n,t,i,s.children[0]).concat(o(e,r,n,t,i,s.children[1])):0!=i.children.length&&0===s.children.length?o(e,r,n,t,i.children[0],s).concat(o(e,r,n,t,i.children[1],s)):0!=i.children.length&&0!=s.children.length?o(e,r,n,t,i.children[0],s.children[0]).concat(o(e,r,n,t,i.children[0],s.children[1])).concat(o(e,r,n,t,i.children[1],s.children[0])).concat(o(e,r,n,t,i.children[1],s.children[1])):void 0:[]},verb.eval.mesh.make_mesh_aabb_tree=function(e,r,n){var t={bounding_box:verb.eval.mesh.make_mesh_aabb(e,r,n),children:[]};if(1===n.length)return t.triangle=n[0],t;var i=verb.eval.mesh.sort_tris_on_longest_axis(t.bounding_box,e,r,n),s=i.slice(0,Math.floor(i.length/2)),u=i.slice(Math.floor(i.length/2),i.length);return t.children=[verb.eval.mesh.make_mesh_aabb_tree(e,r,s),verb.eval.mesh.make_mesh_aabb_tree(e,r,u)],t},verb.eval.mesh.make_mesh_aabb=function(e,r,n){var t=new verb.geom.BoundingBox;return n.forEach(function(n){t.add(e[r[n][0]]),t.add(e[r[n][1]]),t.add(e[r[n][2]])}),t},verb.eval.mesh.sort_tris_on_longest_axis=function(e,r,n,t){for(var i=e.get_longest_axis(),s=[],u=t.length-1;u>=0;u--){var o=t[u],a=verb.eval.mesh.get_min_coordinate_on_axis(r,n[o],i);s.push([a,o])}s.sort(function(e,r){return e[0]>r[0]});for(var v=[],u=0,l=s.length;l>u;u++)v.push(s[u][1]);return v},verb.eval.mesh.get_min_coordinate_on_axis=function(e,r,n){for(var t=[],i=0;3>i;i++)t.push(e[r[i]][n]);return Math.min.apply(Math,t)},verb.eval.geom.get_tri_centroid=function(e,r){for(var n=[0,0,0],t=0;3>t;t++)for(var i=0;3>i;i++)n[i]+=e[r[t]][i];for(var t=0;3>t;t++)n[t]/=3;return n},verb.eval.geom.get_tri_norm=function(e,r){var n=e[r[0]],t=e[r[1]],i=e[r[2]],s=numeric.sub(t,n),u=numeric.sub(i,n),o=numeric.cross(s,u);return numeric.mul(1/numeric.norm2(o),o)},verb.eval.nurbs.intersect_rational_curves_by_aabb_refine=function(e,r,n,t,i,s,u,o){var a=verb.eval.nurbs.intersect_rational_curves_by_aabb(e,r,n,t,i,s,u,o);return a.map(function(u){return verb.eval.nurbs.refine_rational_curve_intersection(e,r,n,t,i,s,u)})},verb.eval.nurbs.refine_rational_curve_intersection=function(e,r,n,t,i,s,u){var o=function(u){var o=verb.eval.nurbs.rational_curve_point(e,r,n,u[0]),a=verb.eval.nurbs.rational_curve_point(t,i,s,u[1]),v=numeric.sub(o,a);return numeric.dot(v,v)},a=numeric.uncmin(o,u);return a.solution.concat(a.f)},verb.eval.nurbs.intersect_rational_curves_by_aabb=function(e,r,n,t,i,s,u,o){var a=verb.eval.nurbs.rational_curve_adaptive_sample(e,r,n,u,!0),v=verb.eval.nurbs.rational_curve_adaptive_sample(t,i,s,u,!0),l=a.map(function(e){return e[0]}),c=v.map(function(e){return e[0]}),b=a.map(function(e){return e.slice(1)}),h=v.map(function(e){return e.slice(1)});return verb.eval.nurbs.intersect_parametric_polylines_by_aabb(b,h,l,c,o)},verb.eval.nurbs.intersect_parametric_polylines_by_aabb=function(e,r,n,t,i){var s=new verb.geom.BoundingBox(e),u=new verb.geom.BoundingBox(r);if(!s.intersects(u,i))return[];if(2!==e.length||2!==r.length){if(2===e.length){var o=Math.ceil(r.length/2),a=r.slice(0,o),v=r.slice(o-1),l=t.slice(0,o),c=t.slice(o-1);return verb.eval.nurbs.intersect_parametric_polylines_by_aabb(e,a,n,l,i).concat(verb.eval.nurbs.intersect_parametric_polylines_by_aabb(e,v,n,c,i))}if(2===r.length){var b=Math.ceil(e.length/2),h=e.slice(0,b),m=e.slice(b-1),_=n.slice(0,b),g=n.slice(b-1);return verb.eval.nurbs.intersect_parametric_polylines_by_aabb(h,r,_,t,i).concat(verb.eval.nurbs.intersect_parametric_polylines_by_aabb(m,r,g,t,i))}var b=Math.ceil(e.length/2),h=e.slice(0,b),m=e.slice(b-1),_=n.slice(0,b),g=n.slice(b-1),o=Math.ceil(r.length/2),a=r.slice(0,o),v=r.slice(o-1),l=t.slice(0,o),c=t.slice(o-1);return verb.eval.nurbs.intersect_parametric_polylines_by_aabb(h,a,_,l,i).concat(verb.eval.nurbs.intersect_parametric_polylines_by_aabb(h,v,_,c,i)).concat(verb.eval.nurbs.intersect_parametric_polylines_by_aabb(m,a,g,l,i)).concat(verb.eval.nurbs.intersect_parametric_polylines_by_aabb(m,v,g,c,i))}var f=verb.eval.geom.intersect_segments(e[0],e[1],r[0],r[1],i);return null!=f?(f[0][0]=f[0][0]*(n[1]-n[0])+n[0],f[1][0]=f[1][0]*(t[1]-t[0])+t[0],[[f[0][0],f[1][0]]]):[]},verb.eval.geom.intersect_segments=function(e,r,n,t,i){var s=numeric.sub(r,e),u=Math.sqrt(numeric.dot(s,s)),o=numeric.mul(1/u,s),a=numeric.sub(t,n),v=Math.sqrt(numeric.dot(a,a)),l=numeric.mul(1/v,a),c=verb.eval.geom.intersect_rays(e,o,n,l);if(null!=c){var b=Math.min(Math.max(0,c[0]/u),1),h=Math.min(Math.max(0,c[1]/v),1),m=numeric.add(numeric.mul(b,s),e),_=numeric.add(numeric.mul(h,a),n),g=numeric.norm2Squared(numeric.sub(m,_));if(i*i>g)return[[b].concat(m),[h].concat(_)]}return null},verb.eval.geom.closest_point_on_ray=function(e,r,n){var t=numeric.sub(e,r),i=numeric.dot(t,n),s=numeric.add(r,numeric.mul(i,n));return s},verb.eval.geom.dist_to_ray=function(e,r,n){var t=verb.eval.geom.closest_point_on_ray(e,r,n),i=numeric.sub(t,e);return numeric.norm2(i)},verb.eval.geom.intersect_rays=function(e,r,n,t){var i=numeric.dot(r,t),s=numeric.dot(r,n),u=numeric.dot(r,e),o=numeric.dot(t,n),a=numeric.dot(t,e),v=numeric.dot(r,r),l=numeric.dot(t,t),c=v*l-i*i;if(Math.abs(c)<verb.EPSILON)return null;var b=i*(s-u)-v*(o-a),h=b/c,m=(s-u+h*i)/v;return[m,h]},verb.eval.geom.intersect_3_planes=function(e,r,n,t,i,s){var u=numeric.cross(n,i),o=numeric.dot(e,u);if(Math.abs(o)<verb.EPSILON)return null;var a=numeric.add(numeric.mul(r,u),numeric.cross(e,numeric.sub(numeric.mul(s,n),numeric.mul(t,i))));return numeric.mul(1/o,a)},verb.eval.nurbs.refine_rational_surface_intersect_point=function(e,r,n,t,i,s,u,o,a,v,l,c,b){var h,m,_,g,f,d,p,y,k,x,E,N,z,w=1,M=0,A=function(e,r){return verb.eval.nurbs.rational_surface_derivs(n,t,i,s,u,1,e,r)},S=function(e,r){return verb.eval.nurbs.rational_surface_derivs(o,a,v,l,c,1,e,r)};do{if(h=A(e[0],e[1]),m=h[0][0],g=h[1][0],f=h[0][1],_=numeric.normalized(numeric.cross(g,f)),d=numeric.dot(_,m),p=S(r[0],r[1]),y=p[0][0],x=p[1][0],E=p[0][1],k=numeric.normalized(numeric.cross(x,E)),N=numeric.dot(k,y),z=numeric.norm2(numeric.sub(m,y)),b>z)break;var P=numeric.normalized(numeric.cross(_,k)),C=numeric.dot(P,m),R=verb.eval.geom.intersect_3_planes(_,d,k,N,P,C);if(null===R)throw Error("panic!");var I=numeric.sub(R,m),L=numeric.sub(R,y),O=numeric.cross(g,_),T=numeric.cross(f,_),B=numeric.cross(x,k),j=numeric.cross(E,k),D=numeric.dot(T,I)/numeric.dot(T,g),U=numeric.dot(O,I)/numeric.dot(O,f),V=numeric.dot(j,L)/numeric.dot(j,x),q=numeric.dot(B,L)/numeric.dot(B,E);e=numeric.add([D,U],e),r=numeric.add([V,q],r),M++}while(w>M);return{uv1:e,uv2:r,pt:m,d:z}},verb.eval.nurbs.intersect_rational_surface_surface_by_aabb_refine=function(e,r,n,t,i,s,u,o,a,v,l){var c={degree_u:e,degree_v:n,knots_u:r,knots_v:t,homo_control_points:i},b={minDivsU:20,minDivsV:20,tol:.05},h=verb.eval.nurbs.tessellate_rational_surface_adaptive(c.degree_u,c.knots_u,c.degree_v,c.knots_v,c.homo_control_points,b),m={degree_u:s,degree_v:o,knots_u:u,knots_v:a,homo_control_points:v},_=verb.eval.nurbs.tessellate_rational_surface_adaptive(m.degree_u,m.knots_u,m.degree_v,m.knots_v,m.homo_control_points,b),g=verb.eval.mesh.intersect_meshes_by_aabb(h.points,h.faces,h.uvs,_.points,_.faces,_.uvs),f=g.map(function(c){return c.map(function(c){return verb.eval.nurbs.refine_rational_surface_intersect_point(c.uvtri1,c.uvtri2,e,r,n,t,i,s,u,o,a,v,l)})});return f.map(function(e){return verb.eval.nurbs.rational_interp_curve(e.map(function(e){return e.pt}),2)})},verb.eval.mesh.intersect_meshes_by_aabb=function(e,r,n,t,i,s){var u=verb.range(r.length),o=verb.range(i.length),a=verb.eval.mesh.make_mesh_aabb_tree(e,r,u),v=verb.eval.mesh.make_mesh_aabb_tree(t,i,o),l=verb.eval.geom.intersect_aabb_trees(e,r,t,i,a,v),c=l.map(function(u){var o=verb.eval.geom.intersect_tris(e,r[u[0]],n,t,i[u[1]],s);return o?(o[0].tri1id=u[0],o[1].tri1id=u[0],o[0].tri2id=u[1],o[1].tri2id=u[1],o):o}).filter(function(e){return e}).filter(function(e){var r=numeric.sub(e[0].pt,e[1].pt);return numeric.dot(r,r)>verb.TOLERANCE});return c=verb.unique(c,function(e,r){var n=numeric.sub(e[0].uvtri1,r[0].uvtri1),t=numeric.dot(n,n),i=numeric.sub(e[1].uvtri1,r[1].uvtri1),s=numeric.dot(i,i),u=numeric.sub(e[0].uvtri1,r[1].uvtri1),o=numeric.dot(u,u),a=numeric.sub(e[1].uvtri1,r[0].uvtri1),v=numeric.dot(a,a);return verb.TOLERANCE>t&&verb.TOLERANCE>s||verb.TOLERANCE>o&&verb.TOLERANCE>v}),0===c.length?[]:verb.eval.mesh.make_intersect_polylines(c)},verb.eval.mesh.make_intersect_polylines=function(e){e.forEach(function(e){e[1].opp=e[0],e[0].opp=e[1]});var r=verb.eval.mesh.kdtree_from_segs(e),n=e.flatten();n.forEach(function(n){if(!n.adj){var t=verb.eval.mesh.lookup_adj_segment(n,r,e.length);t&&!t.adj&&(n.adj=t,t.adj=n)}});var t=n.filter(function(e){return!e.adj});0===t.length&&(t=n);var i=[];return t.forEach(function(e){if(!e.v){for(var r=[],n=e;n;){if(n.v)throw Error("Segment end encountered twice!");if(n.v=!0,n.opp.v=!0,r.push(n),n=n.opp.adj,n===e)break}r.length>0&&(r.push(r[r.length-1].opp),i.push(r))}}),i},verb.eval.mesh.pt_dist=function(e,r){return Math.pow(e.x-r.x,2)+Math.pow(e.y-r.y,2)+Math.pow(e.z-r.z,2)},verb.eval.mesh.kdtree_from_segs=function(e){var r=[];return e.forEach(function(e){r.push({x:e[0].pt[0],y:e[0].pt[1],z:e[0].pt[2],ele:e[0]}),r.push({x:e[1].pt[0],y:e[1].pt[1],z:e[1].pt[2],ele:e[1]})}),new KdTree(r,verb.eval.mesh.pt_dist,["x","y","z"])},verb.eval.mesh.lookup_adj_segment=function(e,r,n){var t=n?Math.min(n,3):3,i=r.nearest({x:e.pt[0],y:e.pt[1],z:e.pt[2]},t).filter(function(r){return e!=r[0].ele&&r[1]<verb.TOLERANCE}).map(function(e){return e[0].ele});return 1===i.length?i[0]:null},verb.eval.geom.intersect_tris=function(e,r,n,t,i,s){var u=verb.eval.geom.get_tri_norm(e,r),o=verb.eval.geom.get_tri_norm(t,i),a=e[r[0]],v=t[i[0]],l=verb.eval.geom.intersect_planes(a,u,v,o);if(!l.intersects)return null;var c=verb.eval.geom.clip_ray_in_coplanar_tri(l.origin,l.dir,e,r,n);if(null===c)return null;var b=verb.eval.geom.clip_ray_in_coplanar_tri(l.origin,l.dir,t,i,s);if(null===b)return null;var h=verb.eval.geom.merge_tri_clip_intervals(c,b,e,r,n,t,i,s);return null===h?null:[{uvtri1:h.uv1tri1,uvtri2:h.uv1tri2,pt:h.pt1},{uvtri1:h.uv2tri1,uvtri2:h.uv2tri2,pt:h.pt2}]},verb.eval.geom.clip_ray_in_coplanar_tri=function(e,r,n,t,i){for(var s=[n[t[0]],n[t[1]],n[t[2]]],i=[i[t[0]],i[t[1]],i[t[2]]],u=[numeric.sub(i[1],i[0]),numeric.sub(i[2],i[1]),numeric.sub(i[0],i[2])],o=[numeric.sub(s[1],s[0]),numeric.sub(s[2],s[1]),numeric.sub(s[0],s[2])],a=o.map(numeric.normalized),v=o.map(numeric.norm2),l=null,c=null,b=0;3>b;b++){var h=s[b],m=a[b],_=verb.eval.geom.intersect_rays(h,m,e,r);if(null!==_){var g=_[0],f=_[1];-verb.EPSILON>g||g>v[b]+verb.EPSILON||((null===l||l.u>f)&&(l={u:f,pt:verb.eval.geom.point_on_ray(e,r,f),uv:numeric.add(i[b],numeric.mul(g/v[b],u[b]))}),(null===c||f>c.u)&&(c={u:f,pt:verb.eval.geom.point_on_ray(e,r,f),uv:numeric.add(i[b],numeric.mul(g/v[b],u[b]))}))}}return null===c||null===l?null:{min:l,max:c}},verb.eval.geom.point_on_ray=function(e,r,n){return numeric.add(e,numeric.mul(n,r))},verb.eval.geom.merge_tri_clip_intervals=function(e,r,n,t,i,s,u,o){if(r.min.u>e.max.u+verb.EPSILON||e.min.u>r.max.u+verb.EPSILON)return null;e.min.tri=0,e.max.tri=0,r.min.tri=1,r.max.tri=1;var a=e.min.u>r.min.u?e.min:r.min,v=e.max.u<r.max.u?e.max:r.max,l={};return 0===a.tri?(l.uv1tri1=a.uv,l.uv1tri2=verb.eval.geom.tri_uv_from_point(s,u,o,a.pt)):(l.uv1tri1=verb.eval.geom.tri_uv_from_point(n,t,i,a.pt),l.uv1tri2=a.uv),l.pt1=a.pt,0===v.tri?(l.uv2tri1=v.uv,l.uv2tri2=verb.eval.geom.tri_uv_from_point(s,u,o,v.pt)):(l.uv2tri1=verb.eval.geom.tri_uv_from_point(n,t,i,v.pt),l.uv2tri2=v.uv),l.pt2=v.pt,l},verb.eval.geom.intersect_planes=function(e,r,n,t){var i=numeric.cross(r,t);if(numeric.dot(i,i)<verb.EPSILON)return{intersects:!1};var s=0,u=Math.abs(i[0]),o=Math.abs(i[1]),a=Math.abs(i[2]);o>u&&(s=1,u=o),a>u&&(s=2,u=a);var v,l,c,b;0===s?(v=r[1],l=r[2],c=t[1],b=t[2]):1===s?(v=r[0],l=r[2],c=t[0],b=t[2]):(v=r[0],l=r[1],c=t[0],b=t[1]);var h,m=-numeric.dot(e,r),_=-numeric.dot(n,t),g=v*b-l*c,f=(l*_-m*b)/g,d=(m*c-v*_)/g;return h=0===s?[0,f,d]:1===s?[f,0,d]:[f,d,0],{intersects:!0,origin:h,dir:numeric.normalized(i)}},verb.eval.geom.tri_uv_from_point=function(e,r,n,t){var i=e[r[0]],s=e[r[1]],u=e[r[2]],o=n[r[0]],a=n[r[1]],v=n[r[2]],l=numeric.sub(i,t),c=numeric.sub(s,t),b=numeric.sub(u,t),h=numeric.norm2(numeric.cross(numeric.sub(i,s),numeric.sub(i,u))),m=numeric.norm2(numeric.cross(c,b))/h,_=numeric.norm2(numeric.cross(b,l))/h,g=numeric.norm2(numeric.cross(l,c))/h;return numeric.add(numeric.mul(m,o),numeric.mul(_,a),numeric.mul(g,v))},verb.eval.nurbs.tessellate_rational_surface_naive=function(e,r,n,t,i,s,u){1>s&&(s=1),1>u&&(u=1);for(var o=r[r.length-1]-r[0],a=t[t.length-1]-t[0],v=o/s,l=a/u,c=[],b=[],h=[],m=0;s+1>m;m++)for(var _=0;u+1>_;_++){var g=m*v,f=_*l;b.push([g,f]);var d=verb.eval.nurbs.rational_surface_derivs(e,r,n,t,i,1,g,f),p=d[0][0];c.push(p);var y=numeric.normalized(numeric.cross(d[0][1],d[1][0]));h.push(y)}for(var k=[],m=0;s>m;m++)for(var _=0;u>_;_++){var x=m*(u+1)+_,E=(m+1)*(u+1)+_,N=E+1,z=x+1,w=[x,E,N],M=[x,N,z];k.push(w),k.push(M)}return{points:c,faces:k,uvs:b,normals:h}},verb.eval.nurbs.rational_curve_regular_sample=function(e,r,n,t,i){return verb.eval.nurbs.rational_curve_regular_sample_range(e,r,n,0,1,t,i)},verb.eval.nurbs.rational_curve_regular_sample_range=function(e,r,n,t,i,s,u){1>s&&(s=2);for(var o=[],a=(i-t)/(s-1),v=0,l=0;s>l;l++)v=t+a*l,u?o.push([v].concat(verb.eval.nurbs.rational_curve_point(e,r,n,v))):o.push(verb.eval.nurbs.rational_curve_point(e,r,n,v));return o},verb.eval.nurbs.rational_curve_adaptive_sample=function(e,r,n,t,i){return 1===e?i?n.map(function(e,n){return[r[n+1]].concat(verb.eval.nurbs.dehomogenize(e))}):n.map(verb.eval.nurbs.dehomogenize):verb.eval.nurbs.rational_curve_adaptive_sample_range(e,r,n,r[0],r[r.length-1],t,i)},verb.eval.nurbs.rational_curve_adaptive_sample_range=function(e,r,n,t,i,s,u){var o=verb.eval.nurbs.rational_curve_point(e,r,n,t),a=verb.eval.nurbs.rational_curve_point(e,r,n,i),v=.5+.2*Math.random(),l=t+(i-t)*v,c=verb.eval.nurbs.rational_curve_point(e,r,n,l),b=numeric.sub(o,a),h=numeric.sub(o,c);if(s>numeric.dot(b,b)&&numeric.dot(h,h)>s||!verb.eval.nurbs.three_points_are_flat(o,c,a,s)){var m=t+.5*(i-t),_=verb.eval.nurbs.rational_curve_adaptive_sample_range(e,r,n,t,m,s,u),g=verb.eval.nurbs.rational_curve_adaptive_sample_range(e,r,n,m,i,s,u);return _.slice(0,-1).concat(g)}return u?[[t].concat(o),[i].concat(a)]:[o,a]},verb.eval.nurbs.three_points_are_flat=function(e,r,n,t){var i=numeric.sub(r,e),s=numeric.sub(n,e),u=crossprod(i,s),o=numeric.dot(u,u);return t>o},verb.eval.nurbs.divide_rational_surface_adaptive=function(e,r,n,t,i,s){var u,o,a,v,l={degree_u:e,knots_u:r,degree_v:n,knots_v:t,homo_control_points:i};s=s||{},s.minDivsU=s.minDivsU||1,s.minDivsV=s.minDivsV||1,s.refine=void 0!=s.refine?s.refine:!0;var c=s.minDivsU=Math.max(s.minDivsU,3*(i.length-1)),b=s.minDivsV=Math.max(s.minDivsV,3*(i.length-1)),h=verb.last(r),m=r[0],_=verb.last(t),g=t[0],f=(h-m)/c,d=(_-g)/b,p=[],y=[];for(u=0,a=b+1;a>u;u++){var k=[];for(o=0,v=c+1;v>o;o++){var x=m+f*o,E=g+d*u,N=verb.eval.nurbs.rational_surface_derivs(e,r,n,t,i,1,x,E),z=numeric.normalized(numeric.cross(N[0][1],N[1][0]));k.push(new verb.geom.SurfacePoint(N[0][0],z,[x,E],null,verb.isZero(z)))}y.push(k)}for(u=0;b>u;u++)for(o=0;c>o;o++){var w=[y[b-u-1][o],y[b-u-1][o+1],y[b-u][o+1],y[b-u][o]];p.push(new verb.eval.nurbs.AdaptiveRefinementNode(l,w))}if(!s.refine)return p;for(u=0;b>u;u++)for(o=0;c>o;o++){var M=u*c+o,A=verb.north(M,u,o,c,b,p),S=verb.east(M,u,o,c,b,p),P=verb.south(M,u,o,c,b,p),C=verb.west(M,u,o,c,b,p);p[M].neighbors=[P,S,A,C],p[M].divide(s)}return p},verb.north=function(e,r,n,t,i,s){return 0===r?null:s[e-t]},verb.south=function(e,r,n,t,i,s){return r===i-1?null:s[e+t]},verb.east=function(e,r,n,t,i,s){return n===t-1?null:s[e+1]},verb.west=function(e,r,n,t,i,s){return 0===n?null:s[e-1]},verb.eval.nurbs.triangulate_adaptive_refinement_node_tree=function(e){var r=verb.geom.TriMesh.empty();return e.forEach(function(e){e.triangulate(r)}),r},verb.eval.nurbs.tessellate_rational_surface_adaptive=function(e,r,n,t,i,s){var u=verb.eval.nurbs.divide_rational_surface_adaptive(e,r,n,t,i,s);return verb.eval.nurbs.triangulate_adaptive_refinement_node_tree(u)},verb.eval.nurbs.dist_to_seg=function(e,r,n){var t=numeric.sub(n,e),i=numeric.norm2(t),s=numeric.sub(r,e);if(verb.TOLERANCE>i)return numeric.norm2(s);var u=numeric.mul(1/i,t),o=numeric.dot(s,u),a=numeric.add(e,numeric.mul(o,u));return numeric.norm2(numeric.sub(a,r))},verb.geom.SurfacePoint=function(e,r,n,t,i){this.uv=n,this.point=e,this.normal=r,this.id=t,this.degen=i},verb.geom.SurfacePoint.fromUv=function(e,r){return new verb.geom.SurfacePoint(null,null,[e,r],null,null)},verb.geom.TriMesh=function(e,r,n,t){this.faces=e,this.points=r,this.uvs=n,this.normals=t},verb.geom.TriMesh.empty=function(){return new verb.geom.TriMesh([],[],[],[])},verb.eval.nurbs.AdaptiveRefinementNode=function(e,r,n,t){if(this.srf=e,this.parentNode=n,this.neighbors=t||[null,null,null,null],!r){var i=e?e.knots_u[0]:null,s=e?verb.last(e.knots_u):null,u=e?e.knots_v[0]:null,o=e?verb.last(e.knots_v):null;r=[verb.geom.SurfacePoint.fromUv(i,u),verb.geom.SurfacePoint.fromUv(s,u),verb.geom.SurfacePoint.fromUv(s,o),verb.geom.SurfacePoint.fromUv(i,o)]}this.corners=r},verb.eval.nurbs.AdaptiveRefinementNode.prototype.isLeaf=function(){return void 0===this.children},verb.eval.nurbs.AdaptiveRefinementNode.prototype.center=function(){return this.centerPoint||this.evalSrf(this.u05,this.v05)},verb.eval.nurbs.AdaptiveRefinementNode.prototype.evalCorners=function(){this.u05=this.u05||(this.corners[0].uv[0]+this.corners[2].uv[0])/2,this.v05=this.v05||(this.corners[0].uv[1]+this.corners[2].uv[1])/2;for(var e=0;4>e;e++)if(!this.corners[e].point){var r=this.corners[e];this.evalSrf(r.uv[0],r.uv[1],r)}},verb.eval.nurbs.AdaptiveRefinementNode.prototype.evalSrf=function(e,r,n){var t=verb.eval.nurbs.rational_surface_derivs(this.srf.degree_u,this.srf.knots_u,this.srf.degree_v,this.srf.knots_v,this.srf.homo_control_points,1,e,r),i=t[0][0],s=numeric.cross(t[0][1],t[1][0]),u=verb.isZero(s);return u||(s=numeric.normalized(s)),n?(n.degen=u,n.point=i,n.normal=s,n):new verb.geom.SurfacePoint(i,s,[e,r],null,u)},verb.eval.nurbs.AdaptiveRefinementNode.prototype.getEdgeCorners=function(e){if(this.isLeaf())return[this.corners[e]];if(this.horizontal)switch(e){case 0:return this.children[0].getEdgeCorners(0);case 1:return this.children[0].getEdgeCorners(1).concat(this.children[1].getEdgeCorners(1));case 2:return this.children[1].getEdgeCorners(2);case 3:return this.children[1].getEdgeCorners(3).concat(this.children[0].getEdgeCorners(3))}switch(e){case 0:return this.children[0].getEdgeCorners(0).concat(this.children[1].getEdgeCorners(0));case 1:return this.children[1].getEdgeCorners(1);case 2:return this.children[1].getEdgeCorners(2).concat(this.children[0].getEdgeCorners(2));case 3:return this.children[0].getEdgeCorners(3)}},verb.eval.nurbs.AdaptiveRefinementNode.prototype.getAllCorners=function(e){var r=[this.corners[e]];if(!this.neighbors[e])return r;var n=this.neighbors[e].getEdgeCorners((e+2)%4),t=e%2,i=verb.EPSILON,s=this,u=[function(e){return e.uv[0]>s.corners[0].uv[0]+i&&e.uv[0]<s.corners[2].uv[0]-i},function(e){return e.uv[1]>s.corners[0].uv[1]+i&&e.uv[1]<s.corners[2].uv[1]-i}];return r.concat(n.filter(u[t]).reverse())},verb.eval.nurbs.AdaptiveRefinementNode.prototype.midpoint=function(e){if(this.midPoints||(this.midpoints=[null,null,null,null]),this.midpoints[e])return this.midpoints[e];switch(e){case 0:this.midpoints[0]=this.evalSrf(this.u05,this.corners[0].uv[1]);break;case 1:this.midpoints[1]=this.evalSrf(this.corners[1].uv[0],this.v05);break;case 2:this.midpoints[2]=this.evalSrf(this.u05,this.corners[2].uv[1]);break;case 3:this.midpoints[3]=this.evalSrf(this.corners[0].uv[0],this.v05)}return this.midpoints[e]},verb.isZero=function(e){for(var r=0,n=e.length;n>r;r++)if(Math.abs(e[r])>verb.TOLERANCE)return!1;return!0},verb.eval.nurbs.AdaptiveRefinementNode.prototype.hasBadNormals=function(){return this.corners[0].degen||this.corners[1].degen||this.corners[2].degen||this.corners[3].degen},verb.eval.nurbs.AdaptiveRefinementNode.prototype.fixNormals=function(){for(var e=0,r=this.corners.length;r>e;e++)if(this.corners[e],this.corners[e].degen){var n=this.corners[(e+1)%r],t=this.corners[(e+3)%r];this.corners[e].normal=n.degen?t.normal:n.normal}},verb.eval.nurbs.AdaptiveRefinementNode.prototype.shouldDivide=function(e,r){if(e.minDepth>r)return!0;if(r>=e.maxDepth)return!1;if(this.hasBadNormals())return this.fixNormals(),!1;if(this.splitVert=numeric.norm2Squared(numeric.sub(this.corners[0].normal,this.corners[1].normal))>e.normTol||numeric.norm2Squared(numeric.sub(this.corners[2].normal,this.corners[3].normal))>e.normTol,this.splitHoriz=numeric.norm2Squared(numeric.sub(this.corners[1].normal,this.corners[2].normal))>e.normTol||numeric.norm2Squared(numeric.sub(this.corners[3].normal,this.corners[0].normal))>e.normTol,this.splitVert||this.splitHoriz)return!0;var n=this.center();return numeric.norm2Squared(numeric.sub(n.normal,this.corners[0].normal))>e.normTol||numeric.norm2Squared(numeric.sub(n.normal,this.corners[1].normal))>e.normTol||numeric.norm2Squared(numeric.sub(n.normal,this.corners[2].normal))>e.normTol||numeric.norm2Squared(numeric.sub(n.normal,this.corners[3].normal))>e.normTol},verb.eval.nurbs.AdaptiveRefinementNode.prototype.divide=function(e){e=e||{},e.edgeTol=e.edgeTol||.1,e.normTol=e.normTol||.05,e.minDepth=void 0!=e.minDepth?e.minDepth:0,e.maxDepth=void 0!=e.maxDepth?e.maxDepth:10,this._divide(e,0,!0)},verb.eval.nurbs.AdaptiveRefinementNode.prototype._divide=function(e,r,n){if(this.evalCorners(),this.shouldDivide(e,r)){if(r++,this.splitVert&&!this.splitHoriz?n=!1:!this.splitVert&&this.splitHoriz&&(n=!0),this.horizontal=n,this.horizontal){var t=[this.corners[0],this.corners[1],this.midpoint(1),this.midpoint(3)],i=[this.midpoint(3),this.midpoint(1),this.corners[2],this.corners[3]];this.children=[new verb.eval.nurbs.AdaptiveRefinementNode(this.srf,t,this),new verb.eval.nurbs.AdaptiveRefinementNode(this.srf,i,this)],this.children[0].neighbors=[this.neighbors[0],this.neighbors[1],this.children[1],this.neighbors[3]],this.children[1].neighbors=[this.children[0],this.neighbors[1],this.neighbors[2],this.neighbors[3]]}else{var s=[this.corners[0],this.midpoint(0),this.midpoint(2),this.corners[3]],u=[this.midpoint(0),this.corners[1],this.corners[2],this.midpoint(2)];this.children=[new verb.eval.nurbs.AdaptiveRefinementNode(this.srf,s,this),new verb.eval.nurbs.AdaptiveRefinementNode(this.srf,u,this)],this.children[0].neighbors=[this.neighbors[0],this.children[1],this.neighbors[2],this.neighbors[3]],this.children[1].neighbors=[this.neighbors[0],this.neighbors[1],this.neighbors[2],this.children[0]]}this.children.forEach(function(t){t._divide(e,r,!n)})}},verb.eval.nurbs.AdaptiveRefinementNode.prototype.triangulate=function(e){return e=e||verb.geom.TriMesh.empty(),this.isLeaf()?this.triangulateLeaf(e):(this.children.forEach(function(r){r&&r.triangulate(e)}),e)},verb.eval.nurbs.AdaptiveRefinementNode.prototype.triangulateLeaf=function(e){var r,n,t,i,s=e.points.length,u=[],o=[],a=0;for(a=0;4>a;a++){var v=this.getAllCorners(a);for(2===v.length&&(i=a+1),t=0;v.length>t;t++)u.push(v[t])}for(a=0,n=u.length;n>a;a++)r=u[a],void 0==r.id?(e.uvs.push(r.uv),e.points.push(r.point),e.normals.push(r.normal),r.id=s,o.push(s),s++):o.push(r.id);if(4===u.length)return e.faces.push([o[0],o[3],o[1]]),e.faces.push([o[3],o[2],o[1]]),e;if(5===u.length){var l=o.length;return e.faces.push([o[i],o[(i+1)%l],o[(i+2)%l]]),e.faces.push([o[(i+4)%l],o[(i+3)%l],o[i]]),e.faces.push([o[i],o[(i+2)%l],o[(i+3)%l]]),e}var c=this.center();e.uvs.push(c.uv),e.points.push(c.point),e.normals.push(c.normal);var b=e.points.length-1;for(a=0,t=u.length-1;u.length>a;t=a++)e.faces.push([b,o[t],o[a]]);return e},verb.eval.nurbs.rational_interp_curve=function(e,r){if(r=r||3,r+1>e.length)throw Error("You need to supply at least degree + 1 points!");for(var n=[0],t=1;e.length>t;t++){var i=numeric.norm2(numeric.sub(e[t],e[t-1])),s=n[n.length-1];n.push(s+i)}for(var u=n[n.length-1],t=0;n.length>t;t++)n[t]=n[t]/u;for(var o=numeric.rep([r+1],0),a=e.length-1,t=1,v=n.length-r;v>t;t++){for(var l=0,c=0;r>c;c++)l+=n[t+c];o.push(1/r*l)}for(var b=o.concat(numeric.rep([r+1],1)),h=[],t=0;n.length>t;t++){var m=n[t],_=verb.eval.nurbs.knot_span_given_n(a,r,m,b),g=verb.eval.nurbs.basis_functions_given_knot_span_index(_,m,r,b),f=_-r,d=verb.eval.nurbs.zeros_1d(f),p=verb.eval.nurbs.zeros_1d(e.length-(r+1)-f);h.push(d.concat(g).concat(p))}for(var y=e[0].length,k=[],t=0;y>t;t++){var x=e.map(function(e){return e[t]}),E=numeric.solve(h,x);k.push(E)}var N=numeric.transpose(k),z=numeric.rep([N.length],1);return{control_points:N,knots:b,degree:r,weights:z}},verb.eval.nurbs.get_sweep1_surface=function(e,r,n,t,i,s,u,o){for(var a=verb.eval.nurbs.homogenize_1d(u,o),v=verb.eval.nurbs.rational_curve_point(s,i,a,0),l=1/u.length,c=[],b=[],h=0;u.length>h;h++){for(var m=verb.eval.nurbs.rational_curve_point(s,i,a,h*l),_=numeric.sub(m,v),g=[],f=[],d=0;n.length>d;d++)g.push(numeric.add(_,n[d])),f.push(t[d]*o[h]);c.push(g),b.push(f)}return{knots_u:i,knots_v:e,control_points:c,degree_u:s,degree_v:r,weights:b}},verb.eval.nurbs.get_ellipse_arc=function(e,r,n,t,i,s,u){s>u&&(u=2*Math.PI+s);var o=u-s,a=0;a=Math.PI/2>=o?1:Math.PI>=o?2:3*Math.PI/2>=o?3:4;var v=o/a,l=Math.cos(v/2),c=numeric.add(e,numeric.mul(t,Math.cos(s),r),numeric.mul(i,Math.sin(s),n)),b=numeric.sub(numeric.mul(Math.cos(s),n),numeric.mul(Math.sin(s),r)),h=verb.eval.nurbs.zeros_1d(2*a),m=verb.eval.nurbs.zeros_1d(2*a+3),_=0,g=s,f=verb.eval.nurbs.zeros_1d(2*a);h[0]=c,f[0]=1;for(var d=1;a>=d;d++){g+=v;var p=numeric.add(e,numeric.mul(t,Math.cos(g),r),numeric.mul(i,Math.sin(g),n));f[_+2]=1,h[_+2]=p;var y=numeric.sub(numeric.mul(Math.cos(g),n),numeric.mul(Math.sin(g),r)),k=verb.eval.geom.intersect_rays(c,numeric.mul(1/numeric.norm2(b),b),p,numeric.mul(1/numeric.norm2(y),y)),x=numeric.add(c,numeric.mul(b,k[0]));f[_+1]=l,h[_+1]=x,_+=2,a>d&&(c=p,b=y)}for(var E=2*a+1,d=0;3>d;d++)m[d]=0,m[d+E]=1;switch(a){case 1:break;case 2:m[3]=m[4]=.5;break;case 3:m[3]=m[4]=1/3,m[5]=m[6]=2/3;break;case 4:m[3]=m[4]=.25,m[5]=m[6]=.5,m[7]=m[8]=.75}return{knots:m,control_points:h,degree:2,weights:f}},verb.eval.nurbs.get_sphere_surface=function(e,r,n,t){var i=verb.eval.nurbs.get_arc(e,numeric.mul(r,-1),n,t,0,Math.PI);return verb.eval.nurbs.get_revolved_surface(e,r,2*Math.PI,i.knots,i.degree,i.control_points,i.weights)},verb.eval.nurbs.get_polyline_curve=function(e){for(var r=e.length-1,n=1/r,t=[0,0],i=1;r>i;i++)t.push(i*n);t.push(1),t.push(1);for(var s=[],i=0;e.length>i;i++)s.push(1);return{knots:t,control_points:e.slice(0),degree:1,weights:s}},verb.eval.nurbs.get_4pt_surface=function(e,r,n,t){var i=numeric.mul(.5,numeric.add(e,t)),s=numeric.mul(.5,numeric.add(r,n)),u=numeric.mul(.5,numeric.add(n,t)),o=numeric.mul(.5,numeric.add(e,r)),a=numeric.mul(.5,numeric.add(i,s));return{knots_u:[0,0,0,1,1,1],knots_v:[0,0,0,1,1,1],control_points:[[e,i,t],[o,a,u],[r,s,n]],degree_u:2,degree_v:2,weights:[[1,1,1],[1,1,1],[1,1,1]]}},verb.eval.nurbs.get_cylinder_surface=function(e,r,n,t,i){var s=crossprod(e,r),u=(2*Math.PI,verb.eval.nurbs.get_arc(n,r,s,i,0,2*Math.PI));return verb.eval.nurbs.get_extruded_surface(e,t,u.knots,u.degree,u.control_points,u.weights)},verb.eval.nurbs.get_cone_surface=function(e,r,n,t,i){var s=2*Math.PI,u=1,o=[numeric.add(n,numeric.mul(t,e)),numeric.add(n,numeric.mul(i,r))],a=[0,0,1,1],v=[1,1];
return verb.eval.nurbs.get_revolved_surface(n,e,s,a,u,o,v)},verb.eval.nurbs.get_extruded_surface=function(e,r,n,t,i,s){for(var u=verb.eval.nurbs.zeros_2d(3,i.length),o=verb.eval.nurbs.zeros_2d(3,i.length),a=numeric.mul(e,r),v=numeric.mul(e,.5*r),l=0;i.length>l;l++)u[2][l]=i[l],u[1][l]=numeric.add(v,i[l]),u[0][l]=numeric.add(a,i[l]),o[0][l]=s[l],o[1][l]=s[l],o[2][l]=s[l];return{knots_u:[0,0,0,1,1,1],knots_v:n,control_points:u,degree_u:2,degree_v:t,weights:o}},verb.eval.nurbs.get_revolved_surface=function(e,r,n,t,i,s,u){var o,a,v,l;Math.PI/2>=n?(o=1,a=verb.eval.nurbs.zeros_1d(6+2*(o-1))):Math.PI>=n?(o=2,a=verb.eval.nurbs.zeros_1d(6+2*(o-1)),a[3]=a[4]=.5):3*Math.PI/2>=n?(o=3,a=verb.eval.nurbs.zeros_1d(6+2*(o-1)),a[3]=a[4]=1/3,a[5]=a[6]=2/3):(o=4,a=verb.eval.nurbs.zeros_1d(6+2*(o-1)),a[3]=a[4]=.25,a[5]=a[6]=.5,a[7]=a[8]=.75);for(var c=n/o,b=3+2*(o-1),h=0;3>h;b++,h++)a[h]=0,a[b]=1;for(var m=Math.cos(c/2),_=0,g=verb.eval.nurbs.zeros_1d(o+1),f=verb.eval.nurbs.zeros_1d(o+1),v=verb.eval.nurbs.zeros_2d(2*o+1,s.length),l=verb.eval.nurbs.zeros_2d(2*o+1,s.length),h=1;o>=h;h++)_+=c,f[h]=Math.cos(_),g[h]=Math.sin(_);for(b=0;s.length>b;b++){var d=verb.eval.geom.closest_point_on_ray(s[b],e,r),p=numeric.sub(s[b],d),y=numeric.norm2(p),k=crossprod(r,p);y>verb.EPSILON&&(p=numeric.mul(1/y,p),k=numeric.mul(1/y,k)),v[0][b]=s[b];var x=s[b];l[0][b]=u[b];for(var E=k,N=0,_=0,h=1;o>=h;h++){var z=0==y?d:numeric.add(d,numeric.mul(y,f[h],p),numeric.mul(y,g[h],k));v[N+2][b]=z,l[N+2][b]=u[b];var w=numeric.sub(numeric.mul(f[h],k),numeric.mul(g[h],p));if(0==y)v[N+1][b]=d;else{var M=verb.eval.geom.intersect_rays(x,numeric.mul(1/numeric.norm2(E),E),z,numeric.mul(1/numeric.norm2(w),w)),A=numeric.add(x,numeric.mul(E,M[0]));v[N+1][b]=A}l[N+1][b]=m*u[b],N+=2,o>h&&(x=z,E=w)}}return{knots_u:a,knots_v:t,control_points:v,degree_u:2,degree_v:i,weights:l}},verb.eval.nurbs.get_arc=function(e,r,n,t,i,s){return verb.eval.nurbs.get_ellipse_arc(e,r,n,t,t,i,s)},verb.eval.nurbs.curve_bezier_decompose=function(e,r,n){for(var t=verb.eval.nurbs.knot_multiplicities(r),i=e+1,s=verb.eval.nurbs.curve_knot_refine,u=0;t.length>u;u++)if(i>t[u][1]){var o=numeric.rep([i-t[u][1]],t[u][0]),a=s(e,r,n,o);r=a.knots,n=a.control_points}r.length/i-1;for(var v=2*i,l=[],u=0;n.length>u;u+=i){var c=r.slice(u,u+v),b=n.slice(u,u+i);l.push({degree:e,knots:c,control_points:b})}return l},verb.eval.nurbs.knot_multiplicities=function(e){for(var r=[[e[0],0]],n=r[0],t=0;e.length>t;t++)Math.abs(e[t]-n[0])>verb.EPSILON&&(n=[e[t],0],r.push(n)),n[1]++;return r},verb.eval.nurbs.curve_split=function(e,r,n,t){for(var i=[],s=0;e+1>s;s++)i.push(t);var u=verb.eval.nurbs.curve_knot_refine(e,r,n,i),o=verb.eval.nurbs.knot_span(e,t,r),a=u.knots.slice(0,o+e+2),v=u.knots.slice(o+1),l=u.control_points.slice(0,o+1),c=u.control_points.slice(o+1);return[{degree:e,knots:a,control_points:l},{degree:e,knots:v,control_points:c}]},verb.eval.nurbs.curve_knot_refine=function(e,r,n,t){var i=n.length-1,s=i+e+1,u=t.length-1,o=verb.eval.nurbs.knot_span(e,t[0],r),a=verb.eval.nurbs.knot_span(e,t[u],r),v=Array(n.length+u+1),l=Array(r.length+u+1),c=0,b=0;for(c=0;o-e>=c;c++)v[c]=n[c];for(c=a-1;i>=c;c++)v[c+u+1]=n[c];for(c=0;o>=c;c++)l[c]=r[c];for(c=a+e;s>=c;c++)l[c+u+1]=r[c];c=a+e-1;var h=a+e+u;for(b=u;b>=0;b--){for(;t[b]<=r[c]&&c>o;)v[h-e-1]=n[c-e-1],l[h]=r[c],h-=1,c-=1;v[h-e-1]=v[h-e];for(var m=1;e>=m;m++){var _=h-e+m,g=l[h+m]-t[b];Math.abs(g)<verb.EPSILON?v[_-1]=v[_]:(g/=l[h+m]-r[c-e+m],v[_-1]=numeric.add(numeric.mul(g,v[_-1]),numeric.mul(1-g,v[_])))}l[h]=t[b],h-=1}return{knots:l,control_points:v}},verb.eval.nurbs.curve_knot_insert=function(e,r,n,t,i){var s=0,u=n.length,o=verb.eval.nurbs.knot_span(e,t,r),a=u+i,v=Array(e-s),l=Array(r.length+i),c=Array(a),b=0;for(b=0;o>=b;b++)l[b]=r[b];for(b=1;i>=b;b++)l[o+b]=t;for(b=o+1;r.length>b;b++)l[b+i]=r[b];for(b=0;o-e>=b;b++)c[b]=n[b];for(b=o-s;u>b;b++)c[b+i]=n[b];for(b=0;e-s>=b;b++)v[b]=n[o-e+b];for(var h=0,m=0,_=1;i>=_;_++){for(h=o-e+_,b=0;e-_-s>=b;b++)m=(t-r[h+b])/(r[b+o+1]-r[h+b]),v[b]=numeric.add(numeric.mul(m,v[b+1]),numeric.mul(1-m,v[b]));c[h]=v[0],c[o+i-_-s]=v[e-_-s]}for(b=h+1;o-s>b;b++)c[b]=v[b-h];return{knots:l,control_points:c}},verb.eval.nurbs.rational_surface_curvature=function(e,r,n,t,i,s,u){var o=verb.eval.nurbs.rational_surface_derivs(e,r,n,t,i,2,s,u),a=o[0][1],v=o[1][0],l=o[0][2],c=o[2][0],b=o[1][1],h=numeric.cross(a,v),m=numeric.dot(l,h),_=numeric.dot(b,h),g=numeric.dot(c,h),f=[[m,_],[_,g]],d=numeric.eig(f),p=d.lambda.x[0],y=d.lambda.x[1],k=.5*(p+y),x=p*y,E=numeric.add(numeric.mul(d.E.x[0][0],a),numeric.mul(d.E.x[0][1],v)),N=numeric.add(numeric.mul(d.E.x[1][0],a),numeric.mul(d.E.x[1][1],v));return{point:o[0][0],normal:h,mean:k,gaussian:x,shapeOperator:f,k1:p,k2:y,p1:E,p2:N,p1p:d.E.x[0],p2p:d.E.x[1]}},verb.eval.nurbs.rational_surface_derivs=function(e,r,n,t,i,s,u,o){var a=verb.eval.nurbs.surface_derivs(e,r,n,t,i,s,u,o),v=verb.eval.nurbs.separate_homo_derivs_2d(a),l=v[0],c=v[1],b=0,h=0,m=0,_=0,g=[],f=l[0][0].length;for(b=0;s>=b;b++)for(g.push([]),_=0;s-b>=_;_++){var o=l[b][_];for(m=1;_>=m;m++)o=numeric.sub(o,numeric.mul(numeric.mul(binomial.get(_,m),c[0][m]),g[b][_-m]));for(h=1;b>=h;h++){o=numeric.sub(o,numeric.mul(numeric.mul(binomial.get(b,h),c[h][0]),g[b-h][_]));var d=verb.eval.nurbs.zeros_1d(f);for(m=1;_>=m;m++)d=numeric.add(d,numeric.mul(numeric.mul(binomial.get(_,m),c[h][m]),g[b-h][_-m]));o=numeric.sub(o,numeric.mul(binomial.get(b,h),d))}g[b].push(numeric.mul(1/c[0][0],o))}return g},verb.eval.nurbs.rational_surface_point=function(e,r,n,t,i,s,u){return verb.eval.nurbs.dehomogenize(verb.eval.nurbs.surface_point(e,r,n,t,i,s,u))},verb.eval.nurbs.rational_curve_derivs=function(e,r,n,t,i){var s=verb.eval.nurbs.separate_homo_derivs_1d(verb.eval.nurbs.curve_derivs(e,r,n,t,i)),u=s[0],o=s[1],a=0,v=0,l=[];for(a=0;i>=a;a++){var c=u[a];for(v=1;a>=v;v++)c=numeric.sub(c,numeric.mul(numeric.mul(binomial.get(a,v),o[v]),l[a-v]));l.push(numeric.mul(1/o[0],c))}return l},verb.eval.nurbs.separate_homo_derivs_1d=function(e){for(var r=e[0].length,n=r-1,t=[],i=[],s=0,u=e.length;u>s;s++)t.push(e[s].slice(0,n)),i.push(e[s][n]);return[t,i]},verb.eval.nurbs.separate_homo_derivs_2d=function(e){for(var r=[],n=[],t=0,i=e.length;i>t;t++){var s=verb.eval.nurbs.separate_homo_derivs_1d(e[t]);r.push(s[0]),n.push(s[1])}return[r,n]},verb.eval.nurbs.rational_curve_point=function(e,r,n,t){return verb.eval.nurbs.dehomogenize(verb.eval.nurbs.curve_point(e,r,n,t))},verb.eval.nurbs.dehomogenize=function(e){for(var r=e.length,n=[],t=e[r-1],i=0;e.length-1>i;i++)n.push(e[i]/t);return n},verb.eval.nurbs.weight_1d=function(e){var r=e[0].length-1;return e.map(function(e){return e[r]})},verb.eval.nurbs.dehomogenize_1d=function(e){return e.map(function(e){return verb.eval.nurbs.dehomogenize(e)})},verb.eval.nurbs.homogenize_1d=function(e,r){for(var n=e.length,t=e[0].length,i=0,s=[],u=0,o=[],a=0;n>a;a++){var v=[];for(o=e[a],u=r[a],i=0;t>i;i++)v.push(o[i]*u);v.push(u),s.push(v)}return s},verb.eval.nurbs.homogenize_2d=function(e,r){for(var n=e.length,t=(e[0].length,e[0][0].length,[]),i=0;n>i;i++)t.push(verb.eval.nurbs.homogenize_1d(e[i],r[i]));return t},verb.eval.nurbs.surface_derivs=function(e,r,n,t,i,s,u,o){var a=r.length-e-2,v=t.length-n-2;return verb.eval.nurbs.surface_derivs_given_n_m(a,e,r,v,n,t,i,s,u,o)},verb.eval.nurbs.surface_derivs_given_n_m=function(e,r,n,t,i,s,u,o,a,v){if(verb.eval.nurbs.are_valid_relations(r,u.length,n.length)===!1||verb.eval.nurbs.are_valid_relations(i,u[0].length,s.length)===!1)return console.error("Invalid relations between control points, knot vector, and n"),null;var l=u[0][0].length,c=Math.min(o,r),b=Math.min(o,i),h=verb.eval.nurbs.zeros_3d(c+1,b+1,l),m=verb.eval.nurbs.knot_span_given_n(e,r,a,n),_=verb.eval.nurbs.knot_span_given_n(t,i,v,s),g=verb.eval.nurbs.deriv_basis_functions_given_n_i(m,a,r,e,n),f=verb.eval.nurbs.deriv_basis_functions_given_n_i(_,v,i,t,s),d=verb.eval.nurbs.zeros_2d(i+1,l),p=0,y=0,k=0,x=0,E=0;for(p=0;c>=p;p++){for(y=0;i>=y;y++)for(d[y]=verb.eval.nurbs.zeros_1d(l),k=0;r>=k;k++)d[y]=numeric.add(d[y],numeric.mul(g[p][k],u[m-r+k][_-i+y]));for(E=Math.min(o-p,b),x=0;E>=x;x++)for(h[p][x]=verb.eval.nurbs.zeros_1d(l),y=0;i>=y;y++)h[p][x]=numeric.add(h[p][x],numeric.mul(f[x][y],d[y]))}return h},verb.eval.nurbs.surface_point=function(e,r,n,t,i,s,u){var o=r.length-e-2,a=t.length-n-2;return verb.eval.nurbs.surface_point_given_n_m(o,e,r,a,n,t,i,s,u)},verb.eval.nurbs.volume_point=function(e,r,n,t,i,s,u,o,a,v){var l=r.length-e-2,c=t.length-n-2,b=s.length-i-2;return verb.eval.nurbs.volume_point_given_n_m_l(l,e,r,c,n,t,b,i,s,u,o,a,v)},verb.eval.nurbs.volume_point_given_n_m_l=function(e,r,n,t,i,s,u,o,a,v,l,c,b){if(!verb.eval.nurbs.are_valid_relations(r,v.length,n.length)||!verb.eval.nurbs.are_valid_relations(i,v[0].length,s.length)||!verb.eval.nurbs.are_valid_relations(o,v[0][0].length,a.length))return console.error("Invalid relations between control points and knot vector"),null;for(var h=v[0][0][0].length,m=verb.eval.nurbs.knot_span_given_n(e,r,l,n),_=verb.eval.nurbs.knot_span_given_n(t,i,c,s),g=verb.eval.nurbs.knot_span_given_n(u,o,b,a),f=verb.eval.nurbs.basis_functions_given_knot_span_index(m,l,r,n),d=verb.eval.nurbs.basis_functions_given_knot_span_index(_,c,i,s),p=verb.eval.nurbs.basis_functions_given_knot_span_index(g,b,o,a),y=m-r,k=_,x=g,E=verb.eval.nurbs.zeros_1d(h),N=verb.eval.nurbs.zeros_1d(h),z=verb.eval.nurbs.zeros_1d(h),w=0,M=0,A=0;o>=A;A++){for(z=verb.eval.nurbs.zeros_1d(h),x=g-o+A,w=0;i>=w;w++){for(N=verb.eval.nurbs.zeros_1d(h),k=_-i+w,M=0;r>=M;M++)N=numeric.add(N,numeric.mul(f[M],v[y+M][k][x]));z=numeric.add(z,numeric.mul(d[w],N))}E=numeric.add(E,numeric.mul(p[A],z))}return E},verb.eval.nurbs.surface_point_given_n_m=function(e,r,n,t,i,s,u,o,a){if(verb.eval.nurbs.are_valid_relations(r,u.length,n.length)===!1||verb.eval.nurbs.are_valid_relations(i,u[0].length,s.length)===!1)return console.error("Invalid relations between control points, knot vector, and n"),null;var v=u[0][0].length,l=verb.eval.nurbs.knot_span_given_n(e,r,o,n),c=verb.eval.nurbs.knot_span_given_n(t,i,a,s),b=verb.eval.nurbs.basis_functions_given_knot_span_index(l,o,r,n),h=verb.eval.nurbs.basis_functions_given_knot_span_index(c,a,i,s),m=l-r,_=c,g=verb.eval.nurbs.zeros_1d(v),f=verb.eval.nurbs.zeros_1d(v),d=0,p=0;for(d=0;i>=d;d++){for(f=verb.eval.nurbs.zeros_1d(v),_=c-i+d,p=0;r>=p;p++)f=numeric.add(f,numeric.mul(b[p],u[m+p][_]));g=numeric.add(g,numeric.mul(h[d],f))}return g},verb.eval.nurbs.curve_derivs=function(e,r,n,t,i){var s=r.length-e-2;return verb.eval.nurbs.curve_derivs_given_n(s,e,r,n,t,i)},verb.eval.nurbs.curve_derivs_given_n=function(e,r,n,t,i,s){if(verb.eval.nurbs.are_valid_relations(r,t.length,n.length)===!1)return console.error("Invalid relations between control points, knot vector, and n"),null;var u=t[0].length,o=Math.min(s,r),a=verb.eval.nurbs.zeros_2d(o+1,u),v=verb.eval.nurbs.knot_span_given_n(e,r,i,n),l=verb.eval.nurbs.deriv_basis_functions_given_n_i(v,i,r,o,n),c=0,b=0;for(c=0;o>=c;c++)for(b=0;r>=b;b++)a[c]=numeric.add(a[c],numeric.mul(l[c][b],t[v-r+b]));return a},verb.eval.nurbs.are_valid_relations=function(e,r,n){return 0===r+e+1-n?!0:!1},verb.eval.nurbs.curve_point=function(e,r,n,t){var i=r.length-e-2;return verb.eval.nurbs.curve_point_given_n(i,e,r,n,t)},verb.eval.nurbs.curve_point_given_n=function(e,r,n,t,i){if(verb.eval.nurbs.are_valid_relations(r,t.length,n.length)===!1)return console.error("Invalid relations between control points, knot vector, and n"),null;for(var s=verb.eval.nurbs.knot_span_given_n(e,r,i,n),u=verb.eval.nurbs.basis_functions_given_knot_span_index(s,i,r,n),o=verb.eval.nurbs.zeros_1d(t[0].length),a=0;r>=a;a++)o=numeric.add(o,numeric.mul(u[a],t[s-r+a]));return o},verb.eval.nurbs.zeros_1d=function(e){return numeric.rep([e],0)},verb.eval.nurbs.zeros_2d=function(e,r){return r=r>0?r:0,e=e>0?e:0,numeric.rep([e,r],0)},verb.eval.nurbs.zeros_3d=function(e,r,n){return r=r>0?r:0,e=e>0?e:0,numeric.rep([e,r,n],0)},verb.eval.nurbs.deriv_basis_functions=function(e,r,n){var t=verb.eval.nurbs.knot_span(r,e,n),i=n.length-1,s=i-r-1;return verb.eval.nurbs.deriv_basis_functions_given_n_i(t,e,r,s,n)},verb.eval.nurbs.deriv_basis_functions_given_n_i=function(e,r,n,t,i){var s=verb.eval.nurbs.zeros_2d(n+1,n+1),u=Array(n+1),o=Array(n+1),a=0,v=0,l=1,c=0;for(s[0][0]=1,l=1;n>=l;l++){for(u[l]=r-i[e+1-l],o[l]=i[e+l]-r,a=0,c=0;l>c;c++)s[l][c]=o[c+1]+u[l-c],v=s[c][l-1]/s[l][c],s[c][l]=a+o[c+1]*v,a=u[l-c]*v;s[l][l]=a}var b=verb.eval.nurbs.zeros_2d(t+1,n+1),h=verb.eval.nurbs.zeros_2d(2,n+1),m=1,_=0,g=1,f=0,d=0,p=0,y=0,k=0;for(l=0;n>=l;l++)b[0][l]=s[l][n];for(c=0;n>=c;c++)for(_=0,g=1,h[0][0]=1,m=1;t>=m;m++){for(f=0,d=c-m,p=n-m,c>=m&&(h[g][0]=h[_][0]/s[p+1][d],f=h[g][0]*s[d][p]),y=d>=-1?1:-d,k=p>=c-1?m-1:n-c,l=y;k>=l;l++)h[g][l]=(h[_][l]-h[_][l-1])/s[p+1][d+l],f+=h[g][l]*s[d+l][p];p>=c&&(h[g][m]=-h[_][m-1]/s[p+1][c],f+=h[g][m]*s[c][p]),b[m][c]=f,l=_,_=g,g=l}for(c=n,m=1;t>=m;m++){for(l=0;n>=l;l++)b[m][l]*=c;c*=n-m}return b},verb.eval.nurbs.basis_functions=function(e,r,n){var t=verb.eval.nurbs.knot_span(e,r,n);return verb.eval.nurbs.basis_functions_given_knot_span_index(t,e,r,n)},verb.eval.nurbs.basis_functions_given_knot_span_index=function(e,r,n,t){var i=Array(n+1),s=Array(n+1),u=Array(n+1),o=0,a=0;i[0]=1;for(var v=1;n>=v;v++){s[v]=r-t[e+1-v],u[v]=t[e+v]-r,o=0;for(var l=0;v>l;l++)a=i[l]/(u[l+1]+s[v-l]),i[l]=o+u[l+1]*a,o=s[v-l]*a;i[v]=o}return i},verb.eval.nurbs.knot_span=function(e,r,n){var t=n.length-1,i=t-e-1;return verb.eval.nurbs.knot_span_given_n(i,e,r,n)},verb.eval.nurbs.knot_span_given_n=function(e,r,n,t){if(n>=t[e+1])return e;if(t[r]>n)return r;for(var i=r,s=e+1,u=Math.floor((i+s)/2);t[u]>n||n>=t[u+1];)t[u]>n?s=u:i=u,u=Math.floor((i+s)/2);return u};