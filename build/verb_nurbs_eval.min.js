/*! verb 2013-11-26 */
function crossprod(e,r){return[e[1]*r[2]-e[2]*r[1],e[2]*r[0]-e[0]*r[2],e[0]*r[1]-e[1]*r[0]]}if("object"!=typeof exports||void 0===exports)importScripts("labor.js");else var labor=require("labor");var verb=verb||{};verb.eval=verb.eval||{},verb.eval.nurbs=verb.eval.nurbs||{},verb.eval.mesh=verb.eval.mesh||{},verb.geom=verb.geom||{},verb.EPSILON=1e-8,verb.TOLERANCE=.001;var router=new labor.Router(verb.eval.nurbs);verb.eval.nurbs.get_sweep1_surface=function(e,r,n,t,i,s){for(var a=verb.eval.nurbs.homogenize_1d(rail_control_points,rail_weights),o=verb.eval.nurbs.rational_curve_point(s,i,a,0),u=1/rail_control_points.length,v=[],l=[],b=0;rail_control_points>b;b++){for(var c=verb.eval.nurbs.rational_curve_point(s,i,a,b*u),_=verb.sub(c,o),h=[],g=[],m=0;n>m;m++)h.push(numeric.add(_,n[m])),g.push(n[m]*rail_control_points[b]);v.add(h),l.add(g)}return{knots_u:i,knots_v:e,control_points:v,degree_u:s,degree_v:r,weights:l}},verb.eval.nurbs.get_ellipse_arc=function(e,r,n,t,i,s,a){s>a&&(a=2*Math.PI+s);var o=a-s,u=0;u=Math.PI/2>=o?1:Math.PI>=o?2:3*Math.PI/2>=o?3:4;var v=o/u,l=Math.cos(v/2),b=numeric.add(e,numeric.mul(t,Math.cos(s),r),numeric.mul(i,Math.sin(s),n)),c=numeric.sub(numeric.mul(Math.cos(s),n),numeric.mul(Math.sin(s),r)),_=verb.eval.nurbs.zeros_1d(2*u),h=verb.eval.nurbs.zeros_1d(2*u+3),g=0,m=s,d=verb.eval.nurbs.zeros_1d(2*u);_[0]=b,d[0]=1;for(var p=1;u>=p;p++){m+=v;var f=numeric.add(e,numeric.mul(t,Math.cos(m),r),numeric.mul(i,Math.sin(m),n));d[g+2]=1,_[g+2]=f;var y=numeric.sub(numeric.mul(Math.cos(m),n),numeric.mul(Math.sin(m),r)),x=verb.eval.geom.intersect_rays(b,numeric.mul(1/numeric.norm2(c),c),f,numeric.mul(1/numeric.norm2(y),y)),k=numeric.add(b,numeric.mul(c,x[0]));d[g+1]=l,_[g+1]=k,g+=2,u>p&&(b=f,c=y)}for(var w=2*u+1,p=0;3>p;p++)h[p]=0,h[p+w]=1;switch(u){case 1:break;case 2:h[3]=h[4]=.5;break;case 3:h[3]=h[4]=1/3,h[5]=h[6]=2/3;break;case 4:h[3]=h[4]=.25,h[5]=h[6]=.5,h[7]=h[8]=.75}return{knots:h,control_points:_,degree:2,weights:d}},verb.eval.nurbs.get_sphere_surface=function(e,r,n,t){var i=verb.eval.nurbs.get_arc(e,numeric.mul(r,-1),n,t,0,Math.PI);return verb.eval.nurbs.get_revolved_surface(e,r,2*Math.PI,i.knots,i.degree,i.control_points,i.weights)},verb.eval.nurbs.get_polyline_curve=function(e){for(var r=e.length-1,n=1/r,t=[0,0],i=1;r>i;i++)t.push(i*n);t.push(1),t.push(1);for(var s=[],i=0;e.length>i;i++)s.push(1);return{knots:t,control_points:e.slice(0),degree:1,weights:s}},verb.eval.nurbs.get_4pt_surface=function(e,r,n,t){return{knots_u:[0,0,1,1],knots_v:[0,0,1,1],control_points:[[e,t],[r,n]],degree_u:1,degree_v:1,weights:[[1,1],[1,1]]}},verb.eval.nurbs.get_cylinder_surface=function(e,r,n,t,i){var s=crossprod(e,r),a=(2*Math.PI,verb.eval.nurbs.get_arc(n,r,s,i,0,2*Math.PI));return verb.eval.nurbs.get_extruded_surface(e,t,a.knots,a.degree,a.control_points,a.weights)},verb.eval.nurbs.get_cone_surface=function(e,r,n,t,i){var s=2*Math.PI,a=1,o=[numeric.add(n,numeric.mul(t,e)),numeric.add(n,numeric.mul(i,r))],u=[0,0,1,1],v=[1,1];return verb.eval.nurbs.get_revolved_surface(n,e,s,u,a,o,v)},verb.eval.nurbs.get_extruded_surface=function(e,r,n,t,i,s){for(var a=verb.eval.nurbs.zeros_2d(2,i.length),o=verb.eval.nurbs.zeros_2d(2,i.length),u=0;i.length>u;u++)a[0][u]=i[u],o[0][u]=s[u];for(var v=numeric.mul(e,r),u=0;i.length>u;u++)a[1][u]=numeric.add(v,i[u]),o[1][u]=s[u];return{knots_u:[0,0,1,1],knots_v:n,control_points:a,degree_u:1,degree_v:t,weights:o}},verb.eval.nurbs.get_revolved_surface=function(e,r,n,t,i,s,a){var o,u,v,l;Math.PI/2>=n?(o=1,u=verb.eval.nurbs.zeros_1d(6+2*(o-1))):Math.PI>=n?(o=2,u=verb.eval.nurbs.zeros_1d(6+2*(o-1)),u[3]=u[4]=.5):3*Math.PI/2>=n?(o=3,u=verb.eval.nurbs.zeros_1d(6+2*(o-1)),u[3]=u[4]=1/3,u[5]=u[6]=2/3):(o=4,u=verb.eval.nurbs.zeros_1d(6+2*(o-1)),u[3]=u[4]=.25,u[5]=u[6]=.5,u[7]=u[8]=.75);for(var b=n/o,c=3+2*(o-1),_=0;3>_;c++,_++)u[_]=0,u[c]=1;for(var h=Math.cos(b/2),g=0,m=verb.eval.nurbs.zeros_1d(o+1),d=verb.eval.nurbs.zeros_1d(o+1),v=verb.eval.nurbs.zeros_2d(2*o+1,s.length),l=verb.eval.nurbs.zeros_2d(2*o+1,s.length),_=1;o>=_;_++)g+=b,d[_]=Math.cos(g),m[_]=Math.sin(g);for(c=0;s.length>c;c++){var p=verb.eval.geom.closest_point_on_ray(s[c],e,r),f=numeric.sub(s[c],p),y=numeric.norm2(f),x=crossprod(r,f);y>verb.EPSILON&&(f=numeric.mul(1/y,f),x=numeric.mul(1/y,x)),v[0][c]=s[c];var k=s[c];l[0][c]=a[c];for(var w=x,M=0,g=0,_=1;o>=_;_++){var z=0==y?p:numeric.add(p,numeric.mul(y,d[_],f),numeric.mul(y,m[_],x));v[M+2][c]=z,l[M+2][c]=a[c];var N=numeric.sub(numeric.mul(d[_],x),numeric.mul(m[_],f));if(0==y)v[M+1][c]=p;else{var P=verb.eval.geom.intersect_rays(k,numeric.mul(1/numeric.norm2(w),w),z,numeric.mul(1/numeric.norm2(N),N)),E=numeric.add(k,numeric.mul(w,P[0]));v[M+1][c]=E}l[M+1][c]=h*a[c],M+=2,o>_&&(k=z,w=N)}}return{knots_u:u,knots_v:t,control_points:v,degree_u:2,degree_v:i,weights:l}},verb.eval.nurbs.get_arc=function(e,r,n,t,i,s){return verb.eval.nurbs.get_ellipse_arc(e,r,n,t,t,i,s)},verb.eval.nurbs.intersect_rational_surfaces=function(){},verb.eval.mesh.intersect_meshes=function(){},verb.eval.mesh.intersect_meshes_by_aabb=function(e,r,n,t,i){var s=_.range(r.length),a=_.range(i.length),o=verb.eval.mesh.make_mesh_aabb_tree(e,r,s),u=verb.eval.mesh.make_mesh_aabb_tree(t,i,a);verb.eval.mesh.intersect_aabb_tree(e,r,t,i,o,u)},verb.eval.geom.intersect_tris=function(e,r,n,t,i){for(var s=[e[tr1[0]],e[tr1[1]]],a=[e[tr1[1]],e[tr1[2]]],o=[e[tr1[2]],e[tr1[0]]],u=[t[tr2[0]],t[tr2[1]]],v=[t[tr2[1]],t[tr2[2]]],l=[t[tr2[2]],t[tr2[0]]],b=[s,a,o],c=[u,v,l],_=[],h=verb.eval.geom.get_tri_norm(t,i),g=t[tr2[0]],m=0;3>m;m++){var d=verb.eval.geom.intersect_segment_with_plane(b[m][0],c[m][1],g,h);d.intersects&&_.push(d)}if(2!==_.length)return null;for(var p=[_[0].point,_[1].point],f=[],m=0;3>m;m++){var y=verb.eval.geom.intersect_segments(p[0],p[1],p,b1,tol);y&&f.push(y)}0===f.length||1===f.length||2===f.length},verb.eval.geom.intersect_segment_with_tri=function(e,r,n,t){var i=n[t[0]],s=n[t[1]],a=n[t[2]],o=numeric.sub(s,i),u=numeric.sub(a,i),v=numeric.dot(o,u),l=numeric.dot(o,o),b=numeric.dot(u,u),c=v*v-l*b,_=(v*numeric.dot(o,u)-b*numeric.dot(w,o))/c,h=(v*numeric.dot(w,o)-l*numeric.dot(w,u))/c;if(_>1+EPSILON||h>1+EPSILON||-EPSILON>h||-EPSILON>_||_+h>1+EPSILON)return null;var g=numeric.add(i,numeric.add(numeric.mul(_,o),numeric.mul(h,u))),m=numeric.sub(e,r),d=numeric.dot(m,m),p=numeric.sub(g,r),f=numeric.dot(p,p),y=f/d;return{point:g,s:_,t:h,param:y}},verb.eval.geom.intersect_segment_with_plane=function(e,r,n,t){var i=numeric.dot(t,numeric.sub(e,r));if(EPSILON>abs(i))return null;var s=numeric.dot(t,numeric.sub(n,e));return{param:s/i}},verb.eval.geom.intersect_aabb_trees=function(e,r,n,t,i,s){var a=i.bounding_box.intersects(s.bounding_box);return a?0===i.children.length&&0===s.children.length?[[i.triangle,s.triangle]]:0===i.children.length&&0!=s.children.length?verb.eval.geom.intersect_aabb_trees(e,r,n,t,i,s.children[0]).concat(verb.eval.geom.intersect_aabb_trees(e,r,n,t,i,s.children[1])):0!=i.children.length&&0===s.children.length?verb.eval.geom.intersect_aabb_trees(e,r,n,t,i.children[0],s).concat(verb.eval.geom.intersect_aabb_trees(e,r,n,t,i.children[1],s)):0!=i.children.length&&0!=s.children.length?verb.eval.geom.intersect_aabb_trees(e,r,n,t,i.children[0],s.children[0]).concat(verb.eval.geom.intersect_aabb_trees(e,r,n,t,i.children[0],s.children[1])).concat(verb.eval.geom.intersect_aabb_trees(e,r,n,t,i.children[1],s.children[0])).concat(verb.eval.geom.intersect_aabb_trees(e,r,n,t,i.children[1],s.children[1])):void 0:[]},verb.eval.mesh.make_mesh_aabb_tree=function(e,r,n){var t={bounding_box:verb.eval.mesh.make_mesh_aabb(e,r,n),children:[]};if(1===n.length)return t.triangle=n[0],t;var i=verb.eval.mesh.sort_tris_on_longest_axis(t.bounding_box,e,r,n),s=i.slice(0,Math.floor(i.length/2)),a=i.slice(Math.floor(i.length/2),i.length);return t.children=[verb.eval.mesh.make_mesh_aabb_tree(e,r,s),verb.eval.mesh.make_mesh_aabb_tree(e,r,a)],t},verb.eval.mesh.make_mesh_aabb=function(e,r,n){for(var t=new verb.geom.BoundingBox,i=n.length-1;i>=0;i--){var s=n[i];t.add(e[r[s][0]]),t.add(e[r[s][1]]),t.add(e[r[s][2]])}return t},verb.eval.mesh.sort_tris_on_longest_axis=function(e,r,n,t){for(var i=e.get_longest_axis(),s=[],a=t.length-1;a>=0;a--){var o=t[a],u=verb.eval.mesh.get_min_coordinate_on_axis(r,n[o],i);s.push([u,o])}s.sort(function(e,r){return e[0]>r[0]});for(var v=[],a=0,l=s.length;l>a;a++)v.push(s[a][1]);return v},verb.eval.mesh.get_min_coordinate_on_axis=function(e,r,n){for(var t=[],i=0;3>i;i++)t.push(e[r[i]][n]);return Math.min.apply(Math,t)},verb.eval.geom.get_tri_centroid=function(e,r){for(var n=[0,0,0],t=0;3>t;t++)for(var i=0;3>i;i++)n[i]+=e[r[t]][i];for(var t=0;3>t;t++)n[t]/=3;return n},verb.eval.geom.get_tri_norm=function(e,r){var n=e[r[0]],t=e[r[1]],i=e[r[2]],s=numeric.sub(t,n),a=numeric.sub(i,n),o=numeric.cross(s,a);return numeric.mul(1/numeric.norm2(o),o)},verb.eval.mesh.tesselate_rational_surface_naive=function(e,r,n,t,i,s,a){1>s&&(s=1),1>a&&(a=1);for(var o=1/s,u=1/a,v=[],l=[],b=0;s+1>b;b++)for(var c=0;a+1>c;c++){var _=b*o,h=c*u;l.push([_,h]),v.push(verb.eval.nurbs.rational_surface_point(e,r,n,t,i,_,h))}for(var g=[],b=0;s>b;b++)for(var c=0;a>c;c++){var m=b*(a+1)+c,d=(b+1)*(a+1)+c,p=d+1,f=m+1,y=[m,d,p],x=[m,p,f];g.push(y),g.push(x)}return{points:v,faces:g,uvs:l}},verb.eval.nurbs.rational_curve_curve_bb_intersect_refine=function(e,r,n,t,i,s,a){var o=function(a){var o=verb.eval.nurbs.rational_curve_point(e,r,n,a[0]),u=verb.eval.nurbs.rational_curve_point(t,i,s,a[1]),v=numeric.sub(o,u);return numeric.dot(v,v)},u=numeric.uncmin(o,a);return[u.f].concat(u.solution)},verb.eval.nurbs.intersect_rational_curves_by_aabb=function(e,r,n,t,i,s,a,o){var u=verb.eval.nurbs.parametric_polyline_polyline_bb_intersect(e,r,n,a),v=verb.eval.nurbs.parametric_polyline_polyline_bb_intersect(e,r,n,a),l=_.map(u,function(e){return e[0]}),b=_.map(v,function(e){return e[0]}),c=_.map(u,function(e){return e.slice(1)}),h=_.map(v,function(e){return e.slice(1)});return verb.eval.nurbs.parametric_polyline_polyline_bb_intersect(c,h,l,b,o)},verb.eval.nurbs.intersect_parametric_polylines_by_aabb=function(e,r,n,t,i){var s=new verb.geom.BoundingBox(e),a=new verb.geom.BoundingBox(r);if(s.intersects(a)){if(2!==e.length||2!==r.length){if(2===e.length){var o=Math.ceil(r.length/2),u=r.slice(0,o),v=t.slice(0,o),l=r.slice(o-1);return m=r.slice(o-1),verb.eval.nurbs.parametric_polyline_polyline_bb_intersect(e,u,n,v,i).concat(verb.eval.nurbs.parametric_polyline_polyline_bb_intersect(e,l,n,m,i))}if(2===r.length){var b=Math.ceil(e.length/2),c=e.slice(0,b),_=n.slice(0,b),h=e.slice(b-1);return g=e.slice(b-1),verb.eval.nurbs.parametric_polyline_polyline_bb_intersect(r,c,t,c,i).concat(verb.eval.nurbs.parametric_polyline_polyline_bb_intersect(r,h,t,g,i))}var b=Math.ceil(e.length/2),c=e.slice(0,b),_=n.slice(0,b),h=e.slice(b-1),g=e.slice(b-1),o=Math.ceil(r.length/2),u=r.slice(0,o),v=t.slice(0,o),l=r.slice(o-1),m=r.slice(o-1);return verb.eval.nurbs.parametric_polyline_polyline_bb_intersect(c,u,_,u,i).concat(verb.eval.nurbs.parametric_polyline_polyline_bb_intersect(c,l,_,m,i)).concat(verb.eval.nurbs.parametric_polyline_polyline_bb_intersect(h,u,g,v,i)).concat(verb.eval.nurbs.parametric_polyline_polyline_bb_intersect(h,l,g,m,i))}var d=verb.eval.geom.segment_segment_intersect(e[0],e[1],r[0],r[1],i);return null!=d?(d[0][0]=d[0][0]*(n[1]-n[0])+n[0],d[1][0]=d[1][0]*(t[1]-t[0])+t[0],d):[]}},verb.eval.geom.intersect_segments=function(e,r,n,t){var i=numeric.sub(r,e),s=Math.sqrt(numeric.dot(i,i)),a=numeric.mul(1/s,i);if(b1mb0=numeric.sub(t,n),bN=Math.sqrt(numeric.dot(b1mb0,b1mb0)),a=numeric.mul(1/bN,i),int_params=ray_ray_intersect(e,a,n,b),null!=int_params){var o=Math.min(Math.max(0,int_params[0]/a),1),u=Math.min(Math.max(0,int_params[1]/b),1),v=numeric.add(numeric.mul(o,i),e),l=numeric.add(numeric.mul(u,b1mb0),n),c=numeric.norm2Squared(numeric.sub(v,l));if(tolerance*tolerance>c)return[[o].concat(v),[u].concat(l)]}return null},verb.eval.geom.closest_point_on_ray=function(e,r,n){var t=numeric.sub(e,r),i=numeric.dot(t,n),s=numeric.add(r,numeric.mul(i,n));return s},verb.eval.geom.intersect_rays=function(e,r,n,t){var i=numeric.dot(r,t),s=numeric.dot(r,n),a=numeric.dot(r,e),o=numeric.dot(t,n),u=numeric.dot(t,e),v=numeric.dot(r,r),l=numeric.dot(t,t),b=v*l-i*i;if(Math.abs(b)<verb.EPSILON)return null;var c=i*(s-a)-v*(o-u),_=c/b,h=(s-a+_*i)/v;return[h,_]},verb.eval.nurbs.rational_curve_regular_sample=function(e,r,n,t){return verb.eval.nurbs.rational_curve_regular_sample_range(e,r,n,0,1,t)},verb.eval.nurbs.rational_curve_regular_sample_range=function(e,r,n,t,i,s){1>s&&(s=2);for(var a=[],o=(i-t)/(s-1),u=0,v=0;s>v;v++)u=t+o*v,a.push([u].concat(verb.eval.nurbs.rational_curve_point(e,r,n,u)));return a},verb.eval.nurbs.rational_curve_adaptive_sample=function(e,r,n,t){return 1===e?n.map(verb.eval.nurbs.dehomogenize):verb.eval.nurbs.rational_curve_adaptive_sample_range(e,r,n,0,1,t)},verb.eval.nurbs.rational_curve_adaptive_sample_range=function(e,r,n,t,i,s){var a=verb.eval.nurbs.rational_curve_point(e,r,n,t),o=verb.eval.nurbs.rational_curve_point(e,r,n,i),u=.45+.1*Math.random(),v=t+(i-t)*u,l=verb.eval.nurbs.rational_curve_point(e,r,n,v);if(verb.eval.nurbs.three_points_are_flat(a,l,o,s))return[[t,a[0],a[1],a[2]],[i,o[0],o[1],o[2]]];var b=verb.eval.nurbs.rational_curve_adaptive_sample_range(e,r,n,t,v,s),c=verb.eval.nurbs.rational_curve_adaptive_sample_range(e,r,n,v,i,s);return b.slice(0,-1).concat(c)},verb.eval.nurbs.three_points_are_flat=function(e,r,n,t){var i=new verb.geom.Vector3(e),s=new verb.geom.Vector3(r),a=new verb.geom.Vector3(n),o=s.minus(i).cross(a.minus(i)),u=o.dot(o);return t>u},verb.eval.nurbs.curve_knot_insert=function(e,r,n,t,i,s){var a=(n[0].length,r.length-e-2),o=n.length,u=verb.eval.nurbs.knot_span(e,t,r),v=a+e+1,l=o+s,b=Array(e+1),c=Array(r.length+s),_=Array(l),h=0;for(h=0;u>=h;h++)c[h]=r[h];for(h=1;s>=h;h++)c[u+h]=t;for(h=u+1;v>=h;h++)c[h+s]=r[h];for(h=0;u-e>=h;h++)_[h]=n[h];for(h=u-i;a>=h;h++)_[h+s]=n[h];for(h=0;e-i>=h;h++)b[h]=n[u-e+1];for(var g=0,m=0,d=1;s>=d;d++){for(g=u-e+d,h=0;e-d-i>=h;h++)m=(t-r[g+h])/(r[h+u+1]-r[g+h]),b[h]=numeric.add(numeric.mul(m,b[h+1]),numeric.mul(1-m,b[h]));_[g]=b[0],_[u+s-d-i]=b[e-d-i]}for(h=g+1;u-i>h;h++)_[h]=b[h-g];return[c,_]},verb.eval.nurbs.rational_surface_derivs=function(e,r,n,t,i,s,a,o){var u=verb.eval.nurbs.surface_derivs(e,r,n,t,i,s,a,o),v=verb.eval.nurbs.separate_homo_derivs_2d(u),l=v[0],b=v[1],c=0,_=0,h=0,g=0,m=[],d=l[0][0].length;for(c=0;s>=c;c++)for(m.push([]),g=0;s-c>=g;g++){var o=l[c][g];for(h=1;g>=h;h++)o=numeric.sub(o,numeric.mul(numeric.mul(binomial.get(g,h),b[0][h]),m[c][g-h]));for(_=1;c>=_;_++){o=numeric.sub(o,numeric.mul(numeric.mul(binomial.get(c,_),b[_][0]),m[c-_][g]));var p=verb.eval.nurbs.zeros_1d(d);for(h=1;g>=h;h++)p=numeric.add(p,numeric.mul(numeric.mul(binomial.get(g,h),b[_][h]),m[c-_][g-h]));o=numeric.sub(o,numeric.mul(binomial.get(c,_),p))}m[c].push(numeric.mul(1/b[0][0],o))}return m},verb.eval.nurbs.rational_surface_point=function(e,r,n,t,i,s,a){return verb.eval.nurbs.dehomogenize(verb.eval.nurbs.surface_point(e,r,n,t,i,s,a))},verb.eval.nurbs.rational_curve_derivs=function(e,r,n,t,i){var s=verb.eval.nurbs.separate_homo_derivs_1d(verb.eval.nurbs.curve_derivs(e,r,n,t,i)),a=s[0],o=s[1],u=0,v=0,l=[];for(u=0;i>=u;u++){var b=a[u];for(v=1;u>=v;v++)b=numeric.sub(b,numeric.mul(numeric.mul(binomial.get(u,v),o[v]),l[u-v]));l.push(numeric.mul(1/o[0],b))}return l},verb.eval.nurbs.separate_homo_derivs_1d=function(e){for(var r=e[0].length,n=r-1,t=[],i=[],s=0,a=e.length;a>s;s++)t.push(e[s].slice(0,n)),i.push(e[s][n]);return[t,i]},verb.eval.nurbs.separate_homo_derivs_2d=function(e){for(var r=[],n=[],t=0,i=e.length;i>t;t++){var s=verb.eval.nurbs.separate_homo_derivs_1d(e[t]);r.push(s[0]),n.push(s[1])}return[r,n]},verb.eval.nurbs.rational_curve_point=function(e,r,n,t){return verb.eval.nurbs.dehomogenize(verb.eval.nurbs.curve_point(e,r,n,t))},verb.eval.nurbs.dehomogenize=function(e){for(var r=e.length,n=[],t=e[r-1],i=0;e.length-1>i;i++)n.push(e[i]/t);return n},verb.eval.nurbs.homogenize_1d=function(e,r){for(var n=e.length,t=e[0].length,i=0,s=[],a=0,o=[],u=0;n>u;u++){var v=[];for(o=e[u],a=r[u],i=0;t>i;i++)v.push(o[i]*a);v.push(a),s.push(v)}return s},verb.eval.nurbs.homogenize_2d=function(e,r){for(var n=e.length,t=(e[0].length,e[0][0].length,[]),i=0;n>i;i++)t.push(verb.eval.nurbs.homogenize_1d(e[i],r[i]));return t},verb.eval.nurbs.surface_derivs=function(e,r,n,t,i,s,a,o){var u=r.length-e-2,v=t.length-n-2;return verb.eval.nurbs.surface_derivs_given_n_m(u,e,r,v,n,t,i,s,a,o)},verb.eval.nurbs.surface_derivs_given_n_m=function(e,r,n,t,i,s,a,o,u,v){if(verb.eval.nurbs.are_valid_relations(r,a.length,n.length)===!1||verb.eval.nurbs.are_valid_relations(i,a[0].length,s.length)===!1)return console.error("Invalid relations between control points, knot vector, and n"),null;var l=a[0][0].length,b=Math.min(o,r),c=Math.min(o,i),_=verb.eval.nurbs.zeros_3d(b+1,c+1,l),h=verb.eval.nurbs.knot_span_given_n(e,r,u,n),g=verb.eval.nurbs.knot_span_given_n(t,i,v,s),m=verb.eval.nurbs.deriv_basis_functions_given_n_i(h,u,r,e,n),d=verb.eval.nurbs.deriv_basis_functions_given_n_i(g,v,i,t,s),p=verb.eval.nurbs.zeros_2d(i+1,l),f=0,y=0,x=0,k=0,w=0;for(f=0;b>=f;f++){for(y=0;i>=y;y++)for(p[y]=verb.eval.nurbs.zeros_1d(l),x=0;r>=x;x++)p[y]=numeric.add(p[y],numeric.mul(m[f][x],a[h-r+x][g-i+y]));for(w=Math.min(o-f,c),k=0;w>=k;k++)for(_[f][k]=verb.eval.nurbs.zeros_1d(l),y=0;i>=y;y++)_[f][k]=numeric.add(_[f][k],numeric.mul(d[k][y],p[y]))}return _},verb.eval.nurbs.surface_point=function(e,r,n,t,i,s,a){var o=r.length-e-2,u=t.length-n-2;return verb.eval.nurbs.surface_point_given_n_m(o,e,r,u,n,t,i,s,a)},verb.eval.nurbs.surface_point_given_n_m=function(e,r,n,t,i,s,a,o,u){if(verb.eval.nurbs.are_valid_relations(r,a.length,n.length)===!1||verb.eval.nurbs.are_valid_relations(i,a[0].length,s.length)===!1)return console.error("Invalid relations between control points, knot vector, and n"),null;var v=a[0][0].length,l=verb.eval.nurbs.knot_span_given_n(e,r,o,n),b=verb.eval.nurbs.knot_span_given_n(t,i,u,s),c=verb.eval.nurbs.basis_functions_given_knot_span_index(l,o,r,n),_=verb.eval.nurbs.basis_functions_given_knot_span_index(b,u,i,s),h=l-r,g=b,m=verb.eval.nurbs.zeros_1d(v),d=verb.eval.nurbs.zeros_1d(v),p=0,f=0;for(p=0;i>=p;p++){for(d=verb.eval.nurbs.zeros_1d(v),g=b-i+p,f=0;r>=f;f++)d=numeric.add(d,numeric.mul(c[f],a[h+f][g]));m=numeric.add(m,numeric.mul(_[p],d))}return m},verb.eval.nurbs.curve_derivs=function(e,r,n,t,i){var s=r.length-e-2;return verb.eval.nurbs.curve_derivs_given_n(s,e,r,n,t,i)},verb.eval.nurbs.curve_derivs_given_n=function(e,r,n,t,i,s){if(verb.eval.nurbs.are_valid_relations(r,t.length,n.length)===!1)return console.error("Invalid relations between control points, knot vector, and n"),null;var a=t[0].length,o=Math.min(s,r),u=verb.eval.nurbs.zeros_2d(o+1,a),v=verb.eval.nurbs.knot_span_given_n(e,r,i,n),l=verb.eval.nurbs.deriv_basis_functions_given_n_i(v,i,r,o,n),b=0,c=0;for(b=0;o>=b;b++)for(c=0;r>=c;c++)u[b]=numeric.add(u[b],numeric.mul(l[b][c],t[v-r+c]));return u},verb.eval.nurbs.are_valid_relations=function(e,r,n){return 0===r+e+1-n?!0:!1},verb.eval.nurbs.curve_point=function(e,r,n,t){var i=r.length-e-2;return verb.eval.nurbs.curve_point_given_n(i,e,r,n,t)},verb.eval.nurbs.curve_point_given_n=function(e,r,n,t,i){if(verb.eval.nurbs.are_valid_relations(r,t.length,n.length)===!1)return console.error("Invalid relations between control points, knot vector, and n"),null;for(var s=verb.eval.nurbs.knot_span_given_n(e,r,i,n),a=verb.eval.nurbs.basis_functions_given_knot_span_index(s,i,r,n),o=verb.eval.nurbs.zeros_1d(t[0].length),u=0;r>=u;u++)o=numeric.add(o,numeric.mul(a[u],t[s-r+u]));return o},verb.eval.nurbs.zeros_1d=function(e){e=e>0?e:0;for(var r=[];e--;)r.push(0);return r},verb.eval.nurbs.zeros_2d=function(e,r){r=r>0?r:0,e=e>0?e:0;for(var n=[],t=r,i=e;e--;){for(n.push([]);t--;)n[i-e-1].push(0);t=r}return n},verb.eval.nurbs.zeros_3d=function(e,r,n){r=r>0?r:0,e=e>0?e:0;for(var t=[],i=r,s=e;e--;){for(t.push([]);i--;)t[s-e-1].push(verb.eval.nurbs.zeros_1d(n));i=r}return t},verb.eval.nurbs.deriv_basis_functions=function(e,r,n){var t=verb.eval.nurbs.knot_span(r,e,n),i=n.length-1,s=i-r-1;return verb.eval.nurbs.deriv_basis_functions_given_n_i(t,e,r,s,n)},verb.eval.nurbs.deriv_basis_functions_given_n_i=function(e,r,n,t,i){var s=verb.eval.nurbs.zeros_2d(n+1,n+1),a=Array(n+1),o=Array(n+1),u=0,v=0,l=1,b=0;for(s[0][0]=1,l=1;n>=l;l++){for(a[l]=r-i[e+1-l],o[l]=i[e+l]-r,u=0,b=0;l>b;b++)s[l][b]=o[b+1]+a[l-b],v=s[b][l-1]/s[l][b],s[b][l]=u+o[b+1]*v,u=a[l-b]*v;s[l][l]=u}var c=verb.eval.nurbs.zeros_2d(t+1,n+1),_=verb.eval.nurbs.zeros_2d(2,n+1),h=1,g=0,m=1,d=0,p=0,f=0,y=0,x=0;for(l=0;n>=l;l++)c[0][l]=s[l][n];for(b=0;n>=b;b++)for(g=0,m=1,_[0][0]=1,h=1;t>=h;h++){for(d=0,p=b-h,f=n-h,b>=h&&(_[m][0]=_[g][0]/s[f+1][p],d=_[m][0]*s[p][f]),y=p>=-1?1:-p,x=f>=b-1?h-1:n-b,l=y;x>=l;l++)_[m][l]=(_[g][l]-_[g][l-1])/s[f+1][p+l],d+=_[m][l]*s[p+l][f];f>=b&&(_[m][h]=-_[g][h-1]/s[f+1][b],d+=_[m][h]*s[b][f]),c[h][b]=d,l=g,g=m,m=l}for(b=n,h=1;t>=h;h++){for(l=0;n>=l;l++)c[h][l]*=b;b*=n-h}return c},verb.eval.nurbs.basis_functions=function(e,r,n){var t=verb.eval.nurbs.knot_span(e,r,n);return verb.eval.nurbs.basis_functions_given_knot_span_index(t,e,r,n)},verb.eval.nurbs.basis_functions_given_knot_span_index=function(e,r,n,t){var i=Array(n+1),s=Array(n+1),a=Array(n+1),o=0,u=0;i[0]=1;for(var v=1;n>=v;v++){s[v]=r-t[e+1-v],a[v]=t[e+v]-r,o=0;for(var l=0;v>l;l++)u=i[l]/(a[l+1]+s[v-l]),i[l]=o+a[l+1]*u,o=s[v-l]*u;i[v]=o}return i},verb.eval.nurbs.knot_span=function(e,r,n){var t=n.length-1,i=t-e-1;return verb.eval.nurbs.knot_span_given_n(i,e,r,n)},verb.eval.nurbs.knot_span_given_n=function(e,r,n,t){if(n>=t[e+1])return e;if(t[r]>n)return r;for(var i=r,s=e+1,a=Math.floor((i+s)/2);t[a]>n||n>=t[a+1];)t[a]>n?s=a:i=a,a=Math.floor((i+s)/2);return a};