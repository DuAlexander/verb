/*! verb 2014-11-17 */
function getEastNeighbor(e,r,n,t,i,u){return n===i-1?null:u[e+1]}function getNorthNeighbor(e,r,n,t,i,u){return 0===r?null:u[e-i]}function getSouthNeighbor(e,r,n,t,i,u){return r===t-1?null:u[e+i]}function getWestNeighbor(e,r,n,t,i,u){return 0===n?null:u[e-1]}function crossprod(e,r){return[e[1]*r[2]-e[2]*r[1],e[2]*r[0]-e[0]*r[2],e[0]*r[1]-e[1]*r[0]]}if("object"!=typeof exports||void 0===exports)importScripts("labor.js"),importScripts("binomial.js"),importScripts("numeric-1.2.6.min.js");else var labor=require("labor");var verb=verb||{};verb.eval=verb.eval||{},verb.eval.nurbs=verb.eval.nurbs||{},verb.eval.mesh=verb.eval.mesh||{},verb.eval.geom=verb.eval.geom||{},verb.geom=verb.geom||{},verb.EPSILON=1e-8,verb.TOLERANCE=.001;var router=new labor.Router(verb.eval.nurbs);numeric.normalized=function(e){return numeric.div(e,numeric.norm2(e))},numeric.cross=function(e,r){return[e[1]*r[2]-e[2]*r[1],e[2]*r[0]-e[0]*r[2],e[0]*r[1]-e[1]*r[0]]},verb.left=function(e){if(0===e.length)return[];var r=Math.ceil(e.length/2);return e.slice(0,r)},verb.right=function(e){if(0===e.length)return[];var r=Math.ceil(e.length/2);return e.slice(r)},verb.rightWithPivot=function(e){if(0===e.length)return[];var r=Math.ceil(e.length/2);return e.slice(r-1)},verb.unique=function(e,r){if(0===e.length)return[];for(var n=[e.pop()],t=0;e.length>t;t++){for(var i=e.pop(),u=!0,s=0;n.length>s;s++)if(r(i,n[t])){u=!1;break}u&&n.push(i)}return n},verb.eval.nurbs.intersect_rational_curve_surface_by_aabb_refine=function(e,r,n,t,i,u,s,a,o,v,l,c){var b=verb.eval.nurbs.intersect_rational_curve_surface_by_aabb(e,r,n,t,i,u,s,a,o,v,l,c);return b.map(function(o){var v=[o.p,o.uv[0],o.uv[1]],l=verb.eval.nurbs.refine_rational_curve_surface_intersection(e,r,n,t,i,u,s,a,v);return o.p=l[0],o.uv[0]=l[1],o.uv[1]=l[2],o.distance=l[3],delete o.face,o})},verb.eval.nurbs.refine_rational_curve_surface_intersection=function(e,r,n,t,i,u,s,a,o){var v=function(o){var v=verb.eval.nurbs.rational_curve_point(u,s,a,o[0]),l=verb.eval.nurbs.rational_surface_point(e,r,n,t,i,o[1],o[2]),c=numeric.sub(v,l);return numeric.dot(c,c)},l=numeric.uncmin(v,o);return l.solution.concat(l.f)},verb.eval.nurbs.intersect_rational_curve_surface_by_aabb=function(e,r,n,t,i,u,s,a,o,v,l,c){var b=verb.eval.nurbs.rational_curve_adaptive_sample(u,s,a,o,!0),h=verb.eval.nurbs.tessellate_rational_surface_naive(e,r,n,t,i,l,c),_=b.map(function(e){return e[0]}),m=b.map(function(e){return e.slice(1)}),g=verb.eval.nurbs.intersect_parametric_polyline_mesh_by_aabb(m,_,h,verb.range(h.faces.length),v);return verb.unique(g,function(e,r){return v>numeric.norm2(numeric.sub(e.point,r.point))&&v>Math.abs(e.p-r.p)&&v>numeric.norm2(numeric.sub(e.uv,r.uv))})},verb.eval.nurbs.intersect_parametric_polyline_mesh_by_aabb=function(e,r,n,t,i){var u=new verb.geom.BoundingBox(e),s=verb.eval.mesh.make_mesh_aabb(n.points,n.faces,t),a=verb.eval.nurbs.intersect_parametric_polyline_mesh_by_aabb;if(!u.intersects(s,i))return[];if(2!==e.length||1!==t.length){if(1===t.length){var o=verb.left(e),v=verb.rightWithPivot(e),l=verb.left(r),c=verb.rightWithPivot(r);return a(o,l,n,t,i).concat(a(v,c,n,t,i))}if(2===e.length){var b=verb.eval.mesh.sort_tris_on_longest_axis(s,n.points,n.faces,t),h=verb.left(b),_=verb.right(b);return a(e,r,n,h,i).concat(a(e,r,n,_,i))}var b=verb.eval.mesh.sort_tris_on_longest_axis(s,n.points,n.faces,t),h=verb.left(b),_=verb.right(b),o=verb.left(e),v=verb.rightWithPivot(e),l=verb.left(r),c=verb.rightWithPivot(r);return a(o,l,n,h,i).concat(a(o,l,n,_,i)).concat(a(v,c,n,h,i)).concat(a(v,c,n,_,i))}var m=verb.eval.geom.intersect_segment_with_tri(e[0],e[1],n.points,n.faces[t[0]]);if(null!=m){var g=m.p*(r[1]-r[0])+r[0],f=n.faces[t][0],d=n.faces[t][1],p=n.faces[t][2],y=n.uvs[f],k=n.uvs[d],x=n.uvs[p],N=numeric.sub(k,y),w=numeric.sub(x,y),E=numeric.add(y,numeric.mul(m.s,N),numeric.mul(m.t,w));return[{point:m.point,p:g,uv:E,face:t[0]}]}return[]},verb.eval.geom.intersect_segment_with_tri=function(e,r,n,t){var i=n[t[0]],u=n[t[1]],s=n[t[2]],a=numeric.sub(u,i),o=numeric.sub(s,i),v=numeric.cross(a,o),l=numeric.sub(r,e),c=numeric.sub(e,i),b=-numeric.dot(v,c),h=numeric.dot(v,l);if(Math.abs(h)<verb.EPSILON)return null;var _=b/h;if(0>_||_>1)return null;var m=numeric.add(e,numeric.mul(_,l)),g=numeric.dot(a,o),f=numeric.dot(a,a),d=numeric.dot(o,o),p=numeric.sub(m,i),y=numeric.dot(p,a),k=numeric.dot(p,o),x=g*g-f*d,N=(g*k-d*y)/x,w=(g*y-f*k)/x;return N>1+verb.EPSILON||w>1+verb.EPSILON||-verb.EPSILON>w||-verb.EPSILON>N||N+w>1+verb.EPSILON?null:{point:m,s:N,t:w,p:_}},verb.eval.geom.intersect_segment_with_plane=function(e,r,n,t){var i=numeric.dot(t,numeric.sub(e,r));if(EPSILON>abs(i))return null;var u=numeric.dot(t,numeric.sub(n,e));return{p:u/i}},verb.eval.geom.intersect_aabb_trees=function(e,r,n,t,i,u){var s=i.bounding_box.intersects(u.bounding_box),a=verb.eval.geom.intersect_aabb_trees;return s?0===i.children.length&&0===u.children.length?[[i.triangle,u.triangle]]:0===i.children.length&&0!=u.children.length?a(e,r,n,t,i,u.children[0]).concat(a(e,r,n,t,i,u.children[1])):0!=i.children.length&&0===u.children.length?a(e,r,n,t,i.children[0],u).concat(a(e,r,n,t,i.children[1],u)):0!=i.children.length&&0!=u.children.length?a(e,r,n,t,i.children[0],u.children[0]).concat(a(e,r,n,t,i.children[0],u.children[1])).concat(a(e,r,n,t,i.children[1],u.children[0])).concat(a(e,r,n,t,i.children[1],u.children[1])):void 0:[]},verb.eval.mesh.make_mesh_aabb_tree=function(e,r,n){var t={bounding_box:verb.eval.mesh.make_mesh_aabb(e,r,n),children:[]};if(1===n.length)return t.triangle=n[0],t;var i=verb.eval.mesh.sort_tris_on_longest_axis(t.bounding_box,e,r,n),u=i.slice(0,Math.floor(i.length/2)),s=i.slice(Math.floor(i.length/2),i.length);return t.children=[verb.eval.mesh.make_mesh_aabb_tree(e,r,u),verb.eval.mesh.make_mesh_aabb_tree(e,r,s)],t},verb.eval.mesh.make_mesh_aabb=function(e,r,n){var t=new verb.geom.BoundingBox;return n.forEach(function(n){t.add(e[r[n][0]]),t.add(e[r[n][1]]),t.add(e[r[n][2]])}),t},verb.eval.mesh.sort_tris_on_longest_axis=function(e,r,n,t){for(var i=e.get_longest_axis(),u=[],s=t.length-1;s>=0;s--){var a=t[s],o=verb.eval.mesh.get_min_coordinate_on_axis(r,n[a],i);u.push([o,a])}u.sort(function(e,r){return e[0]>r[0]});for(var v=[],s=0,l=u.length;l>s;s++)v.push(u[s][1]);return v},verb.eval.mesh.get_min_coordinate_on_axis=function(e,r,n){for(var t=[],i=0;3>i;i++)t.push(e[r[i]][n]);return Math.min.apply(Math,t)},verb.eval.geom.get_tri_centroid=function(e,r){for(var n=[0,0,0],t=0;3>t;t++)for(var i=0;3>i;i++)n[i]+=e[r[t]][i];for(var t=0;3>t;t++)n[t]/=3;return n},verb.eval.geom.get_tri_norm=function(e,r){var n=e[r[0]],t=e[r[1]],i=e[r[2]],u=numeric.sub(t,n),s=numeric.sub(i,n),a=numeric.cross(u,s);return numeric.mul(1/numeric.norm2(a),a)},verb.eval.nurbs.intersect_rational_curves_by_aabb_refine=function(e,r,n,t,i,u,s,a){var o=verb.eval.nurbs.intersect_rational_curves_by_aabb(e,r,n,t,i,u,s,a);return o.map(function(s){return verb.eval.nurbs.refine_rational_curve_intersection(e,r,n,t,i,u,s)})},verb.eval.nurbs.refine_rational_curve_intersection=function(e,r,n,t,i,u,s){var a=function(s){var a=verb.eval.nurbs.rational_curve_point(e,r,n,s[0]),o=verb.eval.nurbs.rational_curve_point(t,i,u,s[1]),v=numeric.sub(a,o);return numeric.dot(v,v)},o=numeric.uncmin(a,s);return o.solution.concat(o.f)},verb.eval.nurbs.intersect_rational_curves_by_aabb=function(e,r,n,t,i,u,s,a){var o=verb.eval.nurbs.rational_curve_adaptive_sample(e,r,n,s,!0),v=verb.eval.nurbs.rational_curve_adaptive_sample(t,i,u,s,!0),l=o.map(function(e){return e[0]}),c=v.map(function(e){return e[0]}),b=o.map(function(e){return e.slice(1)}),h=v.map(function(e){return e.slice(1)});return verb.eval.nurbs.intersect_parametric_polylines_by_aabb(b,h,l,c,a)},verb.eval.nurbs.intersect_parametric_polylines_by_aabb=function(e,r,n,t,i){var u=new verb.geom.BoundingBox(e),s=new verb.geom.BoundingBox(r);if(!u.intersects(s,i))return[];if(2!==e.length||2!==r.length){if(2===e.length){var a=Math.ceil(r.length/2),o=r.slice(0,a),v=r.slice(a-1),l=t.slice(0,a),c=t.slice(a-1);return verb.eval.nurbs.intersect_parametric_polylines_by_aabb(e,o,n,l,i).concat(verb.eval.nurbs.intersect_parametric_polylines_by_aabb(e,v,n,c,i))}if(2===r.length){var b=Math.ceil(e.length/2),h=e.slice(0,b),_=e.slice(b-1),m=n.slice(0,b),g=n.slice(b-1);return verb.eval.nurbs.intersect_parametric_polylines_by_aabb(h,r,m,t,i).concat(verb.eval.nurbs.intersect_parametric_polylines_by_aabb(_,r,g,t,i))}var b=Math.ceil(e.length/2),h=e.slice(0,b),_=e.slice(b-1),m=n.slice(0,b),g=n.slice(b-1),a=Math.ceil(r.length/2),o=r.slice(0,a),v=r.slice(a-1),l=t.slice(0,a),c=t.slice(a-1);return verb.eval.nurbs.intersect_parametric_polylines_by_aabb(h,o,m,l,i).concat(verb.eval.nurbs.intersect_parametric_polylines_by_aabb(h,v,m,c,i)).concat(verb.eval.nurbs.intersect_parametric_polylines_by_aabb(_,o,g,l,i)).concat(verb.eval.nurbs.intersect_parametric_polylines_by_aabb(_,v,g,c,i))}var f=verb.eval.geom.intersect_segments(e[0],e[1],r[0],r[1],i);return null!=f?(f[0][0]=f[0][0]*(n[1]-n[0])+n[0],f[1][0]=f[1][0]*(t[1]-t[0])+t[0],[[f[0][0],f[1][0]]]):[]},verb.eval.geom.intersect_segments=function(e,r,n,t,i){var u=numeric.sub(r,e),s=Math.sqrt(numeric.dot(u,u)),a=numeric.mul(1/s,u),o=numeric.sub(t,n),v=Math.sqrt(numeric.dot(o,o)),l=numeric.mul(1/v,o),c=verb.eval.geom.intersect_rays(e,a,n,l);if(null!=c){var b=Math.min(Math.max(0,c[0]/s),1),h=Math.min(Math.max(0,c[1]/v),1),_=numeric.add(numeric.mul(b,u),e),m=numeric.add(numeric.mul(h,o),n),g=numeric.norm2Squared(numeric.sub(_,m));if(i*i>g)return[[b].concat(_),[h].concat(m)]}return null},verb.eval.geom.closest_point_on_ray=function(e,r,n){var t=numeric.sub(e,r),i=numeric.dot(t,n),u=numeric.add(r,numeric.mul(i,n));return u},verb.eval.geom.intersect_rays=function(e,r,n,t){var i=numeric.dot(r,t),u=numeric.dot(r,n),s=numeric.dot(r,e),a=numeric.dot(t,n),o=numeric.dot(t,e),v=numeric.dot(r,r),l=numeric.dot(t,t),c=v*l-i*i;if(Math.abs(c)<verb.EPSILON)return null;var b=i*(u-s)-v*(a-o),h=b/c,_=(u-s+h*i)/v;return[_,h]};var d3=function(e,r){var n=numeric.sub(e.pt,r.pt);return numeric.dot(n,n)};verb.eval.mesh.intersect_meshes_by_aabb=function(e,r,n,t,i,u){var s=Date.now(),a=verb.range(r.length),o=verb.range(i.length),v=verb.eval.mesh.make_mesh_aabb_tree(e,r,a),l=verb.eval.mesh.make_mesh_aabb_tree(t,i,o);console.log(v);var c=Date.now();console.log((c-s)/1e3," s to compute make mesh aabb trees"),s=Date.now();var b=verb.eval.geom.intersect_aabb_trees(e,r,t,i,v,l);c=Date.now(),console.log((c-s)/1e3," s to compute intersect mesh aabb trees"),s=Date.now();var h=b.map(function(s){var a=verb.eval.geom.intersect_tris(e,r[s[0]],n,t,i[s[1]],u);return a?(a[0].tri1id=s[0],a[1].tri1id=s[0],a[0].tri2id=s[1],a[1].tri2id=s[1],a):a}).filter(function(e){return e}).filter(function(e){return d3(e[0],e[1])>verb.TOLERANCE});if(c=Date.now(),console.log((c-s)/1e3," s to intersect ",b.length," triangle pairs"),console.log(b),console.log(h.length," intersections were produced"),0===h.length)return[];s=Date.now();var _=verb.eval.mesh.make_intersect_polylines(h);return c=Date.now(),console.log((c-s)/1e3," s to construct polylines"),_},verb.eval.mesh.make_intersect_polylines=function(e){return e},verb.eval.mesh.pt_dist=function(e,r){return Math.pow(e.x-r.x,2)+Math.pow(e.y-r.y,2)+Math.pow(e.z-r.z,2)},verb.eval.mesh.kdtree_from_segs=function(e){var r=[];return e.forEach(function(e){r.push({x:e[0].pt[0],y:e[0].pt[1],z:e[0].pt[2],ele:e[0]}),r.push({x:e[1].pt[0],y:e[1].pt[1],z:e[1].pt[2],ele:e[1]})}),new KdTree(r,verb.eval.mesh.pt_dist,["x","y","z"])},verb.eval.mesh.lookup_adj_segment=function(e,r){var n=r.nearest({x:e.pt[0],y:e.pt[1],z:e.pt[2]},2).filter(function(r){return e!=r[0].ele&&r[1]<verb.TOLERANCE}).map(function(e){return e[0].ele});return 0!=n.length?n[0]:null},verb.eval.geom.intersect_tris=function(e,r,n,t,i,u){var s=verb.eval.geom.get_tri_norm(e,r),a=verb.eval.geom.get_tri_norm(t,i),o=e[r[0]],v=t[i[0]],l=verb.eval.geom.intersect_planes(o,s,v,a);if(!l.intersects)return null;var c=verb.eval.geom.clip_ray_in_coplanar_tri(l.origin,l.dir,e,r,n);if(null===c)return null;var b=verb.eval.geom.clip_ray_in_coplanar_tri(l.origin,l.dir,t,i,u);if(null===b)return null;var h=verb.eval.geom.merge_tri_clip_intervals(c,b,e,r,n,t,i,u);return null===h?null:[{uvtri1:h.uv1tri1,uvtri2:h.uv1tri2,pt:h.pt1},{uvtri1:h.uv2tri1,uvtri2:h.uv2tri2,pt:h.pt2}]},verb.eval.geom.clip_ray_in_coplanar_tri=function(e,r,n,t,i){for(var u=[n[t[0]],n[t[1]],n[t[2]]],i=[i[t[0]],i[t[1]],i[t[2]]],s=[numeric.sub(i[1],i[0]),numeric.sub(i[2],i[1]),numeric.sub(i[0],i[2])],a=[numeric.sub(u[1],u[0]),numeric.sub(u[2],u[1]),numeric.sub(u[0],u[2])],o=a.map(numeric.normalized),v=a.map(numeric.norm2),l=null,c=null,b=0;3>b;b++){var h=u[b],_=o[b],m=verb.eval.geom.intersect_rays(h,_,e,r);if(null!==m){var g=m[0],f=m[1];-verb.EPSILON>g||g>v[b]+verb.EPSILON||((null===l||l.u>f)&&(l={u:f,pt:verb.eval.geom.point_on_ray(e,r,f),uv:numeric.add(i[b],numeric.mul(g/v[b],s[b]))}),(null===c||f>c.u)&&(c={u:f,pt:verb.eval.geom.point_on_ray(e,r,f),uv:numeric.add(i[b],numeric.mul(g/v[b],s[b]))}))}}return null===c||null===l?null:{min:l,max:c}},verb.eval.geom.point_on_ray=function(e,r,n){return numeric.add(e,numeric.mul(n,r))},verb.eval.geom.merge_tri_clip_intervals=function(e,r,n,t,i,u,s,a){if(r.min.u>e.max.u+verb.EPSILON||e.min.u>r.max.u+verb.EPSILON)return null;e.tri=0,r.tri=1;var o=e.min.u>r.min.u?e.min:r.min,v=e.max.u<r.max.u?e.max:r.max,l={};return 0===o.tri?(l.uv1tri1=o.uv,l.uv1tri2=verb.eval.geom.tri_uv_from_point(u,s,a,o.pt)):(l.uv1tri1=verb.eval.geom.tri_uv_from_point(n,t,i,o.pt),l.uv1tri2=o.uv),l.pt1=o.pt,0===v.tri?(l.uv2tri1=v.uv,l.uv2tri2=verb.eval.geom.tri_uv_from_point(u,s,a,v.pt)):(l.uv2tri1=verb.eval.geom.tri_uv_from_point(n,t,i,v.pt),l.uv2tri2=v.uv),l.pt2=v.pt,l},verb.eval.geom.intersect_planes=function(e,r,n,t){var i=numeric.cross(r,t);if(numeric.dot(i,i)<verb.EPSILON)return{intersects:!1};var u=0,s=Math.abs(i[0]),a=Math.abs(i[1]),o=Math.abs(i[2]);a>s&&(u=1,s=a),o>s&&(u=2,s=o);var v,l,c,b;0===u?(v=r[1],l=r[2],c=t[1],b=t[2]):1===u?(v=r[0],l=r[2],c=t[0],b=t[2]):(v=r[0],l=r[1],c=t[0],b=t[1]);var h,_=-numeric.dot(e,r),m=-numeric.dot(n,t),g=v*b-l*c,f=(l*m-_*b)/g,d=(_*c-v*m)/g;return h=0===u?[0,f,d]:1===u?[f,0,d]:[f,d,0],{intersects:!0,origin:h,dir:numeric.normalized(i)}},verb.eval.geom.tri_uv_from_point=function(e,r,n,t){var i=e[r[0]],u=e[r[1]],s=e[r[2]],a=n[r[0]],o=n[r[1]],v=n[r[2]],l=numeric.sub(i,t),c=numeric.sub(u,t),b=numeric.sub(s,t),h=numeric.norm2(numeric.cross(numeric.sub(i,u),numeric.sub(i,s))),_=numeric.norm2(numeric.cross(c,b))/h,m=numeric.norm2(numeric.cross(b,l))/h,g=numeric.norm2(numeric.cross(l,c))/h;return numeric.add(numeric.mul(_,a),numeric.mul(m,o),numeric.mul(g,v))},verb.eval.nurbs.tessellate_rational_surface_uniform_cubic=function(e,r,n,t,i,u){if(3>e||3>n)throw Error("The surface must be degree >=3 in both directions!");var s=verb.eval.nurbs.compute_rational_surface_max_edge_length(e,r,n,t,i,u),a=r[r.length-1]-r[0],o=t[t.length-1]-t[0],v=a/s+1,l=o/s+1;return verb.eval.nurbs.tessellate_rational_surface_naive(e,r,n,t,i,v,l)},verb.eval.nurbs.compute_rational_surface_max_edge_length=function(e,r,n,t,i,u){for(var s=i.length,a=i[0].length,o=0,v=0;s>v;v++)for(var l=0;a>l;l++){var c=numeric.norm2(i[v][l]);c>o&&(o=c)}for(var b=1+o,h=i[0][0].length-1,_=Number.MAX_VALUE,v=0;s>v;v++)for(var l=0;a>l;l++){var m=i[v][l][h],g=m*u/b;_>g&&(_=g)}var f=verb.eval.nurbs.compute_rational_surface_deriv2_bounds(e,r,n,t,i);return 3*(Math.sqrt(2)/2)*Math.sqrt(_/(2*(f[0]+f[1]+2*f[2])))},verb.eval.nurbs.compute_rational_surface_deriv2_bounds=function(e,r,n,t,i){for(var u=i.length,s=i[0].length,a=u-2,o=e,v=o*(o-1),l=0,c=0;a>c;c++)for(var b=0;s>b;b++){var h=i[c][b],_=i[c+1][b],m=i[c+2][b],g=numeric.sub(m,_),f=numeric.sub(_,h),d=numeric.mul(1/(r[c+o+2]-r[c+2]),g),p=numeric.mul(1/(r[c+o+1]-r[c+1]),f),y=numeric.sub(d,p),k=v/(r[c+o+1]-r[c+2]),x=numeric.norm2(numeric.mul(k,y));x>l&&(l=x)}for(var N=n,w=N*(N-1),E=s-2,M=0,c=0;u>c;c++)for(var b=0;E>b;b++){var h=i[c][b],z=i[c][b+1],A=i[c][b+2],g=numeric.sub(A,z),f=numeric.sub(z,h),d=numeric.mul(1/(t[b+N+2]-t[b+2]),g),p=numeric.mul(1/(t[b+N+1]-t[b+1]),f),y=numeric.sub(d,p),k=w/(t[b+N+1]-t[b+2]),x=numeric.norm2(numeric.mul(k,y));x>M&&(M=x)}for(var P=o*N,S=u-1,I=s-1,L=0,c=0;S>c;c++)for(var b=0;I>b;b++){var h=i[c][b],_=i[c+1][b],z=i[c][b+1],R=i[c+1][b+1],O=numeric.add(numeric.sub(numeric.sub(R,z),_),h),C=numeric.mul(1/(r[c+o+1]-r[c+1]),O),k=P/(t[b+N+1]-t[b+1]),x=numeric.norm2(numeric.mul(k,C));x>L&&(L=x)}return[l,M,L]},verb.eval.nurbs.tessellate_rational_surface_naive=function(e,r,n,t,i,u,s){1>u&&(u=1),1>s&&(s=1);for(var a=1/u,o=1/s,v=[],l=[],c=[],b=0;u+1>b;b++)for(var h=0;s+1>h;h++){var _=b*a,m=h*o;l.push([_,m]);var g=verb.eval.nurbs.rational_surface_derivs(e,r,n,t,i,1,_,m),f=g[0][0];v.push(f);var d=numeric.cross(g[0][1],g[1][0]);c.push(d)}for(var p=[],b=0;u>b;b++)for(var h=0;s>h;h++){var y=b*(s+1)+h,k=(b+1)*(s+1)+h,x=k+1,N=y+1,w=[y,k,x],E=[y,x,N];p.push(w),p.push(E)}return{points:v,faces:p,uvs:l,normals:c}},verb.eval.nurbs.rational_curve_regular_sample=function(e,r,n,t,i){return verb.eval.nurbs.rational_curve_regular_sample_range(e,r,n,0,1,t,i)},verb.eval.nurbs.rational_curve_regular_sample_range=function(e,r,n,t,i,u,s){1>u&&(u=2);for(var a=[],o=(i-t)/(u-1),v=0,l=0;u>l;l++)v=t+o*l,s?a.push([v].concat(verb.eval.nurbs.rational_curve_point(e,r,n,v))):a.push(verb.eval.nurbs.rational_curve_point(e,r,n,v));return a},verb.eval.nurbs.rational_curve_adaptive_sample=function(e,r,n,t,i){return 1===e?i?n.map(function(e,n){return[r[n+1]].concat(verb.eval.nurbs.dehomogenize(e))}):n.map(verb.eval.nurbs.dehomogenize):verb.eval.nurbs.rational_curve_adaptive_sample_range(e,r,n,r[0],r[r.length-1],t,i)},verb.eval.nurbs.rational_curve_adaptive_sample_range=function(e,r,n,t,i,u,s){var a=verb.eval.nurbs.rational_curve_point(e,r,n,t),o=verb.eval.nurbs.rational_curve_point(e,r,n,i),v=.5+.2*Math.random(),l=t+(i-t)*v,c=verb.eval.nurbs.rational_curve_point(e,r,n,l),b=numeric.sub(a,o),h=numeric.sub(a,c);if(u>numeric.dot(b,b)&&numeric.dot(h,h)>u||!verb.eval.nurbs.three_points_are_flat(a,c,o,u)){var _=t+.5*(i-t),m=verb.eval.nurbs.rational_curve_adaptive_sample_range(e,r,n,t,_,u,s),g=verb.eval.nurbs.rational_curve_adaptive_sample_range(e,r,n,_,i,u,s);return m.slice(0,-1).concat(g)}return s?[[t].concat(a),[i].concat(o)]:[a,o]},verb.eval.nurbs.three_points_are_flat=function(e,r,n,t){var i=numeric.sub(r,e),u=numeric.sub(n,e),s=crossprod(i,u),a=numeric.dot(s,s);return t>a},verb.eval.nurbs.divide_rational_surface_adaptive=function(e,r,n,t,i,u){for(var s={degree_u:e,knots_u:r,degree_v:n,knots_v:t,homo_control_points:i},a=u.minDivsU,o=u.minDivsV,v=Math.max.apply(null,r),l=Math.min.apply(null,r),c=Math.max.apply(null,t),b=Math.min.apply(null,t),h=(v-l)/a,_=(c-b)/o,m=[],g=0;a>g;g++)for(var f=0;o>f;f++){var d=l+h*g,p=l+h*(g+1),y=b+_*f,k=b+_*(f+1);m.push(new verb.eval.nurbs.AdaptiveRefinementNode(s,d,p,y,k,null,null))}for(var g=0;a>g;g++)for(var f=0;o>f;f++){var x=g*o+f,N=getNorthNeighbor(x,g,f,a,o,m),w=getEastNeighbor(x,g,f,a,o,m),E=getSouthNeighbor(x,g,f,a,o,m),M=getWestNeighbor(x,g,f,a,o,m);m[x].neighbors=[N,w,E,M],m.divide(u)}return m},verb.eval.nurbs.is_rational_surface_domain_flat=function(e){var r=verb.eval.nurbs.rational_surface_point,n=(u[1]-u[0]/2)*(.1*Math.random()+1),t=(v[1]-v[0]/2)*(.1*Math.random()+1),i=r(e.degree_u,e.knots_u,e.degree_v,e.knots_v,e.homo_control_points,u[0],v[0]),s=r(e.degree_u,e.knots_u,e.degree_v,e.knots_v,e.homo_control_points,u[0]+n,v[0]+t),a=r(e.degree_u,e.knots_u,e.degree_v,e.knots_v,e.homo_control_points,u[1],v[1]);return verb.eval.nurbs.three_points_are_flat(i,s,a,tol)},verb.eval.nurbs.triangulate_adaptive_refinement_node_tree=function(e){var r={uvs:[],points:[],normals:[],faces:[]};return r.faces=e.map(function(e){e.triangulate(r)}).flatten(),r},verb.eval.nurbs.tessellate_rational_surface_adaptive=function(e,r,n,t,i,u){verb.eval.nurbs.divide_rational_surface_adaptive(e,r,n,t,i,u);var s=verb.eval.nurbs.triangulate_adaptive_refinement_node_tree(arrTree);return verb.eval.nurbs.unique_mesh(s)},verb.eval.nurbs.unique_mesh=function(e){return e},Array.prototype.where=function(e){if(0===this.length)return this;for(var r=[],n=0;this.length>n;n++)e(this[n])&&r.push(this[n]);return r},verb.eval.nurbs.AdaptiveRefinementNode=function(e,r,n,t,i,u,s){this.srf=e,this.u0=r,this.u1=n,this.v0=t,this.v1=i,this.parentNode=u,this.neighbors=s,this.leafEdgeUvs=[[r,t],[n,t],[n,i],[r,i]],this.cachedEdgeUvs=[]},verb.eval.nurbs.AdaptiveRefinementNode.prototype.isLeaf=function(){return void 0===this.children},verb.eval.nurbs.AdaptiveRefinementNode.prototype.evalSurface=function(){var e=verb.eval.nurbs.rational_surface_derivs(this.srf.degree_u,this.srf.knots_u,this.srf.degree_v,this.srf.knots_v,this.srf.homo_control_points,1,pt_u,pt_v),r=e[0][0];points.push(r);var n=numeric.cross(e[0][1],e[1][0]);return{point:r,normal:n}},verb.eval.nurbs.AdaptiveRefinementNode.prototype.getEdgeUvs=function(e){return this.isLeaf()?[this.leafEdgeUvs[e]]:(this.cachedEdgeUvs[e]=this.cachedEdgeUvs[e]||this.children[e].getEdgeUvs(e).concat(this.children[(e+1)%4].getEdgeUvs(e)),this.cachedEdgeUvs[e])},verb.eval.nurbs.AdaptiveRefinementNode.prototype.getAllEdgeUvs=function(e){var r=[this.leafEdgeUvs[e]];if(null===this.neighbors[e])return r;var n=this.neighbors[e].getEdgeUvs((e+2)%4),t=e%2,i=this,u=[function(e){return e[0]>i.u0+verb.EPSILON&&e[0]<i.u1-verb.EPSILON},function(e){return e[1]>i.v0+verb.EPSILON&&e[1]<i.v1-verb.EPSILON}];return r.concat(n.where(u[t]).reverse())},verb.eval.nurbs.AdaptiveRefinementNode.prototype.triangulateLeaf=function(e){for(var r=e.points.length-1,n=[],t=0;4>t;t++)n.concat(this.getAllEdgeUvs(t));if(n.forEach(function(r){e.uvs.push(r);var n=this.evalSurface(r);e.points.push(n.point),e.normals.push(n.normal)}),4===n.length)return e.faces.push([r+1,r+4,r+2]),e.faces.push([r+4,r+3,r+2]),void 0;this.u05=this.u05||(this.u0+this.u1)/2,this.v05=this.v05||(this.v0+this.v1)/2,e.uvs.push([this.u05,this.v05]);var i=this.evalSurface([this.u05,this.v05]);e.points.push(i.point),e.normals.push(i.normal);for(var u=e.points.length-1,t=0;n.length>t;t++)e.faces.push([u,(r+t+2)%n.length,(r+t+1)%n.length])},verb.eval.nurbs.AdaptiveRefinementNode.prototype.triangulate=function(e){return this.isLeaf()?this.triangulateLeaf(e):(this.children.forEach(function(r){null!==r&&r.triangulate(e)}),void 0)},verb.eval.nurbs.AdaptiveRefinementNode.prototype.shouldDivide=function(e,r){return e.minDepth&&e.minDepth>r?!0:this.srf&&!verb.eval.nurbs.is_rational_surface_domain_flat(this.srf,this.u0,this.u1,this.v0,this.v1,e)?!0:!1},verb.eval.nurbs.AdaptiveRefinementNode.prototype.divide=function(e,r){void 0===r&&(r=0),this.shouldDivide(e,r)&&(r++,this.u05=(this.u0+this.u1)/2,this.v05=(this.v0+this.v1)/2,this.children=[new verb.eval.nurbs.AdaptiveRefinementNode(this.srf,this.u0,this.u05,this.v0,this.v05,this),new verb.eval.nurbs.AdaptiveRefinementNode(this.srf,this.u05,this.u1,this.v0,this.v05,this),new verb.eval.nurbs.AdaptiveRefinementNode(this.srf,this.u05,this.u1,this.v05,this.v1,this),new verb.eval.nurbs.AdaptiveRefinementNode(this.srf,this.u0,this.u05,this.v05,this.v1,this)],this.children[0].neighbors=[this.neighbors[0],this.children[1],this.children[3],this.neighbors[3]],this.children[1].neighbors=[this.neighbors[0],this.neighbors[1],this.children[2],this.children[0]],this.children[2].neighbors=[this.children[1],this.neighbors[1],this.neighbors[2],this.children[3]],this.children[3].neighbors=[this.children[0],this.children[2],this.neighbors[2],this.neighbors[3]],this.children.forEach(function(n){n.divide(e,r)}))},verb.eval.nurbs.rational_interp_curve=function(e,r){r=r||3;for(var n=[0],t=1;e.length>t;t++){var i=numeric.norm2(numeric.sub(e[t],e[t-1])),u=n[n.length-1];n.push(u+i)}for(var s=n[n.length-1],t=0;n.length>t;t++)n[t]=n[t]/s;for(var a=numeric.rep([r+1],0),o=e.length-1,t=1,v=n.length-r;v>t;t++){for(var l=0,c=0;r>c;c++)l+=n[t+c];a.push(1/r*l)}for(var b=a.concat(numeric.rep([r+1],1)),h=[],t=0;n.length>t;t++){var _=n[t],m=verb.eval.nurbs.knot_span_given_n(o,r,_,b),g=verb.eval.nurbs.basis_functions_given_knot_span_index(m,_,r,b),f=m-r,d=verb.eval.nurbs.zeros_1d(f),p=verb.eval.nurbs.zeros_1d(e.length-(r+1)-f);h.push(d.concat(g).concat(p))}for(var y=e[0].length,k=[],t=0;y>t;t++){var x=e.map(function(e){return e[t]}),N=numeric.solve(h,x);k.push(N)}var w=numeric.transpose(k),E=numeric.rep([w.length],1);return{control_points:w,knots:b,degree:r,weights:E}},verb.eval.nurbs.get_sweep1_surface=function(e,r,n,t,i,u,s,a){for(var o=verb.eval.nurbs.homogenize_1d(s,a),v=verb.eval.nurbs.rational_curve_point(u,i,o,0),l=1/s.length,c=[],b=[],h=0;s.length>h;h++){for(var _=verb.eval.nurbs.rational_curve_point(u,i,o,h*l),m=numeric.sub(_,v),g=[],f=[],d=0;n.length>d;d++)g.push(numeric.add(m,n[d])),f.push(t[d]*a[h]);c.push(g),b.push(f)}return{knots_u:i,knots_v:e,control_points:c,degree_u:u,degree_v:r,weights:b}},verb.eval.nurbs.get_ellipse_arc=function(e,r,n,t,i,u,s){u>s&&(s=2*Math.PI+u);var a=s-u,o=0;o=Math.PI/2>=a?1:Math.PI>=a?2:3*Math.PI/2>=a?3:4;var v=a/o,l=Math.cos(v/2),c=numeric.add(e,numeric.mul(t,Math.cos(u),r),numeric.mul(i,Math.sin(u),n)),b=numeric.sub(numeric.mul(Math.cos(u),n),numeric.mul(Math.sin(u),r)),h=verb.eval.nurbs.zeros_1d(2*o),_=verb.eval.nurbs.zeros_1d(2*o+3),m=0,g=u,f=verb.eval.nurbs.zeros_1d(2*o);h[0]=c,f[0]=1;for(var d=1;o>=d;d++){g+=v;var p=numeric.add(e,numeric.mul(t,Math.cos(g),r),numeric.mul(i,Math.sin(g),n));f[m+2]=1,h[m+2]=p;var y=numeric.sub(numeric.mul(Math.cos(g),n),numeric.mul(Math.sin(g),r)),k=verb.eval.geom.intersect_rays(c,numeric.mul(1/numeric.norm2(b),b),p,numeric.mul(1/numeric.norm2(y),y)),x=numeric.add(c,numeric.mul(b,k[0]));f[m+1]=l,h[m+1]=x,m+=2,o>d&&(c=p,b=y)}for(var N=2*o+1,d=0;3>d;d++)_[d]=0,_[d+N]=1;switch(o){case 1:break;case 2:_[3]=_[4]=.5;break;case 3:_[3]=_[4]=1/3,_[5]=_[6]=2/3;break;case 4:_[3]=_[4]=.25,_[5]=_[6]=.5,_[7]=_[8]=.75}return{knots:_,control_points:h,degree:2,weights:f}},verb.eval.nurbs.get_sphere_surface=function(e,r,n,t){var i=verb.eval.nurbs.get_arc(e,numeric.mul(r,-1),n,t,0,Math.PI);return verb.eval.nurbs.get_revolved_surface(e,r,2*Math.PI,i.knots,i.degree,i.control_points,i.weights)},verb.eval.nurbs.get_polyline_curve=function(e){for(var r=e.length-1,n=1/r,t=[0,0],i=1;r>i;i++)t.push(i*n);t.push(1),t.push(1);for(var u=[],i=0;e.length>i;i++)u.push(1);return{knots:t,control_points:e.slice(0),degree:1,weights:u}},verb.eval.nurbs.get_4pt_surface=function(e,r,n,t){var i=numeric.mul(.5,numeric.add(e,t)),u=numeric.mul(.5,numeric.add(r,n)),s=numeric.mul(.5,numeric.add(n,t)),a=numeric.mul(.5,numeric.add(e,r)),o=numeric.mul(.5,numeric.add(i,u));return{knots_u:[0,0,0,1,1,1],knots_v:[0,0,0,1,1,1],control_points:[[e,i,t],[a,o,s],[r,u,n]],degree_u:2,degree_v:2,weights:[[1,1,1],[1,1,1],[1,1,1]]}},verb.eval.nurbs.get_cylinder_surface=function(e,r,n,t,i){var u=crossprod(e,r),s=(2*Math.PI,verb.eval.nurbs.get_arc(n,r,u,i,0,2*Math.PI));return verb.eval.nurbs.get_extruded_surface(e,t,s.knots,s.degree,s.control_points,s.weights)},verb.eval.nurbs.get_cone_surface=function(e,r,n,t,i){var u=2*Math.PI,s=1,a=[numeric.add(n,numeric.mul(t,e)),numeric.add(n,numeric.mul(i,r))],o=[0,0,1,1],v=[1,1];return verb.eval.nurbs.get_revolved_surface(n,e,u,o,s,a,v)},verb.eval.nurbs.get_extruded_surface=function(e,r,n,t,i,u){for(var s=verb.eval.nurbs.zeros_2d(3,i.length),a=verb.eval.nurbs.zeros_2d(3,i.length),o=numeric.mul(e,r),v=numeric.mul(e,.5*r),l=0;i.length>l;l++)s[0][l]=i[l],s[1][l]=numeric.add(v,i[l]),s[2][l]=numeric.add(o,i[l]),a[0][l]=u[l],a[1][l]=u[l],a[2][l]=u[l];return{knots_u:[0,0,0,1,1,1],knots_v:n,control_points:s,degree_u:2,degree_v:t,weights:a}},verb.eval.nurbs.get_revolved_surface=function(e,r,n,t,i,u,s){var a,o,v,l;Math.PI/2>=n?(a=1,o=verb.eval.nurbs.zeros_1d(6+2*(a-1))):Math.PI>=n?(a=2,o=verb.eval.nurbs.zeros_1d(6+2*(a-1)),o[3]=o[4]=.5):3*Math.PI/2>=n?(a=3,o=verb.eval.nurbs.zeros_1d(6+2*(a-1)),o[3]=o[4]=1/3,o[5]=o[6]=2/3):(a=4,o=verb.eval.nurbs.zeros_1d(6+2*(a-1)),o[3]=o[4]=.25,o[5]=o[6]=.5,o[7]=o[8]=.75);for(var c=n/a,b=3+2*(a-1),h=0;3>h;b++,h++)o[h]=0,o[b]=1;for(var _=Math.cos(c/2),m=0,g=verb.eval.nurbs.zeros_1d(a+1),f=verb.eval.nurbs.zeros_1d(a+1),v=verb.eval.nurbs.zeros_2d(2*a+1,u.length),l=verb.eval.nurbs.zeros_2d(2*a+1,u.length),h=1;a>=h;h++)m+=c,f[h]=Math.cos(m),g[h]=Math.sin(m);for(b=0;u.length>b;b++){var d=verb.eval.geom.closest_point_on_ray(u[b],e,r),p=numeric.sub(u[b],d),y=numeric.norm2(p),k=crossprod(r,p);y>verb.EPSILON&&(p=numeric.mul(1/y,p),k=numeric.mul(1/y,k)),v[0][b]=u[b];var x=u[b];l[0][b]=s[b];for(var N=k,w=0,m=0,h=1;a>=h;h++){var E=0==y?d:numeric.add(d,numeric.mul(y,f[h],p),numeric.mul(y,g[h],k));v[w+2][b]=E,l[w+2][b]=s[b];var M=numeric.sub(numeric.mul(f[h],k),numeric.mul(g[h],p));if(0==y)v[w+1][b]=d;else{var z=verb.eval.geom.intersect_rays(x,numeric.mul(1/numeric.norm2(N),N),E,numeric.mul(1/numeric.norm2(M),M)),A=numeric.add(x,numeric.mul(N,z[0]));v[w+1][b]=A}l[w+1][b]=_*s[b],w+=2,a>h&&(x=E,N=M)}}return{knots_u:o,knots_v:t,control_points:v,degree_u:2,degree_v:i,weights:l}},verb.eval.nurbs.get_arc=function(e,r,n,t,i,u){return verb.eval.nurbs.get_ellipse_arc(e,r,n,t,t,i,u)},verb.eval.nurbs.curve_bezier_decompose=function(e,r,n){for(var t=verb.eval.nurbs.knot_multiplicities(r),i=e+1,u=verb.eval.nurbs.curve_knot_refine,s=0;t.length>s;s++)if(i>t[s][1]){var a=numeric.rep([i-t[s][1]],t[s][0]),o=u(e,r,n,a);r=o.knots,n=o.control_points}r.length/i-1;for(var v=2*i,l=[],s=0;n.length>s;s+=i){var c=r.slice(s,s+v),b=n.slice(s,s+i);l.push({degree:e,knots:c,control_points:b})}return l},verb.eval.nurbs.knot_multiplicities=function(e){for(var r=[[e[0],0]],n=r[0],t=0;e.length>t;t++)Math.abs(e[t]-n[0])>verb.EPSILON&&(n=[e[t],0],r.push(n)),n[1]++;return r},verb.eval.nurbs.curve_split=function(e,r,n,t){for(var i=[],u=0;e+1>u;u++)i.push(t);var s=verb.eval.nurbs.curve_knot_refine(e,r,n,i),a=verb.eval.nurbs.knot_span(e,t,r),o=s.knots.slice(0,a+e+2),v=s.knots.slice(a+1),l=s.control_points.slice(0,a+1),c=s.control_points.slice(a+1);return[{degree:e,knots:o,control_points:l},{degree:e,knots:v,control_points:c}]},verb.eval.nurbs.curve_knot_refine=function(e,r,n,t){var i=n.length-1,u=i+e+1,s=t.length-1,a=verb.eval.nurbs.knot_span(e,t[0],r),o=verb.eval.nurbs.knot_span(e,t[s],r),v=Array(n.length+s+1),l=Array(r.length+s+1),c=0,b=0;for(c=0;a-e>=c;c++)v[c]=n[c];for(c=o-1;i>=c;c++)v[c+s+1]=n[c];for(c=0;a>=c;c++)l[c]=r[c];for(c=o+e;u>=c;c++)l[c+s+1]=r[c];c=o+e-1;var h=o+e+s;for(b=s;b>=0;b--){for(;t[b]<=r[c]&&c>a;)v[h-e-1]=n[c-e-1],l[h]=r[c],h-=1,c-=1;v[h-e-1]=v[h-e];for(var _=1;e>=_;_++){var m=h-e+_,g=l[h+_]-t[b];Math.abs(g)<verb.EPSILON?v[m-1]=v[m]:(g/=l[h+_]-r[c-e+_],v[m-1]=numeric.add(numeric.mul(g,v[m-1]),numeric.mul(1-g,v[m])))}l[h]=t[b],h-=1}return{knots:l,control_points:v}},verb.eval.nurbs.curve_knot_insert=function(e,r,n,t,i){var u=0,s=n.length,a=verb.eval.nurbs.knot_span(e,t,r),o=s+i,v=Array(e-u),l=Array(r.length+i),c=Array(o),b=0;for(b=0;a>=b;b++)l[b]=r[b];for(b=1;i>=b;b++)l[a+b]=t;for(b=a+1;r.length>b;b++)l[b+i]=r[b];for(b=0;a-e>=b;b++)c[b]=n[b];for(b=a-u;s>b;b++)c[b+i]=n[b];for(b=0;e-u>=b;b++)v[b]=n[a-e+b];for(var h=0,_=0,m=1;i>=m;m++){for(h=a-e+m,b=0;e-m-u>=b;b++)_=(t-r[h+b])/(r[b+a+1]-r[h+b]),v[b]=numeric.add(numeric.mul(_,v[b+1]),numeric.mul(1-_,v[b]));c[h]=v[0],c[a+i-m-u]=v[e-m-u]}for(b=h+1;a-u>b;b++)c[b]=v[b-h];return{knots:l,control_points:c}},verb.eval.nurbs.rational_surface_curvature=function(e,r,n,t,i,u,s){var a=verb.eval.nurbs.rational_surface_derivs(e,r,n,t,i,2,u,s),o=a[0][1],v=a[1][0],l=a[0][2],c=a[2][0],b=a[1][1],h=numeric.cross(o,v),_=numeric.dot(l,h),m=numeric.dot(b,h),g=numeric.dot(c,h),f=[[_,m],[m,g]],d=numeric.eig(f),p=d.lambda.x[0],y=d.lambda.x[1],k=.5*(p+y),x=p*y,N=numeric.add(numeric.mul(d.E.x[0][0],o),numeric.mul(d.E.x[0][1],v)),w=numeric.add(numeric.mul(d.E.x[1][0],o),numeric.mul(d.E.x[1][1],v));return{point:a[0][0],normal:h,mean:k,gaussian:x,shapeOperator:f,k1:p,k2:y,p1:N,p2:w,p1p:d.E.x[0],p2p:d.E.x[1]}},verb.eval.nurbs.rational_surface_derivs=function(e,r,n,t,i,u,s,a){var o=verb.eval.nurbs.surface_derivs(e,r,n,t,i,u,s,a),v=verb.eval.nurbs.separate_homo_derivs_2d(o),l=v[0],c=v[1],b=0,h=0,_=0,m=0,g=[],f=l[0][0].length;for(b=0;u>=b;b++)for(g.push([]),m=0;u-b>=m;m++){var a=l[b][m];
for(_=1;m>=_;_++)a=numeric.sub(a,numeric.mul(numeric.mul(binomial.get(m,_),c[0][_]),g[b][m-_]));for(h=1;b>=h;h++){a=numeric.sub(a,numeric.mul(numeric.mul(binomial.get(b,h),c[h][0]),g[b-h][m]));var d=verb.eval.nurbs.zeros_1d(f);for(_=1;m>=_;_++)d=numeric.add(d,numeric.mul(numeric.mul(binomial.get(m,_),c[h][_]),g[b-h][m-_]));a=numeric.sub(a,numeric.mul(binomial.get(b,h),d))}g[b].push(numeric.mul(1/c[0][0],a))}return g},verb.eval.nurbs.rational_surface_point=function(e,r,n,t,i,u,s){return verb.eval.nurbs.dehomogenize(verb.eval.nurbs.surface_point(e,r,n,t,i,u,s))},verb.eval.nurbs.rational_curve_derivs=function(e,r,n,t,i){var u=verb.eval.nurbs.separate_homo_derivs_1d(verb.eval.nurbs.curve_derivs(e,r,n,t,i)),s=u[0],a=u[1],o=0,v=0,l=[];for(o=0;i>=o;o++){var c=s[o];for(v=1;o>=v;v++)c=numeric.sub(c,numeric.mul(numeric.mul(binomial.get(o,v),a[v]),l[o-v]));l.push(numeric.mul(1/a[0],c))}return l},verb.eval.nurbs.separate_homo_derivs_1d=function(e){for(var r=e[0].length,n=r-1,t=[],i=[],u=0,s=e.length;s>u;u++)t.push(e[u].slice(0,n)),i.push(e[u][n]);return[t,i]},verb.eval.nurbs.separate_homo_derivs_2d=function(e){for(var r=[],n=[],t=0,i=e.length;i>t;t++){var u=verb.eval.nurbs.separate_homo_derivs_1d(e[t]);r.push(u[0]),n.push(u[1])}return[r,n]},verb.eval.nurbs.rational_curve_point=function(e,r,n,t){return verb.eval.nurbs.dehomogenize(verb.eval.nurbs.curve_point(e,r,n,t))},verb.eval.nurbs.dehomogenize=function(e){for(var r=e.length,n=[],t=e[r-1],i=0;e.length-1>i;i++)n.push(e[i]/t);return n},verb.eval.nurbs.weight_1d=function(e){var r=e[0].length-1;return e.map(function(e){return e[r]})},verb.eval.nurbs.dehomogenize_1d=function(e){return e.map(function(e){return verb.eval.nurbs.dehomogenize(e)})},verb.eval.nurbs.homogenize_1d=function(e,r){for(var n=e.length,t=e[0].length,i=0,u=[],s=0,a=[],o=0;n>o;o++){var v=[];for(a=e[o],s=r[o],i=0;t>i;i++)v.push(a[i]*s);v.push(s),u.push(v)}return u},verb.eval.nurbs.homogenize_2d=function(e,r){for(var n=e.length,t=(e[0].length,e[0][0].length,[]),i=0;n>i;i++)t.push(verb.eval.nurbs.homogenize_1d(e[i],r[i]));return t},verb.eval.nurbs.surface_derivs=function(e,r,n,t,i,u,s,a){var o=r.length-e-2,v=t.length-n-2;return verb.eval.nurbs.surface_derivs_given_n_m(o,e,r,v,n,t,i,u,s,a)},verb.eval.nurbs.surface_derivs_given_n_m=function(e,r,n,t,i,u,s,a,o,v){if(verb.eval.nurbs.are_valid_relations(r,s.length,n.length)===!1||verb.eval.nurbs.are_valid_relations(i,s[0].length,u.length)===!1)return console.error("Invalid relations between control points, knot vector, and n"),null;var l=s[0][0].length,c=Math.min(a,r),b=Math.min(a,i),h=verb.eval.nurbs.zeros_3d(c+1,b+1,l),_=verb.eval.nurbs.knot_span_given_n(e,r,o,n),m=verb.eval.nurbs.knot_span_given_n(t,i,v,u),g=verb.eval.nurbs.deriv_basis_functions_given_n_i(_,o,r,e,n),f=verb.eval.nurbs.deriv_basis_functions_given_n_i(m,v,i,t,u),d=verb.eval.nurbs.zeros_2d(i+1,l),p=0,y=0,k=0,x=0,N=0;for(p=0;c>=p;p++){for(y=0;i>=y;y++)for(d[y]=verb.eval.nurbs.zeros_1d(l),k=0;r>=k;k++)d[y]=numeric.add(d[y],numeric.mul(g[p][k],s[_-r+k][m-i+y]));for(N=Math.min(a-p,b),x=0;N>=x;x++)for(h[p][x]=verb.eval.nurbs.zeros_1d(l),y=0;i>=y;y++)h[p][x]=numeric.add(h[p][x],numeric.mul(f[x][y],d[y]))}return h},verb.eval.nurbs.surface_point=function(e,r,n,t,i,u,s){var a=r.length-e-2,o=t.length-n-2;return verb.eval.nurbs.surface_point_given_n_m(a,e,r,o,n,t,i,u,s)},verb.eval.nurbs.volume_point=function(e,r,n,t,i,u,s,a,o,v){var l=r.length-e-2,c=t.length-n-2,b=u.length-i-2;return verb.eval.nurbs.volume_point_given_n_m_l(l,e,r,c,n,t,b,i,u,s,a,o,v)},verb.eval.nurbs.volume_point_given_n_m_l=function(e,r,n,t,i,u,s,a,o,v,l,c,b){if(!verb.eval.nurbs.are_valid_relations(r,v.length,n.length)||!verb.eval.nurbs.are_valid_relations(i,v[0].length,u.length)||!verb.eval.nurbs.are_valid_relations(a,v[0][0].length,o.length))return console.error("Invalid relations between control points and knot vector"),null;for(var h=v[0][0][0].length,_=verb.eval.nurbs.knot_span_given_n(e,r,l,n),m=verb.eval.nurbs.knot_span_given_n(t,i,c,u),g=verb.eval.nurbs.knot_span_given_n(s,a,b,o),f=verb.eval.nurbs.basis_functions_given_knot_span_index(_,l,r,n),d=verb.eval.nurbs.basis_functions_given_knot_span_index(m,c,i,u),p=verb.eval.nurbs.basis_functions_given_knot_span_index(g,b,a,o),y=_-r,k=m,x=g,N=verb.eval.nurbs.zeros_1d(h),w=verb.eval.nurbs.zeros_1d(h),E=verb.eval.nurbs.zeros_1d(h),M=0,z=0,A=0;a>=A;A++){for(E=verb.eval.nurbs.zeros_1d(h),x=g-a+A,M=0;i>=M;M++){for(w=verb.eval.nurbs.zeros_1d(h),k=m-i+M,z=0;r>=z;z++)w=numeric.add(w,numeric.mul(f[z],v[y+z][k][x]));E=numeric.add(E,numeric.mul(d[M],w))}N=numeric.add(N,numeric.mul(p[A],E))}return N},verb.eval.nurbs.surface_point_given_n_m=function(e,r,n,t,i,u,s,a,o){if(verb.eval.nurbs.are_valid_relations(r,s.length,n.length)===!1||verb.eval.nurbs.are_valid_relations(i,s[0].length,u.length)===!1)return console.error("Invalid relations between control points, knot vector, and n"),null;var v=s[0][0].length,l=verb.eval.nurbs.knot_span_given_n(e,r,a,n),c=verb.eval.nurbs.knot_span_given_n(t,i,o,u),b=verb.eval.nurbs.basis_functions_given_knot_span_index(l,a,r,n),h=verb.eval.nurbs.basis_functions_given_knot_span_index(c,o,i,u),_=l-r,m=c,g=verb.eval.nurbs.zeros_1d(v),f=verb.eval.nurbs.zeros_1d(v),d=0,p=0;for(d=0;i>=d;d++){for(f=verb.eval.nurbs.zeros_1d(v),m=c-i+d,p=0;r>=p;p++)f=numeric.add(f,numeric.mul(b[p],s[_+p][m]));g=numeric.add(g,numeric.mul(h[d],f))}return g},verb.eval.nurbs.curve_derivs=function(e,r,n,t,i){var u=r.length-e-2;return verb.eval.nurbs.curve_derivs_given_n(u,e,r,n,t,i)},verb.eval.nurbs.curve_derivs_given_n=function(e,r,n,t,i,u){if(verb.eval.nurbs.are_valid_relations(r,t.length,n.length)===!1)return console.error("Invalid relations between control points, knot vector, and n"),null;var s=t[0].length,a=Math.min(u,r),o=verb.eval.nurbs.zeros_2d(a+1,s),v=verb.eval.nurbs.knot_span_given_n(e,r,i,n),l=verb.eval.nurbs.deriv_basis_functions_given_n_i(v,i,r,a,n),c=0,b=0;for(c=0;a>=c;c++)for(b=0;r>=b;b++)o[c]=numeric.add(o[c],numeric.mul(l[c][b],t[v-r+b]));return o},verb.eval.nurbs.are_valid_relations=function(e,r,n){return 0===r+e+1-n?!0:!1},verb.eval.nurbs.curve_point=function(e,r,n,t){var i=r.length-e-2;return verb.eval.nurbs.curve_point_given_n(i,e,r,n,t)},verb.eval.nurbs.curve_point_given_n=function(e,r,n,t,i){if(verb.eval.nurbs.are_valid_relations(r,t.length,n.length)===!1)return console.error("Invalid relations between control points, knot vector, and n"),null;for(var u=verb.eval.nurbs.knot_span_given_n(e,r,i,n),s=verb.eval.nurbs.basis_functions_given_knot_span_index(u,i,r,n),a=verb.eval.nurbs.zeros_1d(t[0].length),o=0;r>=o;o++)a=numeric.add(a,numeric.mul(s[o],t[u-r+o]));return a},verb.eval.nurbs.zeros_1d=function(e){e=e>0?e:0;for(var r=[];e--;)r.push(0);return r},verb.eval.nurbs.zeros_2d=function(e,r){r=r>0?r:0,e=e>0?e:0;for(var n=[],t=r,i=e;e--;){for(n.push([]);t--;)n[i-e-1].push(0);t=r}return n},verb.eval.nurbs.zeros_3d=function(e,r,n){r=r>0?r:0,e=e>0?e:0;for(var t=[],i=r,u=e;e--;){for(t.push([]);i--;)t[u-e-1].push(verb.eval.nurbs.zeros_1d(n));i=r}return t},verb.eval.nurbs.deriv_basis_functions=function(e,r,n){var t=verb.eval.nurbs.knot_span(r,e,n),i=n.length-1,u=i-r-1;return verb.eval.nurbs.deriv_basis_functions_given_n_i(t,e,r,u,n)},verb.eval.nurbs.deriv_basis_functions_given_n_i=function(e,r,n,t,i){var u=verb.eval.nurbs.zeros_2d(n+1,n+1),s=Array(n+1),a=Array(n+1),o=0,v=0,l=1,c=0;for(u[0][0]=1,l=1;n>=l;l++){for(s[l]=r-i[e+1-l],a[l]=i[e+l]-r,o=0,c=0;l>c;c++)u[l][c]=a[c+1]+s[l-c],v=u[c][l-1]/u[l][c],u[c][l]=o+a[c+1]*v,o=s[l-c]*v;u[l][l]=o}var b=verb.eval.nurbs.zeros_2d(t+1,n+1),h=verb.eval.nurbs.zeros_2d(2,n+1),_=1,m=0,g=1,f=0,d=0,p=0,y=0,k=0;for(l=0;n>=l;l++)b[0][l]=u[l][n];for(c=0;n>=c;c++)for(m=0,g=1,h[0][0]=1,_=1;t>=_;_++){for(f=0,d=c-_,p=n-_,c>=_&&(h[g][0]=h[m][0]/u[p+1][d],f=h[g][0]*u[d][p]),y=d>=-1?1:-d,k=p>=c-1?_-1:n-c,l=y;k>=l;l++)h[g][l]=(h[m][l]-h[m][l-1])/u[p+1][d+l],f+=h[g][l]*u[d+l][p];p>=c&&(h[g][_]=-h[m][_-1]/u[p+1][c],f+=h[g][_]*u[c][p]),b[_][c]=f,l=m,m=g,g=l}for(c=n,_=1;t>=_;_++){for(l=0;n>=l;l++)b[_][l]*=c;c*=n-_}return b},verb.eval.nurbs.basis_functions=function(e,r,n){var t=verb.eval.nurbs.knot_span(e,r,n);return verb.eval.nurbs.basis_functions_given_knot_span_index(t,e,r,n)},verb.eval.nurbs.basis_functions_given_knot_span_index=function(e,r,n,t){var i=Array(n+1),u=Array(n+1),s=Array(n+1),a=0,o=0;i[0]=1;for(var v=1;n>=v;v++){u[v]=r-t[e+1-v],s[v]=t[e+v]-r,a=0;for(var l=0;v>l;l++)o=i[l]/(s[l+1]+u[v-l]),i[l]=a+s[l+1]*o,a=u[v-l]*o;i[v]=a}return i},verb.eval.nurbs.knot_span=function(e,r,n){var t=n.length-1,i=t-e-1;return verb.eval.nurbs.knot_span_given_n(i,e,r,n)},verb.eval.nurbs.knot_span_given_n=function(e,r,n,t){if(n>=t[e+1])return e;if(t[r]>n)return r;for(var i=r,u=e+1,s=Math.floor((i+u)/2);t[s]>n||n>=t[s+1];)t[s]>n?u=s:i=s,s=Math.floor((i+u)/2);return s};