/*! verb 2014-12-26 */
function CurvePoint(e,r){this.u=e,this.len=r}function crossprod(e,r){return[e[1]*r[2]-e[2]*r[1],e[2]*r[0]-e[0]*r[2],e[0]*r[1]-e[1]*r[0]]}if("object"!=typeof exports||void 0===exports)importScripts("labor.js"),importScripts("binomial.js"),importScripts("numeric-1.2.6.min.js");else var labor=require("labor");var verb=verb||{};verb.eval=verb.eval||{},verb.EPSILON=1e-8,verb.TOLERANCE=.001;var router=new labor.Router(verb.eval);numeric.normalized=function(e){return numeric.div(e,numeric.norm2(e))},numeric.cross=function(e,r){return[e[1]*r[2]-e[2]*r[1],e[2]*r[0]-e[0]*r[2],e[0]*r[1]-e[1]*r[0]]},verb.left=function(e){if(0===e.length)return[];var r=Math.ceil(e.length/2);return e.slice(0,r)},verb.right=function(e){if(0===e.length)return[];var r=Math.ceil(e.length/2);return e.slice(r)},verb.rightWithPivot=function(e){if(0===e.length)return[];var r=Math.ceil(e.length/2);return e.slice(r-1)},verb.unique=function(e,r){if(0===e.length)return[];for(var n=[e.pop()],t=0;e.length>t;t++){for(var i=e.pop(),a=!0,o=0;n.length>o;o++)if(r(i,n[t])){a=!1;break}a&&n.push(i)}return n},verb.eval.intersect_rational_curve_surface_by_aabb_refine=function(e,r,n,t,i,a,o,u,s,v,l,c){var _=verb.eval.intersect_rational_curve_surface_by_aabb(e,r,n,t,i,a,o,u,s,v,l,c);return _.map(function(s){var v=[s.p,s.uv[0],s.uv[1]],l=verb.eval.refine_rational_curve_surface_intersection(e,r,n,t,i,a,o,u,v);return s.p=l[0],s.uv[0]=l[1],s.uv[1]=l[2],s.distance=l[3],delete s.face,s})},verb.eval.refine_rational_curve_surface_intersection=function(e,r,n,t,i,a,o,u,s){var v=function(s){var v=verb.eval.rational_curve_point(a,o,u,s[0]),l=verb.eval.rational_surface_point(e,r,n,t,i,s[1],s[2]),c=numeric.sub(v,l);return numeric.dot(c,c)},l=numeric.uncmin(v,s);return l.solution.concat(l.f)},verb.eval.intersect_rational_curve_surface_by_aabb=function(e,r,n,t,i,a,o,u,s,v,l,c){var _=verb.eval.rational_curve_adaptive_sample(a,o,u,s,!0),h=verb.eval.tessellate_rational_surface_naive(e,r,n,t,i,l,c),b=_.map(function(e){return e[0]}),m=_.map(function(e){return e.slice(1)}),d=verb.eval.intersect_parametric_polyline_mesh_by_aabb(m,b,h,verb.range(h.faces.length),v);return verb.unique(d,function(e,r){return v>numeric.norm2(numeric.sub(e.point,r.point))&&v>Math.abs(e.p-r.p)&&v>numeric.norm2(numeric.sub(e.uv,r.uv))})},verb.eval.intersect_parametric_polyline_mesh_by_aabb=function(e,r,n,t,i){var a=new verb.BoundingBox(e),o=verb.eval.make_mesh_aabb(n.points,n.faces,t),u=verb.eval.intersect_parametric_polyline_mesh_by_aabb;if(!a.intersects(o,i))return[];if(2!==e.length||1!==t.length){if(1===t.length){var s=verb.left(e),v=verb.rightWithPivot(e),l=verb.left(r),c=verb.rightWithPivot(r);return u(s,l,n,t,i).concat(u(v,c,n,t,i))}if(2===e.length){var _=verb.eval.sort_tris_on_longest_axis(o,n.points,n.faces,t),h=verb.left(_),b=verb.right(_);return u(e,r,n,h,i).concat(u(e,r,n,b,i))}var _=verb.eval.sort_tris_on_longest_axis(o,n.points,n.faces,t),h=verb.left(_),b=verb.right(_),s=verb.left(e),v=verb.rightWithPivot(e),l=verb.left(r),c=verb.rightWithPivot(r);return u(s,l,n,h,i).concat(u(s,l,n,b,i)).concat(u(v,c,n,h,i)).concat(u(v,c,n,b,i))}var m=verb.eval.intersect_segment_with_tri(e[0],e[1],n.points,n.faces[t[0]]);if(null!=m){var d=m.p*(r[1]-r[0])+r[0],f=n.faces[t][0],p=n.faces[t][1],g=n.faces[t][2],k=n.uvs[f],y=n.uvs[p],x=n.uvs[g],N=numeric.sub(y,k),E=numeric.sub(x,k),z=numeric.add(k,numeric.mul(m.s,N),numeric.mul(m.t,E));return[{point:m.point,p:d,uv:z,face:t[0]}]}return[]},verb.eval.intersect_segment_with_tri=function(e,r,n,t){var i=n[t[0]],a=n[t[1]],o=n[t[2]],u=numeric.sub(a,i),s=numeric.sub(o,i),v=numeric.cross(u,s),l=numeric.sub(r,e),c=numeric.sub(e,i),_=-numeric.dot(v,c),h=numeric.dot(v,l);if(Math.abs(h)<verb.EPSILON)return null;var b=_/h;if(0>b||b>1)return null;var m=numeric.add(e,numeric.mul(b,l)),d=numeric.dot(u,s),f=numeric.dot(u,u),p=numeric.dot(s,s),g=numeric.sub(m,i),k=numeric.dot(g,u),y=numeric.dot(g,s),x=d*d-f*p,N=(d*y-p*k)/x,E=(d*k-f*y)/x;return N>1+verb.EPSILON||E>1+verb.EPSILON||-verb.EPSILON>E||-verb.EPSILON>N||N+E>1+verb.EPSILON?null:{point:m,s:N,t:E,p:b}},verb.eval.intersect_segment_with_plane=function(e,r,n,t){var i=numeric.dot(t,numeric.sub(e,r));if(EPSILON>abs(i))return null;var a=numeric.dot(t,numeric.sub(n,e));return{p:a/i}},verb.eval.intersect_aabb_trees=function(e,r,n,t,i,a){var o=i.bounding_box.intersects(a.bounding_box),u=verb.eval.intersect_aabb_trees;return o?0===i.children.length&&0===a.children.length?[[i.triangle,a.triangle]]:0===i.children.length&&0!=a.children.length?u(e,r,n,t,i,a.children[0]).concat(u(e,r,n,t,i,a.children[1])):0!=i.children.length&&0===a.children.length?u(e,r,n,t,i.children[0],a).concat(u(e,r,n,t,i.children[1],a)):0!=i.children.length&&0!=a.children.length?u(e,r,n,t,i.children[0],a.children[0]).concat(u(e,r,n,t,i.children[0],a.children[1])).concat(u(e,r,n,t,i.children[1],a.children[0])).concat(u(e,r,n,t,i.children[1],a.children[1])):void 0:[]},verb.eval.make_mesh_aabb_tree=function(e,r,n){var t={bounding_box:verb.eval.make_mesh_aabb(e,r,n),children:[]};if(1===n.length)return t.triangle=n[0],t;var i=verb.eval.sort_tris_on_longest_axis(t.bounding_box,e,r,n),a=i.slice(0,Math.floor(i.length/2)),o=i.slice(Math.floor(i.length/2),i.length);return t.children=[verb.eval.make_mesh_aabb_tree(e,r,a),verb.eval.make_mesh_aabb_tree(e,r,o)],t},verb.eval.make_mesh_aabb=function(e,r,n){var t=new verb.BoundingBox;return n.forEach(function(n){t.add(e[r[n][0]]),t.add(e[r[n][1]]),t.add(e[r[n][2]])}),t},verb.eval.sort_tris_on_longest_axis=function(e,r,n,t){for(var i=e.getLongestAxis(),a=[],o=t.length-1;o>=0;o--){var u=t[o],s=verb.eval.get_min_coordinate_on_axis(r,n[u],i);a.push([s,u])}a.sort(function(e,r){return e[0]>r[0]});for(var v=[],o=0,l=a.length;l>o;o++)v.push(a[o][1]);return v},verb.eval.get_min_coordinate_on_axis=function(e,r,n){for(var t=[],i=0;3>i;i++)t.push(e[r[i]][n]);return Math.min.apply(Math,t)},verb.eval.get_tri_centroid=function(e,r){for(var n=[0,0,0],t=0;3>t;t++)for(var i=0;3>i;i++)n[i]+=e[r[t]][i];for(var t=0;3>t;t++)n[t]/=3;return n},verb.eval.get_tri_norm=function(e,r){var n=e[r[0]],t=e[r[1]],i=e[r[2]],a=numeric.sub(t,n),o=numeric.sub(i,n),u=numeric.cross(a,o);return numeric.mul(1/numeric.norm2(u),u)},verb.eval.intersect_rational_curves_by_aabb_refine=function(e,r,n,t,i,a,o,u){var s=verb.eval.intersect_rational_curves_by_aabb(e,r,n,t,i,a,o,u);return s.map(function(o){return verb.eval.refine_rational_curve_intersection(e,r,n,t,i,a,o)})},verb.eval.refine_rational_curve_intersection=function(e,r,n,t,i,a,o){var u=function(o){var u=verb.eval.rational_curve_point(e,r,n,o[0]),s=verb.eval.rational_curve_point(t,i,a,o[1]),v=numeric.sub(u,s);return numeric.dot(v,v)},s=numeric.uncmin(u,o);return s.solution.concat(s.f)},verb.eval.intersect_rational_curves_by_aabb=function(e,r,n,t,i,a,o,u){var s=verb.eval.rational_curve_adaptive_sample(e,r,n,o,!0),v=verb.eval.rational_curve_adaptive_sample(t,i,a,o,!0),l=s.map(function(e){return e[0]}),c=v.map(function(e){return e[0]}),_=s.map(function(e){return e.slice(1)}),h=v.map(function(e){return e.slice(1)});return verb.eval.intersect_parametric_polylines_by_aabb(_,h,l,c,u)},verb.eval.intersect_parametric_polylines_by_aabb=function(e,r,n,t,i){var a=new verb.BoundingBox(e),o=new verb.BoundingBox(r);if(!a.intersects(o,i))return[];if(2!==e.length||2!==r.length){if(2===e.length){var u=Math.ceil(r.length/2),s=r.slice(0,u),v=r.slice(u-1),l=t.slice(0,u),c=t.slice(u-1);return verb.eval.intersect_parametric_polylines_by_aabb(e,s,n,l,i).concat(verb.eval.intersect_parametric_polylines_by_aabb(e,v,n,c,i))}if(2===r.length){var _=Math.ceil(e.length/2),h=e.slice(0,_),b=e.slice(_-1),m=n.slice(0,_),d=n.slice(_-1);return verb.eval.intersect_parametric_polylines_by_aabb(h,r,m,t,i).concat(verb.eval.intersect_parametric_polylines_by_aabb(b,r,d,t,i))}var _=Math.ceil(e.length/2),h=e.slice(0,_),b=e.slice(_-1),m=n.slice(0,_),d=n.slice(_-1),u=Math.ceil(r.length/2),s=r.slice(0,u),v=r.slice(u-1),l=t.slice(0,u),c=t.slice(u-1);return verb.eval.intersect_parametric_polylines_by_aabb(h,s,m,l,i).concat(verb.eval.intersect_parametric_polylines_by_aabb(h,v,m,c,i)).concat(verb.eval.intersect_parametric_polylines_by_aabb(b,s,d,l,i)).concat(verb.eval.intersect_parametric_polylines_by_aabb(b,v,d,c,i))}var f=verb.eval.intersect_segments(e[0],e[1],r[0],r[1],i);return null!=f?(f[0][0]=f[0][0]*(n[1]-n[0])+n[0],f[1][0]=f[1][0]*(t[1]-t[0])+t[0],[[f[0][0],f[1][0]]]):[]},verb.eval.intersect_segments=function(e,r,n,t,i){var a=numeric.sub(r,e),o=Math.sqrt(numeric.dot(a,a)),u=numeric.mul(1/o,a),s=numeric.sub(t,n),v=Math.sqrt(numeric.dot(s,s)),l=numeric.mul(1/v,s),c=verb.eval.intersect_rays(e,u,n,l);if(null!=c){var _=Math.min(Math.max(0,c[0]/o),1),h=Math.min(Math.max(0,c[1]/v),1),b=numeric.add(numeric.mul(_,a),e),m=numeric.add(numeric.mul(h,s),n),d=numeric.norm2Squared(numeric.sub(b,m));if(i*i>d)return[[_].concat(b),[h].concat(m)]}return null},verb.eval.closest_point_on_segment=function(e,r,n,t,i){var a=numeric.sub(n,r),o=numeric.norm2(a);if(verb.EPSILON>o)return{u:t,pt:r};var u=r,s=numeric.mul(1/o,a),v=numeric.sub(e,u),l=numeric.dot(v,s);return 0>l?{u:t,pt:r}:l>o?{u:i,pt:n}:{u:t+(i-t)*l/o,pt:numeric.add(u,numeric.mul(l,s))}},verb.eval.closest_point_on_ray=function(e,r,n){var t=numeric.sub(e,r),i=numeric.dot(t,n),a=numeric.add(r,numeric.mul(i,n));return a},verb.eval.dist_to_ray=function(e,r,n){var t=verb.eval.closest_point_on_ray(e,r,n),i=numeric.sub(t,e);return numeric.norm2(i)},verb.eval.intersect_rays=function(e,r,n,t){var i=numeric.dot(r,t),a=numeric.dot(r,n),o=numeric.dot(r,e),u=numeric.dot(t,n),s=numeric.dot(t,e),v=numeric.dot(r,r),l=numeric.dot(t,t),c=v*l-i*i;if(Math.abs(c)<verb.EPSILON)return null;var _=i*(a-o)-v*(u-s),h=_/c,b=(a-o+h*i)/v;return[b,h]},verb.eval.intersect_3_planes=function(e,r,n,t,i,a){var o=numeric.cross(n,i),u=numeric.dot(e,o);if(Math.abs(u)<verb.EPSILON)return null;var s=numeric.add(numeric.mul(r,o),numeric.cross(e,numeric.sub(numeric.mul(a,n),numeric.mul(t,i))));return numeric.mul(1/u,s)},verb.eval.refine_rational_surface_intersect_point=function(e,r,n,t,i,a,o,u,s,v,l,c,_){var h,b,m,d,f,p,g,k,y,x,N,E,z,w=1,S=0,P=function(e,r){return verb.eval.rational_surface_derivs(n,t,i,a,o,1,e,r)},M=function(e,r){return verb.eval.rational_surface_derivs(u,s,v,l,c,1,e,r)};do{if(h=P(e[0],e[1]),b=h[0][0],d=h[1][0],f=h[0][1],m=numeric.normalized(numeric.cross(d,f)),p=numeric.dot(m,b),g=M(r[0],r[1]),k=g[0][0],x=g[1][0],N=g[0][1],y=numeric.normalized(numeric.cross(x,N)),E=numeric.dot(y,k),z=numeric.norm2(numeric.sub(b,k)),_>z)break;var A=numeric.normalized(numeric.cross(m,y)),I=numeric.dot(A,b),L=verb.eval.intersect_3_planes(m,p,y,E,A,I);if(null===L)throw Error("panic!");var C=numeric.sub(L,b),O=numeric.sub(L,k),R=numeric.cross(d,m),T=numeric.cross(f,m),B=numeric.cross(x,y),j=numeric.cross(N,y),U=numeric.dot(T,C)/numeric.dot(T,d),q=numeric.dot(R,C)/numeric.dot(R,f),D=numeric.dot(j,O)/numeric.dot(j,x),V=numeric.dot(B,O)/numeric.dot(B,N);e=numeric.add([U,q],e),r=numeric.add([D,V],r),S++}while(w>S);return{uv1:e,uv2:r,pt:b,d:z}},verb.eval.intersect_rational_surface_surface_by_aabb_refine=function(e,r,n,t,i,a,o,u,s,v,l){var c={degree_u:e,degree_v:n,knots_u:r,knots_v:t,homo_control_points:i},_=verb.eval.tessellate_rational_surface_adaptive(c.degree_u,c.knots_u,c.degree_v,c.knots_v,c.homo_control_points),h={degree_u:a,degree_v:u,knots_u:o,knots_v:s,homo_control_points:v},b=verb.eval.tessellate_rational_surface_adaptive(h.degree_u,h.knots_u,h.degree_v,h.knots_v,h.homo_control_points),m=verb.eval.intersect_meshes_by_aabb(_.points,_.faces,_.uvs,b.points,b.faces,b.uvs),d=m.map(function(c){return c.map(function(c){return verb.eval.refine_rational_surface_intersect_point(c.uvtri1,c.uvtri2,e,r,n,t,i,a,o,u,s,v,l)})});return d.map(function(e){return verb.eval.rational_interp_curve(e.map(function(e){return e.pt}),3)})},verb.eval.intersect_meshes_by_aabb=function(e,r,n,t,i,a){var o=verb.range(r.length),u=verb.range(i.length),s=verb.eval.make_mesh_aabb_tree(e,r,o),v=verb.eval.make_mesh_aabb_tree(t,i,u),l=verb.eval.intersect_aabb_trees(e,r,t,i,s,v),c=l.map(function(o){var u=verb.eval.intersect_tris(e,r[o[0]],n,t,i[o[1]],a);return u?(u[0].tri1id=o[0],u[1].tri1id=o[0],u[0].tri2id=o[1],u[1].tri2id=o[1],u):u}).filter(function(e){return e}).filter(function(e){var r=numeric.sub(e[0].pt,e[1].pt);return numeric.dot(r,r)>verb.EPSILON});return c=verb.unique(c,function(e,r){var n=numeric.sub(e[0].uvtri1,r[0].uvtri1),t=numeric.dot(n,n),i=numeric.sub(e[1].uvtri1,r[1].uvtri1),a=numeric.dot(i,i),o=numeric.sub(e[0].uvtri1,r[1].uvtri1),u=numeric.dot(o,o),s=numeric.sub(e[1].uvtri1,r[0].uvtri1),v=numeric.dot(s,s);return verb.EPSILON>t&&verb.EPSILON>a||verb.EPSILON>u&&verb.EPSILON>v}),0===c.length?[]:verb.eval.make_intersect_polylines(c)},verb.eval.make_intersect_polylines=function(e){e.forEach(function(e){e[1].opp=e[0],e[0].opp=e[1]});var r=verb.eval.kdtree_from_segs(e),n=e.flatten();n.forEach(function(n){if(!n.adj){var t=verb.eval.lookup_adj_segment(n,r,e.length);t&&!t.adj&&(n.adj=t,t.adj=n)}});var t=n.filter(function(e){return!e.adj});0===t.length&&(t=n);var i=[];return t.forEach(function(e){if(!e.v){for(var r=[],n=e;n;){if(n.v)throw Error("Segment end encountered twice!");if(n.v=!0,n.opp.v=!0,r.push(n),n=n.opp.adj,n===e)break}r.length>0&&(r.push(r[r.length-1].opp),i.push(r))}}),i},verb.eval.pt_dist=function(e,r){return Math.pow(e.x-r.x,2)+Math.pow(e.y-r.y,2)+Math.pow(e.z-r.z,2)},verb.eval.kdtree_from_segs=function(e){var r=[];return e.forEach(function(e){r.push({x:e[0].pt[0],y:e[0].pt[1],z:e[0].pt[2],ele:e[0]}),r.push({x:e[1].pt[0],y:e[1].pt[1],z:e[1].pt[2],ele:e[1]})}),new KdTree(r,verb.eval.pt_dist,["x","y","z"])},verb.eval.lookup_adj_segment=function(e,r,n){var t=n?Math.min(n,3):3,i=r.nearest({x:e.pt[0],y:e.pt[1],z:e.pt[2]},t).filter(function(r){return e!=r[0].ele&&r[1]<verb.EPSILON}).map(function(e){return e[0].ele});return 1===i.length?i[0]:null},verb.eval.intersect_tris=function(e,r,n,t,i,a){var o=verb.eval.get_tri_norm(e,r),u=verb.eval.get_tri_norm(t,i),s=e[r[0]],v=t[i[0]],l=verb.eval.intersect_planes(s,o,v,u);if(!l.intersects)return null;var c=verb.eval.clip_ray_in_coplanar_tri(l.origin,l.dir,e,r,n);if(null===c)return null;var _=verb.eval.clip_ray_in_coplanar_tri(l.origin,l.dir,t,i,a);if(null===_)return null;var h=verb.eval.merge_tri_clip_intervals(c,_,e,r,n,t,i,a);return null===h?null:[{uvtri1:h.uv1tri1,uvtri2:h.uv1tri2,pt:h.pt1},{uvtri1:h.uv2tri1,uvtri2:h.uv2tri2,pt:h.pt2}]},verb.eval.clip_ray_in_coplanar_tri=function(e,r,n,t,i){for(var a=[n[t[0]],n[t[1]],n[t[2]]],i=[i[t[0]],i[t[1]],i[t[2]]],o=[numeric.sub(i[1],i[0]),numeric.sub(i[2],i[1]),numeric.sub(i[0],i[2])],u=[numeric.sub(a[1],a[0]),numeric.sub(a[2],a[1]),numeric.sub(a[0],a[2])],s=u.map(numeric.normalized),v=u.map(numeric.norm2),l=null,c=null,_=0;3>_;_++){var h=a[_],b=s[_],m=verb.eval.intersect_rays(h,b,e,r);if(null!==m){var d=m[0],f=m[1];-verb.EPSILON>d||d>v[_]+verb.EPSILON||((null===l||l.u>f)&&(l={u:f,pt:verb.eval.point_on_ray(e,r,f),uv:numeric.add(i[_],numeric.mul(d/v[_],o[_]))}),(null===c||f>c.u)&&(c={u:f,pt:verb.eval.point_on_ray(e,r,f),uv:numeric.add(i[_],numeric.mul(d/v[_],o[_]))}))}}return null===c||null===l?null:{min:l,max:c}},verb.eval.point_on_ray=function(e,r,n){return numeric.add(e,numeric.mul(n,r))},verb.eval.merge_tri_clip_intervals=function(e,r,n,t,i,a,o,u){if(r.min.u>e.max.u+verb.EPSILON||e.min.u>r.max.u+verb.EPSILON)return null;e.min.tri=0,e.max.tri=0,r.min.tri=1,r.max.tri=1;var s=e.min.u>r.min.u?e.min:r.min,v=e.max.u<r.max.u?e.max:r.max,l={};return 0===s.tri?(l.uv1tri1=s.uv,l.uv1tri2=verb.eval.tri_uv_from_point(a,o,u,s.pt)):(l.uv1tri1=verb.eval.tri_uv_from_point(n,t,i,s.pt),l.uv1tri2=s.uv),l.pt1=s.pt,0===v.tri?(l.uv2tri1=v.uv,l.uv2tri2=verb.eval.tri_uv_from_point(a,o,u,v.pt)):(l.uv2tri1=verb.eval.tri_uv_from_point(n,t,i,v.pt),l.uv2tri2=v.uv),l.pt2=v.pt,l},verb.eval.intersect_planes=function(e,r,n,t){var i=numeric.cross(r,t);if(numeric.dot(i,i)<verb.EPSILON)return{intersects:!1};var a=0,o=Math.abs(i[0]),u=Math.abs(i[1]),s=Math.abs(i[2]);u>o&&(a=1,o=u),s>o&&(a=2,o=s);var v,l,c,_;0===a?(v=r[1],l=r[2],c=t[1],_=t[2]):1===a?(v=r[0],l=r[2],c=t[0],_=t[2]):(v=r[0],l=r[1],c=t[0],_=t[1]);var h,b=-numeric.dot(e,r),m=-numeric.dot(n,t),d=v*_-l*c,f=(l*m-b*_)/d,p=(b*c-v*m)/d;return h=0===a?[0,f,p]:1===a?[f,0,p]:[f,p,0],{intersects:!0,origin:h,dir:numeric.normalized(i)}},verb.eval.tri_uv_from_point=function(e,r,n,t){var i=e[r[0]],a=e[r[1]],o=e[r[2]],u=n[r[0]],s=n[r[1]],v=n[r[2]],l=numeric.sub(i,t),c=numeric.sub(a,t),_=numeric.sub(o,t),h=numeric.norm2(numeric.cross(numeric.sub(i,a),numeric.sub(i,o))),b=numeric.norm2(numeric.cross(c,_))/h,m=numeric.norm2(numeric.cross(_,l))/h,d=numeric.norm2(numeric.cross(l,c))/h;return numeric.add(numeric.mul(b,u),numeric.mul(m,s),numeric.mul(d,v))},verb.eval.tessellate_rational_surface_naive=function(e,r,n,t,i,a,o){1>a&&(a=1),1>o&&(o=1);for(var u=r[r.length-1]-r[0],s=t[t.length-1]-t[0],v=u/a,l=s/o,c=[],_=[],h=[],b=0;a+1>b;b++)for(var m=0;o+1>m;m++){var d=b*v,f=m*l;_.push([d,f]);var p=verb.eval.rational_surface_derivs(e,r,n,t,i,1,d,f),g=p[0][0];c.push(g);var k=numeric.normalized(numeric.cross(p[0][1],p[1][0]));h.push(k)}for(var y=[],b=0;a>b;b++)for(var m=0;o>m;m++){var x=b*(o+1)+m,N=(b+1)*(o+1)+m,E=N+1,z=x+1,w=[x,N,E],S=[x,E,z];y.push(w),y.push(S)}return{points:c,faces:y,uvs:_,normals:h}},verb.eval.rational_curve_regular_sample=function(e,r,n,t,i){return verb.eval.rational_curve_regular_sample_range(e,r,n,r[0],verb.last(r),t,i)},verb.eval.rational_curve_regular_sample_range=function(e,r,n,t,i,a,o){1>a&&(a=2);for(var u=[],s=(i-t)/(a-1),v=0,l=0;a>l;l++)v=t+s*l,o?u.push([v].concat(verb.eval.rational_curve_point(e,r,n,v))):u.push(verb.eval.rational_curve_point(e,r,n,v));return u},verb.eval.rational_curve_adaptive_sample=function(e,r,n,t,i){return 1===e?i?n.map(function(e,n){return[r[n+1]].concat(verb.eval.dehomogenize(e))}):n.map(verb.eval.dehomogenize):verb.eval.rational_curve_adaptive_sample_range(e,r,n,r[0],r[r.length-1],t,i)},verb.eval.rational_curve_adaptive_sample_range=function(e,r,n,t,i,a,o){var u=verb.eval.rational_curve_point(e,r,n,t),s=verb.eval.rational_curve_point(e,r,n,i),v=.5+.2*Math.random(),l=t+(i-t)*v,c=verb.eval.rational_curve_point(e,r,n,l),_=numeric.sub(u,s),h=numeric.sub(u,c);if(a>numeric.dot(_,_)&&numeric.dot(h,h)>a||!verb.eval.three_points_are_flat(u,c,s,a)){var b=t+.5*(i-t),m=verb.eval.rational_curve_adaptive_sample_range(e,r,n,t,b,a,o),d=verb.eval.rational_curve_adaptive_sample_range(e,r,n,b,i,a,o);return m.slice(0,-1).concat(d)}return o?[[t].concat(u),[i].concat(s)]:[u,s]},verb.eval.three_points_are_flat=function(e,r,n,t){var i=numeric.sub(r,e),a=numeric.sub(n,e),o=crossprod(i,a),u=numeric.dot(o,o);return t>u},verb.eval.divide_rational_surface_adaptive=function(e,r,n,t,i,a){var o,u,s,v,l={degree_u:e,knots_u:r,degree_v:n,knots_v:t,homo_control_points:i};a=a||{},a.minDivsU=a.minDivsU||1,a.minDivsV=a.minDivsV||1,a.refine=void 0!=a.refine?a.refine:!0;var c=a.minDivsU=Math.max(a.minDivsU,3*(i.length-1)),_=a.minDivsV=Math.max(a.minDivsV,3*(i.length-1)),h=verb.last(r),b=r[0],m=verb.last(t),d=t[0],f=(h-b)/c,p=(m-d)/_,g=[],k=[];for(o=0,s=_+1;s>o;o++){var y=[];for(u=0,v=c+1;v>u;u++){var x=b+f*u,N=d+p*o,E=verb.eval.rational_surface_derivs(e,r,n,t,i,1,x,N),z=numeric.normalized(numeric.cross(E[0][1],E[1][0]));y.push(new verb.SurfacePoint(E[0][0],z,[x,N],null,verb.isZero(z)))}k.push(y)}for(o=0;_>o;o++)for(u=0;c>u;u++){var w=[k[_-o-1][u],k[_-o-1][u+1],k[_-o][u+1],k[_-o][u]];g.push(new verb.eval.AdaptiveRefinementNode(l,w))}if(!a.refine)return g;for(o=0;_>o;o++)for(u=0;c>u;u++){var S=o*c+u,P=verb.north(S,o,u,c,_,g),M=verb.east(S,o,u,c,_,g),A=verb.south(S,o,u,c,_,g),I=verb.west(S,o,u,c,_,g);g[S].neighbors=[A,M,P,I],g[S].divide(a)}return g},verb.north=function(e,r,n,t,i,a){return 0===r?null:a[e-t]},verb.south=function(e,r,n,t,i,a){return r===i-1?null:a[e+t]},verb.east=function(e,r,n,t,i,a){return n===t-1?null:a[e+1]},verb.west=function(e,r,n,t,i,a){return 0===n?null:a[e-1]},verb.eval.triangulate_adaptive_refinement_node_tree=function(e){var r=verb.TriMesh.empty();return e.forEach(function(e){e.triangulate(r)}),r},verb.eval.tessellate_rational_surface_adaptive=function(e,r,n,t,i,a){var o=verb.eval.divide_rational_surface_adaptive(e,r,n,t,i,a);return verb.eval.triangulate_adaptive_refinement_node_tree(o)},verb.eval.dist_to_seg=function(e,r,n){var t=numeric.sub(n,e),i=numeric.norm2(t),a=numeric.sub(r,e);if(verb.TOLERANCE>i)return numeric.norm2(a);var o=numeric.mul(1/i,t),u=numeric.dot(a,o),s=numeric.add(e,numeric.mul(u,o));return numeric.norm2(numeric.sub(s,r))},verb.SurfacePoint=function(e,r,n,t,i){this.uv=n,this.point=e,this.normal=r,this.id=t,this.degen=i},verb.SurfacePoint.fromUv=function(e,r){return new verb.SurfacePoint(null,null,[e,r],null,null)},verb.TriMesh=function(e,r,n,t){this.faces=e,this.points=r,this.uvs=n,this.normals=t},verb.TriMesh.empty=function(){return new verb.TriMesh([],[],[],[])},verb.eval.AdaptiveRefinementNode=function(e,r,n,t){if(this.srf=e,this.parentNode=n,this.neighbors=t||[null,null,null,null],!r){var i=e?e.knots_u[0]:null,a=e?verb.last(e.knots_u):null,o=e?e.knots_v[0]:null,u=e?verb.last(e.knots_v):null;r=[verb.SurfacePoint.fromUv(i,o),verb.SurfacePoint.fromUv(a,o),verb.SurfacePoint.fromUv(a,u),verb.SurfacePoint.fromUv(i,u)]}this.corners=r},verb.eval.AdaptiveRefinementNode.prototype.isLeaf=function(){return void 0===this.children},verb.eval.AdaptiveRefinementNode.prototype.center=function(){return this.centerPoint||this.evalSrf(this.u05,this.v05)},verb.eval.AdaptiveRefinementNode.prototype.evalCorners=function(){this.u05=this.u05||(this.corners[0].uv[0]+this.corners[2].uv[0])/2,this.v05=this.v05||(this.corners[0].uv[1]+this.corners[2].uv[1])/2;for(var e=0;4>e;e++)if(!this.corners[e].point){var r=this.corners[e];this.evalSrf(r.uv[0],r.uv[1],r)}},verb.eval.AdaptiveRefinementNode.prototype.evalSrf=function(e,r,n){var t=verb.eval.rational_surface_derivs(this.srf.degree_u,this.srf.knots_u,this.srf.degree_v,this.srf.knots_v,this.srf.homo_control_points,1,e,r),i=t[0][0],a=numeric.cross(t[0][1],t[1][0]),o=verb.isZero(a);return o||(a=numeric.normalized(a)),n?(n.degen=o,n.point=i,n.normal=a,n):new verb.SurfacePoint(i,a,[e,r],null,o)},verb.eval.AdaptiveRefinementNode.prototype.getEdgeCorners=function(e){if(this.isLeaf())return[this.corners[e]];if(this.horizontal)switch(e){case 0:return this.children[0].getEdgeCorners(0);case 1:return this.children[0].getEdgeCorners(1).concat(this.children[1].getEdgeCorners(1));case 2:return this.children[1].getEdgeCorners(2);case 3:return this.children[1].getEdgeCorners(3).concat(this.children[0].getEdgeCorners(3))}switch(e){case 0:return this.children[0].getEdgeCorners(0).concat(this.children[1].getEdgeCorners(0));case 1:return this.children[1].getEdgeCorners(1);case 2:return this.children[1].getEdgeCorners(2).concat(this.children[0].getEdgeCorners(2));case 3:return this.children[0].getEdgeCorners(3)}},verb.eval.AdaptiveRefinementNode.prototype.getAllCorners=function(e){var r=[this.corners[e]];if(!this.neighbors[e])return r;var n=this.neighbors[e].getEdgeCorners((e+2)%4),t=e%2,i=verb.EPSILON,a=this,o=[function(e){return e.uv[0]>a.corners[0].uv[0]+i&&e.uv[0]<a.corners[2].uv[0]-i},function(e){return e.uv[1]>a.corners[0].uv[1]+i&&e.uv[1]<a.corners[2].uv[1]-i}];return r.concat(n.filter(o[t]).reverse())},verb.eval.AdaptiveRefinementNode.prototype.midpoint=function(e){if(this.midPoints||(this.midpoints=[null,null,null,null]),this.midpoints[e])return this.midpoints[e];switch(e){case 0:this.midpoints[0]=this.evalSrf(this.u05,this.corners[0].uv[1]);break;case 1:this.midpoints[1]=this.evalSrf(this.corners[1].uv[0],this.v05);break;case 2:this.midpoints[2]=this.evalSrf(this.u05,this.corners[2].uv[1]);break;case 3:this.midpoints[3]=this.evalSrf(this.corners[0].uv[0],this.v05)}return this.midpoints[e]},verb.eval.AdaptiveRefinementNode.prototype.hasBadNormals=function(){return this.corners[0].degen||this.corners[1].degen||this.corners[2].degen||this.corners[3].degen},verb.eval.AdaptiveRefinementNode.prototype.fixNormals=function(){for(var e=0,r=this.corners.length;r>e;e++)if(this.corners[e],this.corners[e].degen){var n=this.corners[(e+1)%r],t=this.corners[(e+3)%r];this.corners[e].normal=n.degen?t.normal:n.normal}},verb.eval.AdaptiveRefinementNode.prototype.shouldDivide=function(e,r){if(e.minDepth>r)return!0;if(r>=e.maxDepth)return!1;if(this.hasBadNormals())return this.fixNormals(),!1;if(this.splitVert=numeric.norm2Squared(numeric.sub(this.corners[0].normal,this.corners[1].normal))>e.normTol||numeric.norm2Squared(numeric.sub(this.corners[2].normal,this.corners[3].normal))>e.normTol,this.splitHoriz=numeric.norm2Squared(numeric.sub(this.corners[1].normal,this.corners[2].normal))>e.normTol||numeric.norm2Squared(numeric.sub(this.corners[3].normal,this.corners[0].normal))>e.normTol,this.splitVert||this.splitHoriz)return!0;var n=this.center();return numeric.norm2Squared(numeric.sub(n.normal,this.corners[0].normal))>e.normTol||numeric.norm2Squared(numeric.sub(n.normal,this.corners[1].normal))>e.normTol||numeric.norm2Squared(numeric.sub(n.normal,this.corners[2].normal))>e.normTol||numeric.norm2Squared(numeric.sub(n.normal,this.corners[3].normal))>e.normTol},verb.eval.AdaptiveRefinementNode.prototype.divide=function(e){e=e||{},e.normTol=e.normTol||.085,e.minDepth=void 0!=e.minDepth?e.minDepth:0,e.maxDepth=void 0!=e.maxDepth?e.maxDepth:10,this._divide(e,0,!0)},verb.eval.AdaptiveRefinementNode.prototype._divide=function(e,r,n){if(this.evalCorners(),this.shouldDivide(e,r)){if(r++,this.splitVert&&!this.splitHoriz?n=!1:!this.splitVert&&this.splitHoriz&&(n=!0),this.horizontal=n,this.horizontal){var t=[this.corners[0],this.corners[1],this.midpoint(1),this.midpoint(3)],i=[this.midpoint(3),this.midpoint(1),this.corners[2],this.corners[3]];this.children=[new verb.eval.AdaptiveRefinementNode(this.srf,t,this),new verb.eval.AdaptiveRefinementNode(this.srf,i,this)],this.children[0].neighbors=[this.neighbors[0],this.neighbors[1],this.children[1],this.neighbors[3]],this.children[1].neighbors=[this.children[0],this.neighbors[1],this.neighbors[2],this.neighbors[3]]}else{var a=[this.corners[0],this.midpoint(0),this.midpoint(2),this.corners[3]],o=[this.midpoint(0),this.corners[1],this.corners[2],this.midpoint(2)];this.children=[new verb.eval.AdaptiveRefinementNode(this.srf,a,this),new verb.eval.AdaptiveRefinementNode(this.srf,o,this)],this.children[0].neighbors=[this.neighbors[0],this.children[1],this.neighbors[2],this.neighbors[3]],this.children[1].neighbors=[this.neighbors[0],this.neighbors[1],this.neighbors[2],this.children[0]]}this.children.forEach(function(t){t._divide(e,r,!n)})}},verb.eval.AdaptiveRefinementNode.prototype.triangulate=function(e){return e=e||verb.TriMesh.empty(),this.isLeaf()?this.triangulateLeaf(e):(this.children.forEach(function(r){r&&r.triangulate(e)}),e)},verb.eval.AdaptiveRefinementNode.prototype.triangulateLeaf=function(e){var r,n,t,i,a=e.points.length,o=[],u=[],s=0;for(s=0;4>s;s++){var v=this.getAllCorners(s);for(2===v.length&&(i=s+1),t=0;v.length>t;t++)o.push(v[t])}for(s=0,n=o.length;n>s;s++)r=o[s],void 0==r.id?(e.uvs.push(r.uv),e.points.push(r.point),e.normals.push(r.normal),r.id=a,u.push(a),a++):u.push(r.id);if(4===o.length)return e.faces.push([u[0],u[3],u[1]]),e.faces.push([u[3],u[2],u[1]]),e;if(5===o.length){var l=u.length;return e.faces.push([u[i],u[(i+1)%l],u[(i+2)%l]]),e.faces.push([u[(i+4)%l],u[(i+3)%l],u[i]]),e.faces.push([u[i],u[(i+2)%l],u[(i+3)%l]]),e}var c=this.center();e.uvs.push(c.uv),e.points.push(c.point),e.normals.push(c.normal);var _=e.points.length-1;for(s=0,t=o.length-1;o.length>s;t=s++)e.faces.push([_,u[t],u[s]]);return e},verb.eval.rational_surface_closest_point=function(e,r,n,t,i,a){function o(a){var o=verb.eval.rational_surface_derivs(e,r,n,t,i,2,a[0],a[1]);return o}function u(e,r,n){var t=r[1][0],i=r[0][1],a=r[2][0],o=r[0][2],u=r[1][1],s=r[1][1],v=numeric.dot(t,n),l=numeric.dot(i,n),c=[-v,-l],_=numeric.dot(t,t)+numeric.dot(a,n),h=numeric.dot(t,i)+numeric.dot(u,n),b=numeric.dot(t,i)+numeric.dot(s,n),m=numeric.dot(i,i)+numeric.dot(o,n),d=[[_,h],[b,m]],f=numeric.solve(d,c);return numeric.add(f,e)}var s,v,l,c=5,_=0,h=1e-4,b=5e-4,m=r[0],d=verb.last(r),f=t[0],p=verb.last(t),g=i[0].reduce(function(e,r,n){return e&&numeric.norm2Squared(numeric.sub(r,verb.last(i)[n]))<verb.EPSILON}),k=numeric.transpose(i),y=k[0].reduce(function(e,r,n){return e&&numeric.norm2Squared(numeric.sub(r,verb.last(k)[n]))<verb.EPSILON}),x=verb.eval.tessellate_rational_surface_adaptive(e,r,n,t,i,{normTol:.05}),N=Number.MAX_VALUE;for(x.points.forEach(function(e,r){var n=numeric.norm2Squared(numeric.sub(a,e));N>n&&(N=n,l=x.uvs[r])});c>_;){s=o(l),v=numeric.sub(s[0][0],a);var E=numeric.norm2(v),z=numeric.norm2(numeric.dot(s[1][0],v)),w=numeric.norm2(s[1][0])*I,S=numeric.norm2(numeric.dot(s[0][1],v)),P=numeric.norm2(s[0][1])*I,M=z/w,A=S/P,I=h>E,L=b>M,C=b>A;if(I&&L&&C)return l;var O=u(l,s,v);m>O[0]?O=g?[d-(O[0]-m),O[1]]:[m+verb.EPSILON,O[1]]:O[0]>d&&(O=g?[m+(O[0]-d),O[1]]:[d-verb.EPSILON,O[1]]),f>O[1]?O=y?[O[0],p-(O[1]-f)]:[O[0],f+verb.EPSILON]:O[1]>p&&(O=y?[O[0],f+(O[0]-p)]:[O[0],p-verb.EPSILON]);var R=numeric.norm2(numeric.mul(O[0]-l[0],s[1][0])),T=numeric.norm2(numeric.mul(O[1]-l[1],s[0][1]));if(h>R+T)return l;l=O,_++}return l},verb.eval.rational_curve_closest_point=function(e,r,n,t){function i(t){return verb.eval.rational_curve_derivs(e,r,n,t,2)}function a(e,r,n){var t=numeric.dot(r[1],n),i=numeric.dot(r[2],n),a=numeric.dot(r[1],r[1]),o=i+a;return e-t/o}for(var o=.001,u=Number.MAX_VALUE,s=0,v=verb.eval.rational_curve_adaptive_sample(e,r,n,o,!0),l=0;v.length-1>l;l++){var c=v[l][0],_=v[l+1][0],h=v[l].slice(1),b=v[l+1].slice(1),m=verb.eval.closest_point_on_segment(t,h,b,c,_),d=numeric.norm2(numeric.sub(t,m.pt));u>d&&(u=d,s=m.u)}for(var f,p,g=5,l=0,k=1e-4,y=5e-4,x=r[0],N=verb.last(r),E=numeric.norm2Squared(numeric.sub(n[0],verb.last(n)))<verb.EPSILON,z=s;g>l;){f=i(z),p=numeric.sub(f[0],t);var w=numeric.norm2(p),S=numeric.dot(f[1],p),P=numeric.norm2(f[1])*w,M=S/P,A=k>w,I=y>Math.abs(M);if(A&&I)return z;var L=a(z,f,p);x>L?L=E?N-(L-x):x:L>N&&(L=E?x+(L-N):N);var C=numeric.norm2(numeric.mul(L-z,f[1]));if(k>C)return z;z=L,l++}return z},verb.eval.rational_curve_divide_curve_equally_by_arc_length=function(e,r,n,t){var i=verb.eval.rational_curve_arc_length(e,r,n),a=i/t;return verb.eval.rational_curve_divide_curve_by_arc_length(e,r,n,a)},verb.eval.rational_curve_divide_curve_by_arc_length=function(e,r,n,t){var i=verb.eval.curve_bezier_decompose(e,r,n),a=i.map(function(e){return verb.eval.rational_bezier_curve_arc_length(e.degree,e.knots,e.control_points)}),o=a.reduce(function(e,r){return e+r},0),u=[new CurvePoint(r[0],0)];if(t>o)return u;for(var s,v=t,l=0,c=v,_=0,h=0;i.length>l;){for(_+=a[l];_+verb.EPSILON>c;)s=verb.eval.rational_bezier_curve_param_at_arc_length(i[l].degree,i[l].knots,i[l].control_points,c-h,verb.TOLERANCE,a[l]),u.push(new CurvePoint(s,c)),c+=v;h+=a[l],l++}return u},verb.eval.rational_curve_param_at_arc_length=function(e,r,n,t,i,a,o){if(verb.EPSILON>t)return r[0];for(var u=a||verb.eval.curve_bezier_decompose(e,r,n),s=0,v=(u[s],-verb.EPSILON),o=o||[],s=0;t>v&&u.length>s;s++)if(o[s]=void 0!=o[s]?o[s]:verb.eval.rational_bezier_curve_arc_length(e,r,n),v+=o[s],v+verb.EPSILON>t)return verb.eval.rational_bezier_curve_param_at_arc_length(e,r,n,t,i,o[s]);return-1},verb.eval.rational_bezier_curve_param_at_arc_length=function(e,r,n,t,i,a){if(0>t)return r[0];var o=a||verb.eval.rational_bezier_curve_arc_length(e,r,n);if(t>o)return verb.last(r);for(var u={p:r[0],l:0},s={p:verb.last(r),l:o},v={p:0,l:0},i=i||2*verb.TOLERANCE;s.l-u.l>i;)v.p=(u.p+s.p)/2,v.l=verb.eval.rational_bezier_curve_arc_length(e,r,n,v.p),v.l>t?(s.p=v.p,s.l=v.l):(u.p=v.p,u.l=v.l);return(u.p+s.p)/2},verb.eval.rational_curve_arc_length=function(e,r,n,t){void 0===t&&(t=verb.last(r));for(var i=verb.eval.curve_bezier_decompose(e,r,n),a=0,o=i[a],u=0;o&&t>o.knots[0]+verb.EPSILON;)u+=verb.eval.rational_bezier_curve_arc_length(o.degree,o.knots,o.control_points,Math.min(verb.last(o.knots),t)),o=i[++a];return u},verb.eval.rational_bezier_curve_arc_length=function(e,r,n,t,i){for(var a,o,t=void 0===t?verb.last(r):t,u=(t-r[0])/2,s=0,v=e+(void 0!=i?i:16),l=0;v>l;l++)a=u*verb.eval.Tvalues[v][l]+u+r[0],o=verb.eval.rational_curve_derivs(e,r,n,a,1),s+=verb.eval.Cvalues[v][l]*numeric.norm2(o[1]);
return u*s},verb.eval.Tvalues=[[],[],[-.5773502691896257,.5773502691896257],[0,-.7745966692414834,.7745966692414834],[-.33998104358485626,.33998104358485626,-.8611363115940526,.8611363115940526],[0,-.5384693101056831,.5384693101056831,-.906179845938664,.906179845938664],[.6612093864662645,-.6612093864662645,-.2386191860831969,.2386191860831969,-.932469514203152,.932469514203152],[0,.4058451513773972,-.4058451513773972,-.7415311855993945,.7415311855993945,-.9491079123427585,.9491079123427585],[-.1834346424956498,.1834346424956498,-.525532409916329,.525532409916329,-.7966664774136267,.7966664774136267,-.9602898564975363,.9602898564975363],[0,-.8360311073266358,.8360311073266358,-.9681602395076261,.9681602395076261,-.3242534234038089,.3242534234038089,-.6133714327005904,.6133714327005904],[-.14887433898163122,.14887433898163122,-.4333953941292472,.4333953941292472,-.6794095682990244,.6794095682990244,-.8650633666889845,.8650633666889845,-.9739065285171717,.9739065285171717],[0,-.26954315595234496,.26954315595234496,-.5190961292068118,.5190961292068118,-.7301520055740494,.7301520055740494,-.8870625997680953,.8870625997680953,-.978228658146057,.978228658146057],[-.1252334085114689,.1252334085114689,-.3678314989981802,.3678314989981802,-.5873179542866175,.5873179542866175,-.7699026741943047,.7699026741943047,-.9041172563704749,.9041172563704749,-.9815606342467192,.9815606342467192],[0,-.2304583159551348,.2304583159551348,-.44849275103644687,.44849275103644687,-.6423493394403402,.6423493394403402,-.8015780907333099,.8015780907333099,-.9175983992229779,.9175983992229779,-.9841830547185881,.9841830547185881],[-.10805494870734367,.10805494870734367,-.31911236892788974,.31911236892788974,-.5152486363581541,.5152486363581541,-.6872929048116855,.6872929048116855,-.827201315069765,.827201315069765,-.9284348836635735,.9284348836635735,-.9862838086968123,.9862838086968123],[0,-.20119409399743451,.20119409399743451,-.3941513470775634,.3941513470775634,-.5709721726085388,.5709721726085388,-.7244177313601701,.7244177313601701,-.8482065834104272,.8482065834104272,-.937273392400706,.937273392400706,-.9879925180204854,.9879925180204854],[-.09501250983763744,.09501250983763744,-.2816035507792589,.2816035507792589,-.45801677765722737,.45801677765722737,-.6178762444026438,.6178762444026438,-.755404408355003,.755404408355003,-.8656312023878318,.8656312023878318,-.9445750230732326,.9445750230732326,-.9894009349916499,.9894009349916499],[0,-.17848418149584785,.17848418149584785,-.3512317634538763,.3512317634538763,-.5126905370864769,.5126905370864769,-.6576711592166907,.6576711592166907,-.7815140038968014,.7815140038968014,-.8802391537269859,.8802391537269859,-.9506755217687678,.9506755217687678,-.9905754753144174,.9905754753144174],[-.0847750130417353,.0847750130417353,-.2518862256915055,.2518862256915055,-.41175116146284263,.41175116146284263,-.5597708310739475,.5597708310739475,-.6916870430603532,.6916870430603532,-.8037049589725231,.8037049589725231,-.8926024664975557,.8926024664975557,-.9558239495713977,.9558239495713977,-.9915651684209309,.9915651684209309],[0,-.16035864564022537,.16035864564022537,-.31656409996362983,.31656409996362983,-.46457074137596094,.46457074137596094,-.600545304661681,.600545304661681,-.7209661773352294,.7209661773352294,-.8227146565371428,.8227146565371428,-.9031559036148179,.9031559036148179,-.96020815213483,.96020815213483,-.9924068438435844,.9924068438435844],[-.07652652113349734,.07652652113349734,-.22778585114164507,.22778585114164507,-.37370608871541955,.37370608871541955,-.5108670019508271,.5108670019508271,-.636053680726515,.636053680726515,-.7463319064601508,.7463319064601508,-.8391169718222188,.8391169718222188,-.912234428251326,.912234428251326,-.9639719272779138,.9639719272779138,-.9931285991850949,.9931285991850949],[0,-.1455618541608951,.1455618541608951,-.2880213168024011,.2880213168024011,-.4243421202074388,.4243421202074388,-.5516188358872198,.5516188358872198,-.6671388041974123,.6671388041974123,-.7684399634756779,.7684399634756779,-.8533633645833173,.8533633645833173,-.9200993341504008,.9200993341504008,-.9672268385663063,.9672268385663063,-.9937521706203895,.9937521706203895],[-.06973927331972223,.06973927331972223,-.20786042668822127,.20786042668822127,-.34193582089208424,.34193582089208424,-.469355837986757,.469355837986757,-.5876404035069116,.5876404035069116,-.6944872631866827,.6944872631866827,-.7878168059792081,.7878168059792081,-.8658125777203002,.8658125777203002,-.926956772187174,.926956772187174,-.9700604978354287,.9700604978354287,-.9942945854823992,.9942945854823992],[0,-.1332568242984661,.1332568242984661,-.26413568097034495,.26413568097034495,-.3903010380302908,.3903010380302908,-.5095014778460075,.5095014778460075,-.6196098757636461,.6196098757636461,-.7186613631319502,.7186613631319502,-.8048884016188399,.8048884016188399,-.8767523582704416,.8767523582704416,-.9329710868260161,.9329710868260161,-.9725424712181152,.9725424712181152,-.9947693349975522,.9947693349975522],[-.06405689286260563,.06405689286260563,-.1911188674736163,.1911188674736163,-.3150426796961634,.3150426796961634,-.4337935076260451,.4337935076260451,-.5454214713888396,.5454214713888396,-.6480936519369755,.6480936519369755,-.7401241915785544,.7401241915785544,-.820001985973903,.820001985973903,-.8864155270044011,.8864155270044011,-.9382745520027328,.9382745520027328,-.9747285559713095,.9747285559713095,-.9951872199970213,.9951872199970213]],verb.eval.Cvalues=[[],[],[1,1],[.8888888888888888,.5555555555555556,.5555555555555556],[.6521451548625461,.6521451548625461,.34785484513745385,.34785484513745385],[.5688888888888889,.47862867049936647,.47862867049936647,.23692688505618908,.23692688505618908],[.3607615730481386,.3607615730481386,.46791393457269104,.46791393457269104,.17132449237917036,.17132449237917036],[.4179591836734694,.3818300505051189,.3818300505051189,.27970539148927664,.27970539148927664,.1294849661688697,.1294849661688697],[.362683783378362,.362683783378362,.31370664587788727,.31370664587788727,.22238103445337448,.22238103445337448,.10122853629037626,.10122853629037626],[.3302393550012598,.1806481606948574,.1806481606948574,.08127438836157441,.08127438836157441,.31234707704000286,.31234707704000286,.26061069640293544,.26061069640293544],[.29552422471475287,.29552422471475287,.26926671930999635,.26926671930999635,.21908636251598204,.21908636251598204,.1494513491505806,.1494513491505806,.06667134430868814,.06667134430868814],[.2729250867779006,.26280454451024665,.26280454451024665,.23319376459199048,.23319376459199048,.18629021092773426,.18629021092773426,.1255803694649046,.1255803694649046,.05566856711617366,.05566856711617366],[.24914704581340277,.24914704581340277,.2334925365383548,.2334925365383548,.20316742672306592,.20316742672306592,.16007832854334622,.16007832854334622,.10693932599531843,.10693932599531843,.04717533638651183,.04717533638651183],[.2325515532308739,.22628318026289723,.22628318026289723,.2078160475368885,.2078160475368885,.17814598076194574,.17814598076194574,.13887351021978725,.13887351021978725,.09212149983772845,.09212149983772845,.04048400476531588,.04048400476531588],[.2152638534631578,.2152638534631578,.2051984637212956,.2051984637212956,.18553839747793782,.18553839747793782,.15720316715819355,.15720316715819355,.12151857068790319,.12151857068790319,.08015808715976021,.08015808715976021,.03511946033175186,.03511946033175186],[.2025782419255613,.19843148532711158,.19843148532711158,.1861610000155622,.1861610000155622,.16626920581699392,.16626920581699392,.13957067792615432,.13957067792615432,.10715922046717194,.10715922046717194,.07036604748810812,.07036604748810812,.03075324199611727,.03075324199611727],[.1894506104550685,.1894506104550685,.18260341504492358,.18260341504492358,.16915651939500254,.16915651939500254,.14959598881657674,.14959598881657674,.12462897125553388,.12462897125553388,.09515851168249279,.09515851168249279,.062253523938647894,.062253523938647894,.027152459411754096,.027152459411754096],[.17944647035620653,.17656270536699264,.17656270536699264,.16800410215645004,.16800410215645004,.15404576107681028,.15404576107681028,.13513636846852548,.13513636846852548,.11188384719340397,.11188384719340397,.08503614831717918,.08503614831717918,.0554595293739872,.0554595293739872,.02414830286854793,.02414830286854793],[.1691423829631436,.1691423829631436,.16427648374583273,.16427648374583273,.15468467512626524,.15468467512626524,.14064291467065065,.14064291467065065,.12255520671147846,.12255520671147846,.10094204410628717,.10094204410628717,.07642573025488905,.07642573025488905,.0497145488949698,.0497145488949698,.02161601352648331,.02161601352648331],[.1610544498487837,.15896884339395434,.15896884339395434,.15276604206585967,.15276604206585967,.1426067021736066,.1426067021736066,.12875396253933621,.12875396253933621,.11156664554733399,.11156664554733399,.09149002162245,.09149002162245,.06904454273764123,.06904454273764123,.0448142267656996,.0448142267656996,.019461788229726478,.019461788229726478],[.15275338713072584,.15275338713072584,.14917298647260374,.14917298647260374,.14209610931838204,.14209610931838204,.13168863844917664,.13168863844917664,.11819453196151841,.11819453196151841,.10193011981724044,.10193011981724044,.08327674157670475,.08327674157670475,.06267204833410907,.06267204833410907,.04060142980038694,.04060142980038694,.017614007139152118,.017614007139152118],[.14608113364969041,.14452440398997005,.14452440398997005,.13988739479107315,.13988739479107315,.13226893863333747,.13226893863333747,.12183141605372853,.12183141605372853,.10879729916714838,.10879729916714838,.09344442345603386,.09344442345603386,.0761001136283793,.0761001136283793,.057134425426857205,.057134425426857205,.036953789770852494,.036953789770852494,.016017228257774335,.016017228257774335],[.13925187285563198,.13925187285563198,.13654149834601517,.13654149834601517,.13117350478706238,.13117350478706238,.12325237681051242,.12325237681051242,.11293229608053922,.11293229608053922,.10041414444288096,.10041414444288096,.08594160621706773,.08594160621706773,.06979646842452049,.06979646842452049,.052293335152683286,.052293335152683286,.03377490158481415,.03377490158481415,.0146279952982722,.0146279952982722],[.13365457218610619,.1324620394046966,.1324620394046966,.12890572218808216,.12890572218808216,.12304908430672953,.12304908430672953,.11499664022241136,.11499664022241136,.10489209146454141,.10489209146454141,.09291576606003515,.09291576606003515,.07928141177671895,.07928141177671895,.06423242140852585,.06423242140852585,.04803767173108467,.04803767173108467,.030988005856979445,.030988005856979445,.013411859487141771,.013411859487141771],[.12793819534675216,.12793819534675216,.1258374563468283,.1258374563468283,.12167047292780339,.12167047292780339,.1155056680537256,.1155056680537256,.10744427011596563,.10744427011596563,.09761865210411388,.09761865210411388,.08619016153195327,.08619016153195327,.0733464814110803,.0733464814110803,.05929858491543678,.05929858491543678,.04427743881741981,.04427743881741981,.028531388628933663,.028531388628933663,.0123412297999872,.0123412297999872]],verb.eval.rational_interp_curve=function(e,r,n,t){if(r=r||3,r+1>e.length)throw Error("You need to supply at least degree + 1 points!");for(var i=[0],a=1;e.length>a;a++){var o=numeric.norm2(numeric.sub(e[a],e[a-1])),u=i[i.length-1];i.push(u+o)}for(var s=i[i.length-1],a=0;i.length>a;a++)i[a]=i[a]/s;for(var v=numeric.rep([r+1],0),l=void 0!=n&&void 0!=t,c=l?0:1,_=l?i.length-r+1:i.length-r,a=c,h=_;h>a;a++){for(var b=0,m=0;r>m;m++)b+=i[a+m];v.push(1/r*b)}for(var d=v.concat(numeric.rep([r+1],1)),f=[],p=l?e.length+1:e.length-1,g=l?e.length-(r-1):e.length-(r+1),a=0;i.length>a;a++){var k=i[a],y=verb.eval.knot_span_given_n(p,r,k,d),x=verb.eval.basis_functions_given_knot_span_index(y,k,r,d),N=y-r,E=verb.eval.zeros_1d(N),z=verb.eval.zeros_1d(g-N);f.push(E.concat(x).concat(z))}if(l){var w=f[0].length-2,S=[-1,1].concat(verb.eval.zeros_1d(w)),P=verb.eval.zeros_1d(w).concat([-1,1]);f.splice(1,0,S),f.splice(f.length-1,0,P)}for(var M=e[0].length,A=[],I=(1-d[d.length-r-2])/r,L=d[r+1]/r,a=0;M>a;a++){if(l){var C=[e[0][a]];C.push(L*n[a]);for(var m=1;e.length-1>m;m++)C.push(e[m][a]);C.push(I*t[a]),C.push(verb.last(e)[a])}else var C=e.map(function(e){return e[a]});var O=numeric.solve(f,C);A.push(O)}var R=numeric.transpose(A),T=numeric.rep([R.length],1);return{control_points:R,knots:d,degree:r,weights:T}},verb.eval.get_sweep1_surface=function(e,r,n,t,i,a,o,u){for(var s=verb.eval.homogenize_1d(o,u),v=verb.eval.rational_curve_point(a,i,s,0),l=1/o.length,c=[],_=[],h=0;o.length>h;h++){for(var b=verb.eval.rational_curve_point(a,i,s,h*l),m=numeric.sub(b,v),d=[],f=[],p=0;n.length>p;p++)d.push(numeric.add(m,n[p])),f.push(t[p]*u[h]);c.push(d),_.push(f)}return{knots_u:i,knots_v:e,control_points:c,degree_u:a,degree_v:r,weights:_}},verb.eval.get_ellipse_arc=function(e,r,n,t,i,a,o){a>o&&(o=2*Math.PI+a);var u=o-a,s=0;s=Math.PI/2>=u?1:Math.PI>=u?2:3*Math.PI/2>=u?3:4;var v=u/s,l=Math.cos(v/2),c=numeric.add(e,numeric.mul(t,Math.cos(a),r),numeric.mul(i,Math.sin(a),n)),_=numeric.sub(numeric.mul(Math.cos(a),n),numeric.mul(Math.sin(a),r)),h=verb.eval.zeros_1d(2*s),b=verb.eval.zeros_1d(2*s+3),m=0,d=a,f=verb.eval.zeros_1d(2*s);h[0]=c,f[0]=1;for(var p=1;s>=p;p++){d+=v;var g=numeric.add(e,numeric.mul(t,Math.cos(d),r),numeric.mul(i,Math.sin(d),n));f[m+2]=1,h[m+2]=g;var k=numeric.sub(numeric.mul(Math.cos(d),n),numeric.mul(Math.sin(d),r)),y=verb.eval.intersect_rays(c,numeric.mul(1/numeric.norm2(_),_),g,numeric.mul(1/numeric.norm2(k),k)),x=numeric.add(c,numeric.mul(_,y[0]));f[m+1]=l,h[m+1]=x,m+=2,s>p&&(c=g,_=k)}for(var N=2*s+1,p=0;3>p;p++)b[p]=0,b[p+N]=1;switch(s){case 1:break;case 2:b[3]=b[4]=.5;break;case 3:b[3]=b[4]=1/3,b[5]=b[6]=2/3;break;case 4:b[3]=b[4]=.25,b[5]=b[6]=.5,b[7]=b[8]=.75}return{knots:b,control_points:h,degree:2,weights:f}},verb.eval.get_sphere_surface=function(e,r,n,t){var i=verb.eval.get_arc(e,numeric.mul(r,-1),n,t,0,Math.PI);return verb.eval.get_revolved_surface(e,r,2*Math.PI,i.knots,i.degree,i.control_points,i.weights)},verb.eval.get_polyline_curve=function(e){for(var r=e.length-1,n=1/r,t=[0,0],i=1;r>i;i++)t.push(i*n);t.push(1),t.push(1);for(var a=[],i=0;e.length>i;i++)a.push(1);return{knots:t,control_points:e.slice(0),degree:1,weights:a}},verb.eval.get_4pt_surface=function(e,r,n,t){var i=numeric.mul(.5,numeric.add(e,t)),a=numeric.mul(.5,numeric.add(r,n)),o=numeric.mul(.5,numeric.add(n,t)),u=numeric.mul(.5,numeric.add(e,r)),s=numeric.mul(.5,numeric.add(i,a));return{knots_u:[0,0,0,1,1,1],knots_v:[0,0,0,1,1,1],control_points:[[e,i,t],[u,s,o],[r,a,n]],degree_u:2,degree_v:2,weights:[[1,1,1],[1,1,1],[1,1,1]]}},verb.eval.get_cylinder_surface=function(e,r,n,t,i){var a=crossprod(e,r),o=(2*Math.PI,verb.eval.get_arc(n,r,a,i,0,2*Math.PI));return verb.eval.get_extruded_surface(e,t,o.knots,o.degree,o.control_points,o.weights)},verb.eval.get_cone_surface=function(e,r,n,t,i){var a=2*Math.PI,o=1,u=[numeric.add(n,numeric.mul(t,e)),numeric.add(n,numeric.mul(i,r))],s=[0,0,1,1],v=[1,1];return verb.eval.get_revolved_surface(n,e,a,s,o,u,v)},verb.eval.get_extruded_surface=function(e,r,n,t,i,a){for(var o=verb.eval.zeros_2d(3,i.length),u=verb.eval.zeros_2d(3,i.length),s=numeric.mul(e,r),v=numeric.mul(e,.5*r),l=0;i.length>l;l++)o[2][l]=i[l],o[1][l]=numeric.add(v,i[l]),o[0][l]=numeric.add(s,i[l]),u[0][l]=a[l],u[1][l]=a[l],u[2][l]=a[l];return{knots_u:[0,0,0,1,1,1],knots_v:n,control_points:o,degree_u:2,degree_v:t,weights:u}},verb.eval.get_revolved_surface=function(e,r,n,t,i,a,o){var u,s,v,l;Math.PI/2>=n?(u=1,s=verb.eval.zeros_1d(6+2*(u-1))):Math.PI>=n?(u=2,s=verb.eval.zeros_1d(6+2*(u-1)),s[3]=s[4]=.5):3*Math.PI/2>=n?(u=3,s=verb.eval.zeros_1d(6+2*(u-1)),s[3]=s[4]=1/3,s[5]=s[6]=2/3):(u=4,s=verb.eval.zeros_1d(6+2*(u-1)),s[3]=s[4]=.25,s[5]=s[6]=.5,s[7]=s[8]=.75);for(var c=n/u,_=3+2*(u-1),h=0;3>h;_++,h++)s[h]=0,s[_]=1;for(var b=Math.cos(c/2),m=0,d=verb.eval.zeros_1d(u+1),f=verb.eval.zeros_1d(u+1),v=verb.eval.zeros_2d(2*u+1,a.length),l=verb.eval.zeros_2d(2*u+1,a.length),h=1;u>=h;h++)m+=c,f[h]=Math.cos(m),d[h]=Math.sin(m);for(_=0;a.length>_;_++){var p=verb.eval.closest_point_on_ray(a[_],e,r),g=numeric.sub(a[_],p),k=numeric.norm2(g),y=crossprod(r,g);k>verb.EPSILON&&(g=numeric.mul(1/k,g),y=numeric.mul(1/k,y)),v[0][_]=a[_];var x=a[_];l[0][_]=o[_];for(var N=y,E=0,m=0,h=1;u>=h;h++){var z=0==k?p:numeric.add(p,numeric.mul(k,f[h],g),numeric.mul(k,d[h],y));v[E+2][_]=z,l[E+2][_]=o[_];var w=numeric.sub(numeric.mul(f[h],y),numeric.mul(d[h],g));if(0==k)v[E+1][_]=p;else{var S=verb.eval.intersect_rays(x,numeric.mul(1/numeric.norm2(N),N),z,numeric.mul(1/numeric.norm2(w),w)),P=numeric.add(x,numeric.mul(N,S[0]));v[E+1][_]=P}l[E+1][_]=b*o[_],E+=2,u>h&&(x=z,N=w)}}return{knots_u:s,knots_v:t,control_points:v,degree_u:2,degree_v:i,weights:l}},verb.eval.get_arc=function(e,r,n,t,i,a){return verb.eval.get_ellipse_arc(e,r,n,t,t,i,a)},verb.eval.surface_split=function(e,r,n,t,i,a,o){var u,s,v;0===o?(i=numeric.transpose(i),u=r,s=e):(i=i,u=t,s=n);var l=[];for(v=0;s+1>v;v++)l.push(a);var c,_=[],h=[],b=verb.eval.knot_span(s,a,u);for(v=0;i.length>v;v++){c=verb.eval.curve_knot_refine(s,u,i[v],l);var m=c.control_points.slice(0,b+1),d=c.control_points.slice(b+1);_.push(m),h.push(d)}var f=c.knots.slice(0,b+s+2),p=c.knots.slice(b+1);return 0===o?(_=numeric.transpose(_),h=numeric.transpose(h),[{degree_u:s,knots_u:f,degree_v:n,knots_v:t,control_points:_},{degree_u:s,knots_u:p,degree_v:n,knots_v:t,control_points:h}]):[{degree_u:e,knots_u:r,degree_v:s,knots_v:f,control_points:_},{degree_u:e,knots_u:r,degree_v:s,knots_v:p,control_points:h}]},verb.eval.surface_knot_refine=function(e,r,n,t,i,a,o){var u,s,v,l,c,_=[];0===o?(l=numeric.transpose(i),s=r,v=e):(l=i,s=t,v=n);for(var h=0;l.length>h;h++)u=verb.eval.curve_knot_refine(v,s,l[h],a),_.push(u.control_points);return c=u.knots,0===o?(_=numeric.transpose(_),{knots_u:c,degree_u:v,knots_v:t,degree_v:n,control_points:_}):{knots_u:r,degree_u:e,knots_v:c,degree_v:v,control_points:_}},verb.eval.curve_bezier_decompose=function(e,r,n){for(var t=verb.eval.knot_multiplicities(r),i=e+1,a=verb.eval.curve_knot_refine,o=0;t.length>o;o++)if(i>t[o][1]){var u=numeric.rep([i-t[o][1]],t[o][0]),s=a(e,r,n,u);r=s.knots,n=s.control_points}r.length/i-1;for(var v=2*i,l=[],o=0;n.length>o;o+=i){var c=r.slice(o,o+v),_=n.slice(o,o+i);l.push({degree:e,knots:c,control_points:_})}return l},verb.eval.knot_multiplicities=function(e){for(var r=[[e[0],0]],n=r[0],t=0;e.length>t;t++)Math.abs(e[t]-n[0])>verb.EPSILON&&(n=[e[t],0],r.push(n)),n[1]++;return r},verb.eval.curve_split=function(e,r,n,t){for(var i=[],a=0;e+1>a;a++)i.push(t);var o=verb.eval.curve_knot_refine(e,r,n,i),u=verb.eval.knot_span(e,t,r),s=o.knots.slice(0,u+e+2),v=o.knots.slice(u+1),l=o.control_points.slice(0,u+1),c=o.control_points.slice(u+1);return[{degree:e,knots:s,control_points:l},{degree:e,knots:v,control_points:c}]},verb.eval.curve_knot_refine=function(e,r,n,t){var i=n.length-1,a=i+e+1,o=t.length-1,u=verb.eval.knot_span(e,t[0],r),s=verb.eval.knot_span(e,t[o],r),v=Array(n.length+o+1),l=Array(r.length+o+1),c=0,_=0;for(c=0;u-e>=c;c++)v[c]=n[c];for(c=s-1;i>=c;c++)v[c+o+1]=n[c];for(c=0;u>=c;c++)l[c]=r[c];for(c=s+e;a>=c;c++)l[c+o+1]=r[c];c=s+e-1;var h=s+e+o;for(_=o;_>=0;_--){for(;t[_]<=r[c]&&c>u;)v[h-e-1]=n[c-e-1],l[h]=r[c],h-=1,c-=1;v[h-e-1]=v[h-e];for(var b=1;e>=b;b++){var m=h-e+b,d=l[h+b]-t[_];Math.abs(d)<verb.EPSILON?v[m-1]=v[m]:(d/=l[h+b]-r[c-e+b],v[m-1]=numeric.add(numeric.mul(d,v[m-1]),numeric.mul(1-d,v[m])))}l[h]=t[_],h-=1}return{knots:l,control_points:v}},verb.eval.curve_knot_insert=function(e,r,n,t,i){var a=0,o=n.length,u=verb.eval.knot_span(e,t,r),s=o+i,v=Array(e-a),l=Array(r.length+i),c=Array(s),_=0;for(_=0;u>=_;_++)l[_]=r[_];for(_=1;i>=_;_++)l[u+_]=t;for(_=u+1;r.length>_;_++)l[_+i]=r[_];for(_=0;u-e>=_;_++)c[_]=n[_];for(_=u-a;o>_;_++)c[_+i]=n[_];for(_=0;e-a>=_;_++)v[_]=n[u-e+_];for(var h=0,b=0,m=1;i>=m;m++){for(h=u-e+m,_=0;e-m-a>=_;_++)b=(t-r[h+_])/(r[_+u+1]-r[h+_]),v[_]=numeric.add(numeric.mul(b,v[_+1]),numeric.mul(1-b,v[_]));c[h]=v[0],c[u+i-m-a]=v[e-m-a]}for(_=h+1;u-a>_;_++)c[_]=v[_-h];return{knots:l,control_points:c}},verb.eval.rational_surface_curvature=function(e,r,n,t,i,a,o){var u=verb.eval.rational_surface_derivs(e,r,n,t,i,2,a,o),s=u[0][1],v=u[1][0],l=u[0][2],c=u[2][0],_=u[1][1],h=numeric.cross(s,v),b=numeric.dot(l,h),m=numeric.dot(_,h),d=numeric.dot(c,h),f=[[b,m],[m,d]],p=numeric.eig(f),g=p.lambda.x[0],k=p.lambda.x[1],y=.5*(g+k),x=g*k,N=numeric.add(numeric.mul(p.E.x[0][0],s),numeric.mul(p.E.x[0][1],v)),E=numeric.add(numeric.mul(p.E.x[1][0],s),numeric.mul(p.E.x[1][1],v));return{point:u[0][0],normal:h,mean:y,gaussian:x,shapeOperator:f,k1:g,k2:k,p1:N,p2:E,p1p:p.E.x[0],p2p:p.E.x[1]}},verb.eval.rational_surface_derivs=function(e,r,n,t,i,a,o,u){var s=verb.eval.surface_derivs(e,r,n,t,i,a,o,u),v=verb.eval.separate_homo_derivs_2d(s),l=v[0],c=v[1],_=0,h=0,b=0,m=0,d=[],f=l[0][0].length;for(_=0;a>=_;_++)for(d.push([]),m=0;a-_>=m;m++){var u=l[_][m];for(b=1;m>=b;b++)u=numeric.sub(u,numeric.mul(numeric.mul(binomial.get(m,b),c[0][b]),d[_][m-b]));for(h=1;_>=h;h++){u=numeric.sub(u,numeric.mul(numeric.mul(binomial.get(_,h),c[h][0]),d[_-h][m]));var p=verb.eval.zeros_1d(f);for(b=1;m>=b;b++)p=numeric.add(p,numeric.mul(numeric.mul(binomial.get(m,b),c[h][b]),d[_-h][m-b]));u=numeric.sub(u,numeric.mul(binomial.get(_,h),p))}d[_].push(numeric.mul(1/c[0][0],u))}return d},verb.eval.rational_surface_point=function(e,r,n,t,i,a,o){return verb.eval.dehomogenize(verb.eval.surface_point(e,r,n,t,i,a,o))},verb.eval.rational_curve_derivs=function(e,r,n,t,i){var a=verb.eval.separate_homo_derivs_1d(verb.eval.curve_derivs(e,r,n,t,i)),o=a[0],u=a[1],s=0,v=0,l=[];for(s=0;i>=s;s++){var c=o[s];for(v=1;s>=v;v++)c=numeric.sub(c,numeric.mul(numeric.mul(binomial.get(s,v),u[v]),l[s-v]));l.push(numeric.mul(1/u[0],c))}return l},verb.eval.separate_homo_derivs_1d=function(e){for(var r=e[0].length,n=r-1,t=[],i=[],a=0,o=e.length;o>a;a++)t.push(e[a].slice(0,n)),i.push(e[a][n]);return[t,i]},verb.eval.separate_homo_derivs_2d=function(e){for(var r=[],n=[],t=0,i=e.length;i>t;t++){var a=verb.eval.separate_homo_derivs_1d(e[t]);r.push(a[0]),n.push(a[1])}return[r,n]},verb.eval.rational_curve_point=function(e,r,n,t){return verb.eval.dehomogenize(verb.eval.curve_point(e,r,n,t))},verb.eval.dehomogenize=function(e){for(var r=e.length,n=[],t=e[r-1],i=0;e.length-1>i;i++)n.push(e[i]/t);return n},verb.eval.weight_1d=function(e){var r=e[0].length-1;return e.map(function(e){return e[r]})},verb.eval.weight_2d=function(e){return e.map(verb.eval.weight_1d)},verb.eval.dehomogenize_1d=function(e){return e.map(verb.eval.dehomogenize)},verb.eval.dehomogenize_2d=function(e){return e.map(verb.eval.dehomogenize_1d)},verb.eval.homogenize_1d=function(e,r){for(var n=e.length,t=e[0].length,i=0,a=[],o=0,u=[],s=0;n>s;s++){var v=[];for(u=e[s],o=r[s],i=0;t>i;i++)v.push(u[i]*o);v.push(o),a.push(v)}return a},verb.eval.homogenize_2d=function(e,r){for(var n=e.length,t=(e[0].length,e[0][0].length,[]),i=0;n>i;i++)t.push(verb.eval.homogenize_1d(e[i],r[i]));return t},verb.eval.surface_derivs=function(e,r,n,t,i,a,o,u){var s=r.length-e-2,v=t.length-n-2;return verb.eval.surface_derivs_given_n_m(s,e,r,v,n,t,i,a,o,u)},verb.eval.surface_derivs_given_n_m=function(e,r,n,t,i,a,o,u,s,v){if(verb.eval.are_valid_relations(r,o.length,n.length)===!1||verb.eval.are_valid_relations(i,o[0].length,a.length)===!1)return console.error("Invalid relations between control points, knot vector, and n"),null;var l=o[0][0].length,c=Math.min(u,r),_=Math.min(u,i),h=verb.eval.zeros_3d(c+1,_+1,l),b=verb.eval.knot_span_given_n(e,r,s,n),m=verb.eval.knot_span_given_n(t,i,v,a),d=verb.eval.deriv_basis_functions_given_n_i(b,s,r,e,n),f=verb.eval.deriv_basis_functions_given_n_i(m,v,i,t,a),p=verb.eval.zeros_2d(i+1,l),g=0,k=0,y=0,x=0,N=0;for(g=0;c>=g;g++){for(k=0;i>=k;k++)for(p[k]=verb.eval.zeros_1d(l),y=0;r>=y;y++)p[k]=numeric.add(p[k],numeric.mul(d[g][y],o[b-r+y][m-i+k]));for(N=Math.min(u-g,_),x=0;N>=x;x++)for(h[g][x]=verb.eval.zeros_1d(l),k=0;i>=k;k++)h[g][x]=numeric.add(h[g][x],numeric.mul(f[x][k],p[k]))}return h},verb.eval.surface_point=function(e,r,n,t,i,a,o){var u=r.length-e-2,s=t.length-n-2;return verb.eval.surface_point_given_n_m(u,e,r,s,n,t,i,a,o)},verb.eval.volume_point=function(e,r,n,t,i,a,o,u,s,v){var l=r.length-e-2,c=t.length-n-2,_=a.length-i-2;return verb.eval.volume_point_given_n_m_l(l,e,r,c,n,t,_,i,a,o,u,s,v)},verb.eval.volume_point_given_n_m_l=function(e,r,n,t,i,a,o,u,s,v,l,c,_){if(!verb.eval.are_valid_relations(r,v.length,n.length)||!verb.eval.are_valid_relations(i,v[0].length,a.length)||!verb.eval.are_valid_relations(u,v[0][0].length,s.length))return console.error("Invalid relations between control points and knot vector"),null;for(var h=v[0][0][0].length,b=verb.eval.knot_span_given_n(e,r,l,n),m=verb.eval.knot_span_given_n(t,i,c,a),d=verb.eval.knot_span_given_n(o,u,_,s),f=verb.eval.basis_functions_given_knot_span_index(b,l,r,n),p=verb.eval.basis_functions_given_knot_span_index(m,c,i,a),g=verb.eval.basis_functions_given_knot_span_index(d,_,u,s),k=b-r,y=m,x=d,N=verb.eval.zeros_1d(h),E=verb.eval.zeros_1d(h),z=verb.eval.zeros_1d(h),w=0,S=0,P=0;u>=P;P++){for(z=verb.eval.zeros_1d(h),x=d-u+P,w=0;i>=w;w++){for(E=verb.eval.zeros_1d(h),y=m-i+w,S=0;r>=S;S++)E=numeric.add(E,numeric.mul(f[S],v[k+S][y][x]));z=numeric.add(z,numeric.mul(p[w],E))}N=numeric.add(N,numeric.mul(g[P],z))}return N},verb.eval.surface_point_given_n_m=function(e,r,n,t,i,a,o,u,s){if(verb.eval.are_valid_relations(r,o.length,n.length)===!1||verb.eval.are_valid_relations(i,o[0].length,a.length)===!1)return console.error("Invalid relations between control points, knot vector, and n"),null;var v=o[0][0].length,l=verb.eval.knot_span_given_n(e,r,u,n),c=verb.eval.knot_span_given_n(t,i,s,a),_=verb.eval.basis_functions_given_knot_span_index(l,u,r,n),h=verb.eval.basis_functions_given_knot_span_index(c,s,i,a),b=l-r,m=c,d=verb.eval.zeros_1d(v),f=verb.eval.zeros_1d(v),p=0,g=0;for(p=0;i>=p;p++){for(f=verb.eval.zeros_1d(v),m=c-i+p,g=0;r>=g;g++)f=numeric.add(f,numeric.mul(_[g],o[b+g][m]));d=numeric.add(d,numeric.mul(h[p],f))}return d},verb.eval.curve_derivs=function(e,r,n,t,i){var a=r.length-e-2;return verb.eval.curve_derivs_given_n(a,e,r,n,t,i)},verb.eval.curve_derivs_given_n=function(e,r,n,t,i,a){if(verb.eval.are_valid_relations(r,t.length,n.length)===!1)return console.error("Invalid relations between control points, knot vector, and n"),null;var o=t[0].length,u=Math.min(a,r),s=verb.eval.zeros_2d(u+1,o),v=verb.eval.knot_span_given_n(e,r,i,n),l=verb.eval.deriv_basis_functions_given_n_i(v,i,r,u,n),c=0,_=0;for(c=0;u>=c;c++)for(_=0;r>=_;_++)s[c]=numeric.add(s[c],numeric.mul(l[c][_],t[v-r+_]));return s},verb.eval.are_valid_relations=function(e,r,n){return 0===r+e+1-n?!0:!1},verb.eval.curve_point=function(e,r,n,t){var i=r.length-e-2;return verb.eval.curve_point_given_n(i,e,r,n,t)},verb.eval.curve_point_given_n=function(e,r,n,t,i){if(verb.eval.are_valid_relations(r,t.length,n.length)===!1)return console.error("Invalid relations between control points, knot vector, and n"),null;for(var a=verb.eval.knot_span_given_n(e,r,i,n),o=verb.eval.basis_functions_given_knot_span_index(a,i,r,n),u=verb.eval.zeros_1d(t[0].length),s=0;r>=s;s++)u=numeric.add(u,numeric.mul(o[s],t[a-r+s]));return u},verb.eval.zeros_1d=function(e){return numeric.rep([e],0)},verb.eval.zeros_2d=function(e,r){return r=r>0?r:0,e=e>0?e:0,numeric.rep([e,r],0)},verb.eval.zeros_3d=function(e,r,n){return r=r>0?r:0,e=e>0?e:0,numeric.rep([e,r,n],0)},verb.eval.deriv_basis_functions=function(e,r,n){var t=verb.eval.knot_span(r,e,n),i=n.length-1,a=i-r-1;return verb.eval.deriv_basis_functions_given_n_i(t,e,r,a,n)},verb.eval.deriv_basis_functions_given_n_i=function(e,r,n,t,i){var a=verb.eval.zeros_2d(n+1,n+1),o=Array(n+1),u=Array(n+1),s=0,v=0,l=1,c=0;for(a[0][0]=1,l=1;n>=l;l++){for(o[l]=r-i[e+1-l],u[l]=i[e+l]-r,s=0,c=0;l>c;c++)a[l][c]=u[c+1]+o[l-c],v=a[c][l-1]/a[l][c],a[c][l]=s+u[c+1]*v,s=o[l-c]*v;a[l][l]=s}var _=verb.eval.zeros_2d(t+1,n+1),h=verb.eval.zeros_2d(2,n+1),b=1,m=0,d=1,f=0,p=0,g=0,k=0,y=0;for(l=0;n>=l;l++)_[0][l]=a[l][n];for(c=0;n>=c;c++)for(m=0,d=1,h[0][0]=1,b=1;t>=b;b++){for(f=0,p=c-b,g=n-b,c>=b&&(h[d][0]=h[m][0]/a[g+1][p],f=h[d][0]*a[p][g]),k=p>=-1?1:-p,y=g>=c-1?b-1:n-c,l=k;y>=l;l++)h[d][l]=(h[m][l]-h[m][l-1])/a[g+1][p+l],f+=h[d][l]*a[p+l][g];g>=c&&(h[d][b]=-h[m][b-1]/a[g+1][c],f+=h[d][b]*a[c][g]),_[b][c]=f,l=m,m=d,d=l}for(c=n,b=1;t>=b;b++){for(l=0;n>=l;l++)_[b][l]*=c;c*=n-b}return _},verb.eval.basis_functions=function(e,r,n){var t=verb.eval.knot_span(e,r,n);return verb.eval.basis_functions_given_knot_span_index(t,e,r,n)},verb.eval.basis_functions_given_knot_span_index=function(e,r,n,t){var i=Array(n+1),a=Array(n+1),o=Array(n+1),u=0,s=0;i[0]=1;for(var v=1;n>=v;v++){a[v]=r-t[e+1-v],o[v]=t[e+v]-r,u=0;for(var l=0;v>l;l++)s=i[l]/(o[l+1]+a[v-l]),i[l]=u+o[l+1]*s,u=a[v-l]*s;i[v]=u}return i},verb.eval.knot_span=function(e,r,n){var t=n.length-1,i=t-e-1;return verb.eval.knot_span_given_n(i,e,r,n)},verb.eval.knot_span_given_n=function(e,r,n,t){if(n>=t[e+1])return e;if(t[r]>n)return r;for(var i=r,a=e+1,o=Math.floor((i+a)/2);t[o]>n||n>=t[o+1];)t[o]>n?a=o:i=o,o=Math.floor((i+a)/2);return o};