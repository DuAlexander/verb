/*! verb 2014-12-19 */
function CurvePoint(e,r){this.u=e,this.len=r}function crossprod(e,r){return[e[1]*r[2]-e[2]*r[1],e[2]*r[0]-e[0]*r[2],e[0]*r[1]-e[1]*r[0]]}if("object"!=typeof exports||void 0===exports)importScripts("labor.js"),importScripts("binomial.js"),importScripts("numeric-1.2.6.min.js");else var labor=require("labor");var verb=verb||{};verb.eval=verb.eval||{},verb.eval.nurbs=verb.eval.nurbs||{},verb.eval.mesh=verb.eval.mesh||{},verb.eval.geom=verb.eval.geom||{},verb.geom=verb.geom||{},verb.EPSILON=1e-8,verb.TOLERANCE=.001;var router=new labor.Router(verb.eval.nurbs);numeric.normalized=function(e){return numeric.div(e,numeric.norm2(e))},numeric.cross=function(e,r){return[e[1]*r[2]-e[2]*r[1],e[2]*r[0]-e[0]*r[2],e[0]*r[1]-e[1]*r[0]]},verb.left=function(e){if(0===e.length)return[];var r=Math.ceil(e.length/2);return e.slice(0,r)},verb.right=function(e){if(0===e.length)return[];var r=Math.ceil(e.length/2);return e.slice(r)},verb.rightWithPivot=function(e){if(0===e.length)return[];var r=Math.ceil(e.length/2);return e.slice(r-1)},verb.unique=function(e,r){if(0===e.length)return[];for(var n=[e.pop()],t=0;e.length>t;t++){for(var i=e.pop(),u=!0,s=0;n.length>s;s++)if(r(i,n[t])){u=!1;break}u&&n.push(i)}return n},verb.eval.nurbs.intersect_rational_curve_surface_by_aabb_refine=function(e,r,n,t,i,u,s,o,a,v,l,c){var b=verb.eval.nurbs.intersect_rational_curve_surface_by_aabb(e,r,n,t,i,u,s,o,a,v,l,c);return b.map(function(a){var v=[a.p,a.uv[0],a.uv[1]],l=verb.eval.nurbs.refine_rational_curve_surface_intersection(e,r,n,t,i,u,s,o,v);return a.p=l[0],a.uv[0]=l[1],a.uv[1]=l[2],a.distance=l[3],delete a.face,a})},verb.eval.nurbs.refine_rational_curve_surface_intersection=function(e,r,n,t,i,u,s,o,a){var v=function(a){var v=verb.eval.nurbs.rational_curve_point(u,s,o,a[0]),l=verb.eval.nurbs.rational_surface_point(e,r,n,t,i,a[1],a[2]),c=numeric.sub(v,l);return numeric.dot(c,c)},l=numeric.uncmin(v,a);return l.solution.concat(l.f)},verb.eval.nurbs.intersect_rational_curve_surface_by_aabb=function(e,r,n,t,i,u,s,o,a,v,l,c){var b=verb.eval.nurbs.rational_curve_adaptive_sample(u,s,o,a,!0),m=verb.eval.nurbs.tessellate_rational_surface_naive(e,r,n,t,i,l,c),h=b.map(function(e){return e[0]}),_=b.map(function(e){return e.slice(1)}),g=verb.eval.nurbs.intersect_parametric_polyline_mesh_by_aabb(_,h,m,verb.range(m.faces.length),v);return verb.unique(g,function(e,r){return v>numeric.norm2(numeric.sub(e.point,r.point))&&v>Math.abs(e.p-r.p)&&v>numeric.norm2(numeric.sub(e.uv,r.uv))})},verb.eval.nurbs.intersect_parametric_polyline_mesh_by_aabb=function(e,r,n,t,i){var u=new verb.geom.BoundingBox(e),s=verb.eval.mesh.make_mesh_aabb(n.points,n.faces,t),o=verb.eval.nurbs.intersect_parametric_polyline_mesh_by_aabb;if(!u.intersects(s,i))return[];if(2!==e.length||1!==t.length){if(1===t.length){var a=verb.left(e),v=verb.rightWithPivot(e),l=verb.left(r),c=verb.rightWithPivot(r);return o(a,l,n,t,i).concat(o(v,c,n,t,i))}if(2===e.length){var b=verb.eval.mesh.sort_tris_on_longest_axis(s,n.points,n.faces,t),m=verb.left(b),h=verb.right(b);return o(e,r,n,m,i).concat(o(e,r,n,h,i))}var b=verb.eval.mesh.sort_tris_on_longest_axis(s,n.points,n.faces,t),m=verb.left(b),h=verb.right(b),a=verb.left(e),v=verb.rightWithPivot(e),l=verb.left(r),c=verb.rightWithPivot(r);return o(a,l,n,m,i).concat(o(a,l,n,h,i)).concat(o(v,c,n,m,i)).concat(o(v,c,n,h,i))}var _=verb.eval.geom.intersect_segment_with_tri(e[0],e[1],n.points,n.faces[t[0]]);if(null!=_){var g=_.p*(r[1]-r[0])+r[0],d=n.faces[t][0],f=n.faces[t][1],p=n.faces[t][2],k=n.uvs[d],y=n.uvs[f],x=n.uvs[p],N=numeric.sub(y,k),E=numeric.sub(x,k),z=numeric.add(k,numeric.mul(_.s,N),numeric.mul(_.t,E));return[{point:_.point,p:g,uv:z,face:t[0]}]}return[]},verb.eval.geom.intersect_segment_with_tri=function(e,r,n,t){var i=n[t[0]],u=n[t[1]],s=n[t[2]],o=numeric.sub(u,i),a=numeric.sub(s,i),v=numeric.cross(o,a),l=numeric.sub(r,e),c=numeric.sub(e,i),b=-numeric.dot(v,c),m=numeric.dot(v,l);if(Math.abs(m)<verb.EPSILON)return null;var h=b/m;if(0>h||h>1)return null;var _=numeric.add(e,numeric.mul(h,l)),g=numeric.dot(o,a),d=numeric.dot(o,o),f=numeric.dot(a,a),p=numeric.sub(_,i),k=numeric.dot(p,o),y=numeric.dot(p,a),x=g*g-d*f,N=(g*y-f*k)/x,E=(g*k-d*y)/x;return N>1+verb.EPSILON||E>1+verb.EPSILON||-verb.EPSILON>E||-verb.EPSILON>N||N+E>1+verb.EPSILON?null:{point:_,s:N,t:E,p:h}},verb.eval.geom.intersect_segment_with_plane=function(e,r,n,t){var i=numeric.dot(t,numeric.sub(e,r));if(EPSILON>abs(i))return null;var u=numeric.dot(t,numeric.sub(n,e));return{p:u/i}},verb.eval.geom.intersect_aabb_trees=function(e,r,n,t,i,u){var s=i.bounding_box.intersects(u.bounding_box),o=verb.eval.geom.intersect_aabb_trees;return s?0===i.children.length&&0===u.children.length?[[i.triangle,u.triangle]]:0===i.children.length&&0!=u.children.length?o(e,r,n,t,i,u.children[0]).concat(o(e,r,n,t,i,u.children[1])):0!=i.children.length&&0===u.children.length?o(e,r,n,t,i.children[0],u).concat(o(e,r,n,t,i.children[1],u)):0!=i.children.length&&0!=u.children.length?o(e,r,n,t,i.children[0],u.children[0]).concat(o(e,r,n,t,i.children[0],u.children[1])).concat(o(e,r,n,t,i.children[1],u.children[0])).concat(o(e,r,n,t,i.children[1],u.children[1])):void 0:[]},verb.eval.mesh.make_mesh_aabb_tree=function(e,r,n){var t={bounding_box:verb.eval.mesh.make_mesh_aabb(e,r,n),children:[]};if(1===n.length)return t.triangle=n[0],t;var i=verb.eval.mesh.sort_tris_on_longest_axis(t.bounding_box,e,r,n),u=i.slice(0,Math.floor(i.length/2)),s=i.slice(Math.floor(i.length/2),i.length);return t.children=[verb.eval.mesh.make_mesh_aabb_tree(e,r,u),verb.eval.mesh.make_mesh_aabb_tree(e,r,s)],t},verb.eval.mesh.make_mesh_aabb=function(e,r,n){var t=new verb.geom.BoundingBox;return n.forEach(function(n){t.add(e[r[n][0]]),t.add(e[r[n][1]]),t.add(e[r[n][2]])}),t},verb.eval.mesh.sort_tris_on_longest_axis=function(e,r,n,t){for(var i=e.getLongestAxis(),u=[],s=t.length-1;s>=0;s--){var o=t[s],a=verb.eval.mesh.get_min_coordinate_on_axis(r,n[o],i);u.push([a,o])}u.sort(function(e,r){return e[0]>r[0]});for(var v=[],s=0,l=u.length;l>s;s++)v.push(u[s][1]);return v},verb.eval.mesh.get_min_coordinate_on_axis=function(e,r,n){for(var t=[],i=0;3>i;i++)t.push(e[r[i]][n]);return Math.min.apply(Math,t)},verb.eval.geom.get_tri_centroid=function(e,r){for(var n=[0,0,0],t=0;3>t;t++)for(var i=0;3>i;i++)n[i]+=e[r[t]][i];for(var t=0;3>t;t++)n[t]/=3;return n},verb.eval.geom.get_tri_norm=function(e,r){var n=e[r[0]],t=e[r[1]],i=e[r[2]],u=numeric.sub(t,n),s=numeric.sub(i,n),o=numeric.cross(u,s);return numeric.mul(1/numeric.norm2(o),o)},verb.eval.nurbs.intersect_rational_curves_by_aabb_refine=function(e,r,n,t,i,u,s,o){var a=verb.eval.nurbs.intersect_rational_curves_by_aabb(e,r,n,t,i,u,s,o);return a.map(function(s){return verb.eval.nurbs.refine_rational_curve_intersection(e,r,n,t,i,u,s)})},verb.eval.nurbs.refine_rational_curve_intersection=function(e,r,n,t,i,u,s){var o=function(s){var o=verb.eval.nurbs.rational_curve_point(e,r,n,s[0]),a=verb.eval.nurbs.rational_curve_point(t,i,u,s[1]),v=numeric.sub(o,a);return numeric.dot(v,v)},a=numeric.uncmin(o,s);return a.solution.concat(a.f)},verb.eval.nurbs.intersect_rational_curves_by_aabb=function(e,r,n,t,i,u,s,o){var a=verb.eval.nurbs.rational_curve_adaptive_sample(e,r,n,s,!0),v=verb.eval.nurbs.rational_curve_adaptive_sample(t,i,u,s,!0),l=a.map(function(e){return e[0]}),c=v.map(function(e){return e[0]}),b=a.map(function(e){return e.slice(1)}),m=v.map(function(e){return e.slice(1)});return verb.eval.nurbs.intersect_parametric_polylines_by_aabb(b,m,l,c,o)},verb.eval.nurbs.intersect_parametric_polylines_by_aabb=function(e,r,n,t,i){var u=new verb.geom.BoundingBox(e),s=new verb.geom.BoundingBox(r);if(!u.intersects(s,i))return[];if(2!==e.length||2!==r.length){if(2===e.length){var o=Math.ceil(r.length/2),a=r.slice(0,o),v=r.slice(o-1),l=t.slice(0,o),c=t.slice(o-1);return verb.eval.nurbs.intersect_parametric_polylines_by_aabb(e,a,n,l,i).concat(verb.eval.nurbs.intersect_parametric_polylines_by_aabb(e,v,n,c,i))}if(2===r.length){var b=Math.ceil(e.length/2),m=e.slice(0,b),h=e.slice(b-1),_=n.slice(0,b),g=n.slice(b-1);return verb.eval.nurbs.intersect_parametric_polylines_by_aabb(m,r,_,t,i).concat(verb.eval.nurbs.intersect_parametric_polylines_by_aabb(h,r,g,t,i))}var b=Math.ceil(e.length/2),m=e.slice(0,b),h=e.slice(b-1),_=n.slice(0,b),g=n.slice(b-1),o=Math.ceil(r.length/2),a=r.slice(0,o),v=r.slice(o-1),l=t.slice(0,o),c=t.slice(o-1);return verb.eval.nurbs.intersect_parametric_polylines_by_aabb(m,a,_,l,i).concat(verb.eval.nurbs.intersect_parametric_polylines_by_aabb(m,v,_,c,i)).concat(verb.eval.nurbs.intersect_parametric_polylines_by_aabb(h,a,g,l,i)).concat(verb.eval.nurbs.intersect_parametric_polylines_by_aabb(h,v,g,c,i))}var d=verb.eval.geom.intersect_segments(e[0],e[1],r[0],r[1],i);return null!=d?(d[0][0]=d[0][0]*(n[1]-n[0])+n[0],d[1][0]=d[1][0]*(t[1]-t[0])+t[0],[[d[0][0],d[1][0]]]):[]},verb.eval.geom.intersect_segments=function(e,r,n,t,i){var u=numeric.sub(r,e),s=Math.sqrt(numeric.dot(u,u)),o=numeric.mul(1/s,u),a=numeric.sub(t,n),v=Math.sqrt(numeric.dot(a,a)),l=numeric.mul(1/v,a),c=verb.eval.geom.intersect_rays(e,o,n,l);if(null!=c){var b=Math.min(Math.max(0,c[0]/s),1),m=Math.min(Math.max(0,c[1]/v),1),h=numeric.add(numeric.mul(b,u),e),_=numeric.add(numeric.mul(m,a),n),g=numeric.norm2Squared(numeric.sub(h,_));if(i*i>g)return[[b].concat(h),[m].concat(_)]}return null},verb.eval.geom.closest_point_on_segment=function(e,r,n,t,i){var u=numeric.sub(n,r),s=numeric.norm2(u);if(verb.EPSILON>s)return{u:t,pt:r};var o=r,a=numeric.mul(1/s,u),v=numeric.sub(e,o),l=numeric.dot(v,a);return 0>l?{u:t,pt:r}:l>s?{u:i,pt:n}:{u:t+(i-t)*l/s,pt:numeric.add(o,numeric.mul(l,a))}},verb.eval.geom.closest_point_on_ray=function(e,r,n){var t=numeric.sub(e,r),i=numeric.dot(t,n),u=numeric.add(r,numeric.mul(i,n));return u},verb.eval.geom.dist_to_ray=function(e,r,n){var t=verb.eval.geom.closest_point_on_ray(e,r,n),i=numeric.sub(t,e);return numeric.norm2(i)},verb.eval.geom.intersect_rays=function(e,r,n,t){var i=numeric.dot(r,t),u=numeric.dot(r,n),s=numeric.dot(r,e),o=numeric.dot(t,n),a=numeric.dot(t,e),v=numeric.dot(r,r),l=numeric.dot(t,t),c=v*l-i*i;if(Math.abs(c)<verb.EPSILON)return null;var b=i*(u-s)-v*(o-a),m=b/c,h=(u-s+m*i)/v;return[h,m]},verb.eval.geom.intersect_3_planes=function(e,r,n,t,i,u){var s=numeric.cross(n,i),o=numeric.dot(e,s);if(Math.abs(o)<verb.EPSILON)return null;var a=numeric.add(numeric.mul(r,s),numeric.cross(e,numeric.sub(numeric.mul(u,n),numeric.mul(t,i))));return numeric.mul(1/o,a)},verb.eval.nurbs.refine_rational_surface_intersect_point=function(e,r,n,t,i,u,s,o,a,v,l,c,b){var m,h,_,g,d,f,p,k,y,x,N,E,z,w=1,S=0,P=function(e,r){return verb.eval.nurbs.rational_surface_derivs(n,t,i,u,s,1,e,r)},M=function(e,r){return verb.eval.nurbs.rational_surface_derivs(o,a,v,l,c,1,e,r)};do{if(m=P(e[0],e[1]),h=m[0][0],g=m[1][0],d=m[0][1],_=numeric.normalized(numeric.cross(g,d)),f=numeric.dot(_,h),p=M(r[0],r[1]),k=p[0][0],x=p[1][0],N=p[0][1],y=numeric.normalized(numeric.cross(x,N)),E=numeric.dot(y,k),z=numeric.norm2(numeric.sub(h,k)),b>z)break;var A=numeric.normalized(numeric.cross(_,y)),I=numeric.dot(A,h),L=verb.eval.geom.intersect_3_planes(_,f,y,E,A,I);if(null===L)throw Error("panic!");var C=numeric.sub(L,h),O=numeric.sub(L,k),R=numeric.cross(g,_),T=numeric.cross(d,_),B=numeric.cross(x,y),j=numeric.cross(N,y),U=numeric.dot(T,C)/numeric.dot(T,g),q=numeric.dot(R,C)/numeric.dot(R,d),D=numeric.dot(j,O)/numeric.dot(j,x),V=numeric.dot(B,O)/numeric.dot(B,N);e=numeric.add([U,q],e),r=numeric.add([D,V],r),S++}while(w>S);return{uv1:e,uv2:r,pt:h,d:z}},verb.eval.nurbs.intersect_rational_surface_surface_by_aabb_refine=function(e,r,n,t,i,u,s,o,a,v,l){var c={degree_u:e,degree_v:n,knots_u:r,knots_v:t,homo_control_points:i},b=verb.eval.nurbs.tessellate_rational_surface_adaptive(c.degree_u,c.knots_u,c.degree_v,c.knots_v,c.homo_control_points),m={degree_u:u,degree_v:o,knots_u:s,knots_v:a,homo_control_points:v},h=verb.eval.nurbs.tessellate_rational_surface_adaptive(m.degree_u,m.knots_u,m.degree_v,m.knots_v,m.homo_control_points),_=verb.eval.mesh.intersect_meshes_by_aabb(b.points,b.faces,b.uvs,h.points,h.faces,h.uvs),g=_.map(function(c){return c.map(function(c){return verb.eval.nurbs.refine_rational_surface_intersect_point(c.uvtri1,c.uvtri2,e,r,n,t,i,u,s,o,a,v,l)})});return g.map(function(e){return verb.eval.nurbs.rational_interp_curve(e.map(function(e){return e.pt}),3)})},verb.eval.mesh.intersect_meshes_by_aabb=function(e,r,n,t,i,u){var s=verb.range(r.length),o=verb.range(i.length),a=verb.eval.mesh.make_mesh_aabb_tree(e,r,s),v=verb.eval.mesh.make_mesh_aabb_tree(t,i,o),l=verb.eval.geom.intersect_aabb_trees(e,r,t,i,a,v),c=l.map(function(s){var o=verb.eval.geom.intersect_tris(e,r[s[0]],n,t,i[s[1]],u);return o?(o[0].tri1id=s[0],o[1].tri1id=s[0],o[0].tri2id=s[1],o[1].tri2id=s[1],o):o}).filter(function(e){return e}).filter(function(e){var r=numeric.sub(e[0].pt,e[1].pt);return numeric.dot(r,r)>verb.EPSILON});return c=verb.unique(c,function(e,r){var n=numeric.sub(e[0].uvtri1,r[0].uvtri1),t=numeric.dot(n,n),i=numeric.sub(e[1].uvtri1,r[1].uvtri1),u=numeric.dot(i,i),s=numeric.sub(e[0].uvtri1,r[1].uvtri1),o=numeric.dot(s,s),a=numeric.sub(e[1].uvtri1,r[0].uvtri1),v=numeric.dot(a,a);return verb.EPSILON>t&&verb.EPSILON>u||verb.EPSILON>o&&verb.EPSILON>v}),0===c.length?[]:verb.eval.mesh.make_intersect_polylines(c)},verb.eval.mesh.make_intersect_polylines=function(e){e.forEach(function(e){e[1].opp=e[0],e[0].opp=e[1]});var r=verb.eval.mesh.kdtree_from_segs(e),n=e.flatten();n.forEach(function(n){if(!n.adj){var t=verb.eval.mesh.lookup_adj_segment(n,r,e.length);t&&!t.adj&&(n.adj=t,t.adj=n)}});var t=n.filter(function(e){return!e.adj});0===t.length&&(t=n);var i=[];return t.forEach(function(e){if(!e.v){for(var r=[],n=e;n;){if(n.v)throw Error("Segment end encountered twice!");if(n.v=!0,n.opp.v=!0,r.push(n),n=n.opp.adj,n===e)break}r.length>0&&(r.push(r[r.length-1].opp),i.push(r))}}),i},verb.eval.mesh.pt_dist=function(e,r){return Math.pow(e.x-r.x,2)+Math.pow(e.y-r.y,2)+Math.pow(e.z-r.z,2)},verb.eval.mesh.kdtree_from_segs=function(e){var r=[];return e.forEach(function(e){r.push({x:e[0].pt[0],y:e[0].pt[1],z:e[0].pt[2],ele:e[0]}),r.push({x:e[1].pt[0],y:e[1].pt[1],z:e[1].pt[2],ele:e[1]})}),new KdTree(r,verb.eval.mesh.pt_dist,["x","y","z"])},verb.eval.mesh.lookup_adj_segment=function(e,r,n){var t=n?Math.min(n,3):3,i=r.nearest({x:e.pt[0],y:e.pt[1],z:e.pt[2]},t).filter(function(r){return e!=r[0].ele&&r[1]<verb.EPSILON}).map(function(e){return e[0].ele});return 1===i.length?i[0]:null},verb.eval.geom.intersect_tris=function(e,r,n,t,i,u){var s=verb.eval.geom.get_tri_norm(e,r),o=verb.eval.geom.get_tri_norm(t,i),a=e[r[0]],v=t[i[0]],l=verb.eval.geom.intersect_planes(a,s,v,o);if(!l.intersects)return null;var c=verb.eval.geom.clip_ray_in_coplanar_tri(l.origin,l.dir,e,r,n);if(null===c)return null;var b=verb.eval.geom.clip_ray_in_coplanar_tri(l.origin,l.dir,t,i,u);if(null===b)return null;var m=verb.eval.geom.merge_tri_clip_intervals(c,b,e,r,n,t,i,u);return null===m?null:[{uvtri1:m.uv1tri1,uvtri2:m.uv1tri2,pt:m.pt1},{uvtri1:m.uv2tri1,uvtri2:m.uv2tri2,pt:m.pt2}]},verb.eval.geom.clip_ray_in_coplanar_tri=function(e,r,n,t,i){for(var u=[n[t[0]],n[t[1]],n[t[2]]],i=[i[t[0]],i[t[1]],i[t[2]]],s=[numeric.sub(i[1],i[0]),numeric.sub(i[2],i[1]),numeric.sub(i[0],i[2])],o=[numeric.sub(u[1],u[0]),numeric.sub(u[2],u[1]),numeric.sub(u[0],u[2])],a=o.map(numeric.normalized),v=o.map(numeric.norm2),l=null,c=null,b=0;3>b;b++){var m=u[b],h=a[b],_=verb.eval.geom.intersect_rays(m,h,e,r);if(null!==_){var g=_[0],d=_[1];-verb.EPSILON>g||g>v[b]+verb.EPSILON||((null===l||l.u>d)&&(l={u:d,pt:verb.eval.geom.point_on_ray(e,r,d),uv:numeric.add(i[b],numeric.mul(g/v[b],s[b]))}),(null===c||d>c.u)&&(c={u:d,pt:verb.eval.geom.point_on_ray(e,r,d),uv:numeric.add(i[b],numeric.mul(g/v[b],s[b]))}))}}return null===c||null===l?null:{min:l,max:c}},verb.eval.geom.point_on_ray=function(e,r,n){return numeric.add(e,numeric.mul(n,r))},verb.eval.geom.merge_tri_clip_intervals=function(e,r,n,t,i,u,s,o){if(r.min.u>e.max.u+verb.EPSILON||e.min.u>r.max.u+verb.EPSILON)return null;e.min.tri=0,e.max.tri=0,r.min.tri=1,r.max.tri=1;var a=e.min.u>r.min.u?e.min:r.min,v=e.max.u<r.max.u?e.max:r.max,l={};return 0===a.tri?(l.uv1tri1=a.uv,l.uv1tri2=verb.eval.geom.tri_uv_from_point(u,s,o,a.pt)):(l.uv1tri1=verb.eval.geom.tri_uv_from_point(n,t,i,a.pt),l.uv1tri2=a.uv),l.pt1=a.pt,0===v.tri?(l.uv2tri1=v.uv,l.uv2tri2=verb.eval.geom.tri_uv_from_point(u,s,o,v.pt)):(l.uv2tri1=verb.eval.geom.tri_uv_from_point(n,t,i,v.pt),l.uv2tri2=v.uv),l.pt2=v.pt,l},verb.eval.geom.intersect_planes=function(e,r,n,t){var i=numeric.cross(r,t);if(numeric.dot(i,i)<verb.EPSILON)return{intersects:!1};var u=0,s=Math.abs(i[0]),o=Math.abs(i[1]),a=Math.abs(i[2]);o>s&&(u=1,s=o),a>s&&(u=2,s=a);var v,l,c,b;0===u?(v=r[1],l=r[2],c=t[1],b=t[2]):1===u?(v=r[0],l=r[2],c=t[0],b=t[2]):(v=r[0],l=r[1],c=t[0],b=t[1]);var m,h=-numeric.dot(e,r),_=-numeric.dot(n,t),g=v*b-l*c,d=(l*_-h*b)/g,f=(h*c-v*_)/g;return m=0===u?[0,d,f]:1===u?[d,0,f]:[d,f,0],{intersects:!0,origin:m,dir:numeric.normalized(i)}},verb.eval.geom.tri_uv_from_point=function(e,r,n,t){var i=e[r[0]],u=e[r[1]],s=e[r[2]],o=n[r[0]],a=n[r[1]],v=n[r[2]],l=numeric.sub(i,t),c=numeric.sub(u,t),b=numeric.sub(s,t),m=numeric.norm2(numeric.cross(numeric.sub(i,u),numeric.sub(i,s))),h=numeric.norm2(numeric.cross(c,b))/m,_=numeric.norm2(numeric.cross(b,l))/m,g=numeric.norm2(numeric.cross(l,c))/m;return numeric.add(numeric.mul(h,o),numeric.mul(_,a),numeric.mul(g,v))},verb.eval.nurbs.tessellate_rational_surface_naive=function(e,r,n,t,i,u,s){1>u&&(u=1),1>s&&(s=1);for(var o=r[r.length-1]-r[0],a=t[t.length-1]-t[0],v=o/u,l=a/s,c=[],b=[],m=[],h=0;u+1>h;h++)for(var _=0;s+1>_;_++){var g=h*v,d=_*l;b.push([g,d]);var f=verb.eval.nurbs.rational_surface_derivs(e,r,n,t,i,1,g,d),p=f[0][0];c.push(p);var k=numeric.normalized(numeric.cross(f[0][1],f[1][0]));m.push(k)}for(var y=[],h=0;u>h;h++)for(var _=0;s>_;_++){var x=h*(s+1)+_,N=(h+1)*(s+1)+_,E=N+1,z=x+1,w=[x,N,E],S=[x,E,z];y.push(w),y.push(S)}return{points:c,faces:y,uvs:b,normals:m}},verb.eval.nurbs.rational_curve_regular_sample=function(e,r,n,t,i){return verb.eval.nurbs.rational_curve_regular_sample_range(e,r,n,r[0],verb.last(r),t,i)},verb.eval.nurbs.rational_curve_regular_sample_range=function(e,r,n,t,i,u,s){1>u&&(u=2);for(var o=[],a=(i-t)/(u-1),v=0,l=0;u>l;l++)v=t+a*l,s?o.push([v].concat(verb.eval.nurbs.rational_curve_point(e,r,n,v))):o.push(verb.eval.nurbs.rational_curve_point(e,r,n,v));return o},verb.eval.nurbs.rational_curve_adaptive_sample=function(e,r,n,t,i){return 1===e?i?n.map(function(e,n){return[r[n+1]].concat(verb.eval.nurbs.dehomogenize(e))}):n.map(verb.eval.nurbs.dehomogenize):verb.eval.nurbs.rational_curve_adaptive_sample_range(e,r,n,r[0],r[r.length-1],t,i)},verb.eval.nurbs.rational_curve_adaptive_sample_range=function(e,r,n,t,i,u,s){var o=verb.eval.nurbs.rational_curve_point(e,r,n,t),a=verb.eval.nurbs.rational_curve_point(e,r,n,i),v=.5+.2*Math.random(),l=t+(i-t)*v,c=verb.eval.nurbs.rational_curve_point(e,r,n,l),b=numeric.sub(o,a),m=numeric.sub(o,c);if(u>numeric.dot(b,b)&&numeric.dot(m,m)>u||!verb.eval.nurbs.three_points_are_flat(o,c,a,u)){var h=t+.5*(i-t),_=verb.eval.nurbs.rational_curve_adaptive_sample_range(e,r,n,t,h,u,s),g=verb.eval.nurbs.rational_curve_adaptive_sample_range(e,r,n,h,i,u,s);return _.slice(0,-1).concat(g)}return s?[[t].concat(o),[i].concat(a)]:[o,a]},verb.eval.nurbs.three_points_are_flat=function(e,r,n,t){var i=numeric.sub(r,e),u=numeric.sub(n,e),s=crossprod(i,u),o=numeric.dot(s,s);return t>o},verb.eval.nurbs.divide_rational_surface_adaptive=function(e,r,n,t,i,u){var s,o,a,v,l={degree_u:e,knots_u:r,degree_v:n,knots_v:t,homo_control_points:i};u=u||{},u.minDivsU=u.minDivsU||1,u.minDivsV=u.minDivsV||1,u.refine=void 0!=u.refine?u.refine:!0;var c=u.minDivsU=Math.max(u.minDivsU,3*(i.length-1)),b=u.minDivsV=Math.max(u.minDivsV,3*(i.length-1)),m=verb.last(r),h=r[0],_=verb.last(t),g=t[0],d=(m-h)/c,f=(_-g)/b,p=[],k=[];for(s=0,a=b+1;a>s;s++){var y=[];for(o=0,v=c+1;v>o;o++){var x=h+d*o,N=g+f*s,E=verb.eval.nurbs.rational_surface_derivs(e,r,n,t,i,1,x,N),z=numeric.normalized(numeric.cross(E[0][1],E[1][0]));y.push(new verb.geom.SurfacePoint(E[0][0],z,[x,N],null,verb.isZero(z)))}k.push(y)}for(s=0;b>s;s++)for(o=0;c>o;o++){var w=[k[b-s-1][o],k[b-s-1][o+1],k[b-s][o+1],k[b-s][o]];p.push(new verb.eval.nurbs.AdaptiveRefinementNode(l,w))}if(!u.refine)return p;for(s=0;b>s;s++)for(o=0;c>o;o++){var S=s*c+o,P=verb.north(S,s,o,c,b,p),M=verb.east(S,s,o,c,b,p),A=verb.south(S,s,o,c,b,p),I=verb.west(S,s,o,c,b,p);p[S].neighbors=[A,M,P,I],p[S].divide(u)}return p},verb.north=function(e,r,n,t,i,u){return 0===r?null:u[e-t]},verb.south=function(e,r,n,t,i,u){return r===i-1?null:u[e+t]},verb.east=function(e,r,n,t,i,u){return n===t-1?null:u[e+1]},verb.west=function(e,r,n,t,i,u){return 0===n?null:u[e-1]},verb.eval.nurbs.triangulate_adaptive_refinement_node_tree=function(e){var r=verb.geom.TriMesh.empty();return e.forEach(function(e){e.triangulate(r)}),r},verb.eval.nurbs.tessellate_rational_surface_adaptive=function(e,r,n,t,i,u){var s=verb.eval.nurbs.divide_rational_surface_adaptive(e,r,n,t,i,u);return verb.eval.nurbs.triangulate_adaptive_refinement_node_tree(s)},verb.eval.nurbs.dist_to_seg=function(e,r,n){var t=numeric.sub(n,e),i=numeric.norm2(t),u=numeric.sub(r,e);if(verb.TOLERANCE>i)return numeric.norm2(u);var s=numeric.mul(1/i,t),o=numeric.dot(u,s),a=numeric.add(e,numeric.mul(o,s));return numeric.norm2(numeric.sub(a,r))},verb.geom.SurfacePoint=function(e,r,n,t,i){this.uv=n,this.point=e,this.normal=r,this.id=t,this.degen=i},verb.geom.SurfacePoint.fromUv=function(e,r){return new verb.geom.SurfacePoint(null,null,[e,r],null,null)},verb.geom.TriMesh=function(e,r,n,t){this.faces=e,this.points=r,this.uvs=n,this.normals=t},verb.geom.TriMesh.empty=function(){return new verb.geom.TriMesh([],[],[],[])},verb.eval.nurbs.AdaptiveRefinementNode=function(e,r,n,t){if(this.srf=e,this.parentNode=n,this.neighbors=t||[null,null,null,null],!r){var i=e?e.knots_u[0]:null,u=e?verb.last(e.knots_u):null,s=e?e.knots_v[0]:null,o=e?verb.last(e.knots_v):null;r=[verb.geom.SurfacePoint.fromUv(i,s),verb.geom.SurfacePoint.fromUv(u,s),verb.geom.SurfacePoint.fromUv(u,o),verb.geom.SurfacePoint.fromUv(i,o)]}this.corners=r},verb.eval.nurbs.AdaptiveRefinementNode.prototype.isLeaf=function(){return void 0===this.children},verb.eval.nurbs.AdaptiveRefinementNode.prototype.center=function(){return this.centerPoint||this.evalSrf(this.u05,this.v05)},verb.eval.nurbs.AdaptiveRefinementNode.prototype.evalCorners=function(){this.u05=this.u05||(this.corners[0].uv[0]+this.corners[2].uv[0])/2,this.v05=this.v05||(this.corners[0].uv[1]+this.corners[2].uv[1])/2;for(var e=0;4>e;e++)if(!this.corners[e].point){var r=this.corners[e];this.evalSrf(r.uv[0],r.uv[1],r)}},verb.eval.nurbs.AdaptiveRefinementNode.prototype.evalSrf=function(e,r,n){var t=verb.eval.nurbs.rational_surface_derivs(this.srf.degree_u,this.srf.knots_u,this.srf.degree_v,this.srf.knots_v,this.srf.homo_control_points,1,e,r),i=t[0][0],u=numeric.cross(t[0][1],t[1][0]),s=verb.isZero(u);return s||(u=numeric.normalized(u)),n?(n.degen=s,n.point=i,n.normal=u,n):new verb.geom.SurfacePoint(i,u,[e,r],null,s)},verb.eval.nurbs.AdaptiveRefinementNode.prototype.getEdgeCorners=function(e){if(this.isLeaf())return[this.corners[e]];if(this.horizontal)switch(e){case 0:return this.children[0].getEdgeCorners(0);case 1:return this.children[0].getEdgeCorners(1).concat(this.children[1].getEdgeCorners(1));case 2:return this.children[1].getEdgeCorners(2);case 3:return this.children[1].getEdgeCorners(3).concat(this.children[0].getEdgeCorners(3))}switch(e){case 0:return this.children[0].getEdgeCorners(0).concat(this.children[1].getEdgeCorners(0));case 1:return this.children[1].getEdgeCorners(1);case 2:return this.children[1].getEdgeCorners(2).concat(this.children[0].getEdgeCorners(2));case 3:return this.children[0].getEdgeCorners(3)}},verb.eval.nurbs.AdaptiveRefinementNode.prototype.getAllCorners=function(e){var r=[this.corners[e]];if(!this.neighbors[e])return r;var n=this.neighbors[e].getEdgeCorners((e+2)%4),t=e%2,i=verb.EPSILON,u=this,s=[function(e){return e.uv[0]>u.corners[0].uv[0]+i&&e.uv[0]<u.corners[2].uv[0]-i},function(e){return e.uv[1]>u.corners[0].uv[1]+i&&e.uv[1]<u.corners[2].uv[1]-i}];return r.concat(n.filter(s[t]).reverse())},verb.eval.nurbs.AdaptiveRefinementNode.prototype.midpoint=function(e){if(this.midPoints||(this.midpoints=[null,null,null,null]),this.midpoints[e])return this.midpoints[e];switch(e){case 0:this.midpoints[0]=this.evalSrf(this.u05,this.corners[0].uv[1]);break;case 1:this.midpoints[1]=this.evalSrf(this.corners[1].uv[0],this.v05);break;case 2:this.midpoints[2]=this.evalSrf(this.u05,this.corners[2].uv[1]);break;case 3:this.midpoints[3]=this.evalSrf(this.corners[0].uv[0],this.v05)}return this.midpoints[e]},verb.eval.nurbs.AdaptiveRefinementNode.prototype.hasBadNormals=function(){return this.corners[0].degen||this.corners[1].degen||this.corners[2].degen||this.corners[3].degen},verb.eval.nurbs.AdaptiveRefinementNode.prototype.fixNormals=function(){for(var e=0,r=this.corners.length;r>e;e++)if(this.corners[e],this.corners[e].degen){var n=this.corners[(e+1)%r],t=this.corners[(e+3)%r];this.corners[e].normal=n.degen?t.normal:n.normal}},verb.eval.nurbs.AdaptiveRefinementNode.prototype.shouldDivide=function(e,r){if(e.minDepth>r)return!0;if(r>=e.maxDepth)return!1;if(this.hasBadNormals())return this.fixNormals(),!1;if(this.splitVert=numeric.norm2Squared(numeric.sub(this.corners[0].normal,this.corners[1].normal))>e.normTol||numeric.norm2Squared(numeric.sub(this.corners[2].normal,this.corners[3].normal))>e.normTol,this.splitHoriz=numeric.norm2Squared(numeric.sub(this.corners[1].normal,this.corners[2].normal))>e.normTol||numeric.norm2Squared(numeric.sub(this.corners[3].normal,this.corners[0].normal))>e.normTol,this.splitVert||this.splitHoriz)return!0;var n=this.center();return numeric.norm2Squared(numeric.sub(n.normal,this.corners[0].normal))>e.normTol||numeric.norm2Squared(numeric.sub(n.normal,this.corners[1].normal))>e.normTol||numeric.norm2Squared(numeric.sub(n.normal,this.corners[2].normal))>e.normTol||numeric.norm2Squared(numeric.sub(n.normal,this.corners[3].normal))>e.normTol},verb.eval.nurbs.AdaptiveRefinementNode.prototype.divide=function(e){e=e||{},e.normTol=e.normTol||.085,e.minDepth=void 0!=e.minDepth?e.minDepth:0,e.maxDepth=void 0!=e.maxDepth?e.maxDepth:10,this._divide(e,0,!0)},verb.eval.nurbs.AdaptiveRefinementNode.prototype._divide=function(e,r,n){if(this.evalCorners(),this.shouldDivide(e,r)){if(r++,this.splitVert&&!this.splitHoriz?n=!1:!this.splitVert&&this.splitHoriz&&(n=!0),this.horizontal=n,this.horizontal){var t=[this.corners[0],this.corners[1],this.midpoint(1),this.midpoint(3)],i=[this.midpoint(3),this.midpoint(1),this.corners[2],this.corners[3]];this.children=[new verb.eval.nurbs.AdaptiveRefinementNode(this.srf,t,this),new verb.eval.nurbs.AdaptiveRefinementNode(this.srf,i,this)],this.children[0].neighbors=[this.neighbors[0],this.neighbors[1],this.children[1],this.neighbors[3]],this.children[1].neighbors=[this.children[0],this.neighbors[1],this.neighbors[2],this.neighbors[3]]}else{var u=[this.corners[0],this.midpoint(0),this.midpoint(2),this.corners[3]],s=[this.midpoint(0),this.corners[1],this.corners[2],this.midpoint(2)];this.children=[new verb.eval.nurbs.AdaptiveRefinementNode(this.srf,u,this),new verb.eval.nurbs.AdaptiveRefinementNode(this.srf,s,this)],this.children[0].neighbors=[this.neighbors[0],this.children[1],this.neighbors[2],this.neighbors[3]],this.children[1].neighbors=[this.neighbors[0],this.neighbors[1],this.neighbors[2],this.children[0]]}this.children.forEach(function(t){t._divide(e,r,!n)})}},verb.eval.nurbs.AdaptiveRefinementNode.prototype.triangulate=function(e){return e=e||verb.geom.TriMesh.empty(),this.isLeaf()?this.triangulateLeaf(e):(this.children.forEach(function(r){r&&r.triangulate(e)}),e)},verb.eval.nurbs.AdaptiveRefinementNode.prototype.triangulateLeaf=function(e){var r,n,t,i,u=e.points.length,s=[],o=[],a=0;for(a=0;4>a;a++){var v=this.getAllCorners(a);for(2===v.length&&(i=a+1),t=0;v.length>t;t++)s.push(v[t])}for(a=0,n=s.length;n>a;a++)r=s[a],void 0==r.id?(e.uvs.push(r.uv),e.points.push(r.point),e.normals.push(r.normal),r.id=u,o.push(u),u++):o.push(r.id);if(4===s.length)return e.faces.push([o[0],o[3],o[1]]),e.faces.push([o[3],o[2],o[1]]),e;if(5===s.length){var l=o.length;return e.faces.push([o[i],o[(i+1)%l],o[(i+2)%l]]),e.faces.push([o[(i+4)%l],o[(i+3)%l],o[i]]),e.faces.push([o[i],o[(i+2)%l],o[(i+3)%l]]),e}var c=this.center();e.uvs.push(c.uv),e.points.push(c.point),e.normals.push(c.normal);var b=e.points.length-1;for(a=0,t=s.length-1;s.length>a;t=a++)e.faces.push([b,o[t],o[a]]);return e},verb.eval.nurbs.rational_surface_closest_point=function(e,r,n,t,i,u){function s(u){var s=verb.eval.nurbs.rational_surface_derivs(e,r,n,t,i,2,u[0],u[1]);return console.log(s),s}function o(e,r,n){var t=r[1][0],i=r[0][1],u=r[2][0],s=r[0][2],o=r[1][1],a=r[1][1],v=numeric.dot(t,n),l=numeric.dot(i,n),c=[-v,-l],b=numeric.dot(t,t)+numeric.dot(u,n),m=numeric.dot(t,i)+numeric.dot(o,n),h=numeric.dot(t,i)+numeric.dot(a,n),_=numeric.dot(i,i)+numeric.dot(s,n),g=[[b,m],[h,_]],d=numeric.solve(g,c);return numeric.add(d,e)}var a,v,l,c=9,b=0,m=1e-4,h=5e-4,_=r[0],g=verb.last(r),d=t[0],f=verb.last(t),p=i[0].reduce(function(e,r,n){return e&&numeric.norm2Squared(numeric.sub(r,verb.last(i)[n]))<verb.EPSILON}),k=numeric.transpose(i),y=k[0].reduce(function(e,r,n){return e&&numeric.norm2Squared(numeric.sub(r,verb.last(k)[n]))<verb.EPSILON});console.log(p,y);var x=verb.eval.nurbs.tessellate_rational_surface_adaptive(e,r,n,t,i,{normTol:.05}),N=Number.MAX_VALUE;for(x.points.forEach(function(e,r){var n=numeric.norm2Squared(numeric.sub(u,e));N>n&&(N=n,l=x.uvs[r])}),console.log(N);c>b;){a=s(l),v=numeric.sub(a[0][0],u),console.log("dist",numeric.norm2Squared(v)),console.log("uv",l);var E=numeric.norm2(v),z=numeric.norm2(numeric.dot(a[1][0],v)),w=numeric.norm2(a[1][0])*I,S=numeric.norm2(numeric.dot(a[0][1],v)),P=numeric.norm2(a[0][1])*I,M=z/w,A=S/P,I=m>E,L=h>M,C=h>A;if(I&&L&&C)return l;var O=o(l,a,v);console.log("ct prop",O),_>O[0]?O=p?[g-(O[0]-_),O[1]]:[_+verb.EPSILON,O[1]]:O[0]>g&&(O=p?[_+(O[0]-g),O[1]]:[g-verb.EPSILON,O[1]]),d>O[1]?O=y?[O[0],f-(O[1]-d)]:[O[0],d+verb.EPSILON]:O[1]>f&&(O=y?[O[0],d+(O[0]-f)]:[O[0],f-verb.EPSILON]);var R=numeric.norm2(numeric.mul(O[0]-l[0],a[1][0])),T=numeric.norm2(numeric.mul(O[1]-l[1],a[0][1]));if(m>R+T)return l;l=O,b++}return l},verb.eval.nurbs.rational_curve_closest_point=function(e,r,n,t){function i(t){return verb.eval.nurbs.rational_curve_derivs(e,r,n,t,2)}function u(e,r,n){var t=numeric.dot(r[1],n),i=numeric.dot(r[2],n),u=numeric.dot(r[1],r[1]),s=i+u;return e-t/s}for(var s=.001,o=Number.MAX_VALUE,a=0,v=verb.eval.nurbs.rational_curve_adaptive_sample(e,r,n,s,!0),l=0;v.length-1>l;l++){var c=v[l][0],b=v[l+1][0],m=v[l].slice(1),h=v[l+1].slice(1),_=verb.eval.geom.closest_point_on_segment(t,m,h,c,b),g=numeric.norm2(numeric.sub(t,_.pt));o>g&&(o=g,a=_.u)}for(var d,f,p=5,l=0,k=1e-4,y=5e-4,x=r[0],N=verb.last(r),E=numeric.norm2Squared(numeric.sub(n[0],verb.last(n)))<verb.EPSILON,z=a;p>l;){d=i(z),f=numeric.sub(d[0],t);var w=numeric.norm2(f),S=numeric.dot(d[1],f),P=numeric.norm2(d[1])*w,M=S/P,A=k>w,I=y>Math.abs(M);if(A&&I)return z;var L=u(z,d,f);x>L?L=E?N-(L-x):x:L>N&&(L=E?x+(L-N):N);var C=numeric.norm2(numeric.mul(L-z,d[1]));if(k>C)return z;z=L,l++}return z},verb.eval.nurbs.rational_curve_divide_curve_equally_by_arc_length=function(e,r,n,t){var i=verb.eval.nurbs.rational_curve_arc_length(e,r,n),u=i/t;return verb.eval.nurbs.rational_curve_divide_curve_by_arc_length(e,r,n,u)},verb.eval.nurbs.rational_curve_divide_curve_by_arc_length=function(e,r,n,t){var i=verb.eval.nurbs.curve_bezier_decompose(e,r,n),u=i.map(function(e){return verb.eval.nurbs.rational_bezier_curve_arc_length(e.degree,e.knots,e.control_points)}),s=u.reduce(function(e,r){return e+r},0),o=[new CurvePoint(r[0],0)];if(t>s)return o;for(var a,v=t,l=0,c=v,b=0,m=0;i.length>l;){for(b+=u[l];b+verb.EPSILON>c;)a=verb.eval.nurbs.rational_bezier_curve_param_at_arc_length(i[l].degree,i[l].knots,i[l].control_points,c-m,verb.TOLERANCE,u[l]),o.push(new CurvePoint(a,c)),c+=v;
m+=u[l],l++}return o},verb.eval.nurbs.rational_curve_param_at_arc_length=function(e,r,n,t,i,u,s){if(verb.EPSILON>t)return r[0];for(var o=u||verb.eval.nurbs.curve_bezier_decompose(e,r,n),a=0,v=(o[a],-verb.EPSILON),s=s||[],a=0;t>v&&o.length>a;a++)if(s[a]=void 0!=s[a]?s[a]:verb.eval.nurbs.rational_bezier_curve_arc_length(e,r,n),v+=s[a],v+verb.EPSILON>t)return verb.eval.nurbs.rational_bezier_curve_param_at_arc_length(e,r,n,t,i,s[a]);return-1},verb.eval.nurbs.rational_bezier_curve_param_at_arc_length=function(e,r,n,t,i,u){if(0>t)return r[0];var s=u||verb.eval.nurbs.rational_bezier_curve_arc_length(e,r,n);if(t>s)return verb.last(r);for(var o={p:r[0],l:0},a={p:verb.last(r),l:s},v={p:0,l:0},i=i||2*verb.TOLERANCE;a.l-o.l>i;)v.p=(o.p+a.p)/2,v.l=verb.eval.nurbs.rational_bezier_curve_arc_length(e,r,n,v.p),v.l>t?(a.p=v.p,a.l=v.l):(o.p=v.p,o.l=v.l);return(o.p+a.p)/2},verb.eval.nurbs.rational_curve_arc_length=function(e,r,n,t){void 0===t&&(t=verb.last(r));for(var i=verb.eval.nurbs.curve_bezier_decompose(e,r,n),u=0,s=i[u],o=0;s&&t>s.knots[0]+verb.EPSILON;)o+=verb.eval.nurbs.rational_bezier_curve_arc_length(s.degree,s.knots,s.control_points,Math.min(verb.last(s.knots),t)),s=i[++u];return o},verb.eval.nurbs.rational_bezier_curve_arc_length=function(e,r,n,t,i){for(var u,s,t=void 0===t?verb.last(r):t,o=(t-r[0])/2,a=0,v=e+(void 0!=i?i:16),l=0;v>l;l++)u=o*verb.eval.nurbs.Tvalues[v][l]+o+r[0],s=verb.eval.nurbs.rational_curve_derivs(e,r,n,u,1),a+=verb.eval.nurbs.Cvalues[v][l]*numeric.norm2(s[1]);return o*a},verb.eval.nurbs.Tvalues=[[],[],[-.5773502691896257,.5773502691896257],[0,-.7745966692414834,.7745966692414834],[-.33998104358485626,.33998104358485626,-.8611363115940526,.8611363115940526],[0,-.5384693101056831,.5384693101056831,-.906179845938664,.906179845938664],[.6612093864662645,-.6612093864662645,-.2386191860831969,.2386191860831969,-.932469514203152,.932469514203152],[0,.4058451513773972,-.4058451513773972,-.7415311855993945,.7415311855993945,-.9491079123427585,.9491079123427585],[-.1834346424956498,.1834346424956498,-.525532409916329,.525532409916329,-.7966664774136267,.7966664774136267,-.9602898564975363,.9602898564975363],[0,-.8360311073266358,.8360311073266358,-.9681602395076261,.9681602395076261,-.3242534234038089,.3242534234038089,-.6133714327005904,.6133714327005904],[-.14887433898163122,.14887433898163122,-.4333953941292472,.4333953941292472,-.6794095682990244,.6794095682990244,-.8650633666889845,.8650633666889845,-.9739065285171717,.9739065285171717],[0,-.26954315595234496,.26954315595234496,-.5190961292068118,.5190961292068118,-.7301520055740494,.7301520055740494,-.8870625997680953,.8870625997680953,-.978228658146057,.978228658146057],[-.1252334085114689,.1252334085114689,-.3678314989981802,.3678314989981802,-.5873179542866175,.5873179542866175,-.7699026741943047,.7699026741943047,-.9041172563704749,.9041172563704749,-.9815606342467192,.9815606342467192],[0,-.2304583159551348,.2304583159551348,-.44849275103644687,.44849275103644687,-.6423493394403402,.6423493394403402,-.8015780907333099,.8015780907333099,-.9175983992229779,.9175983992229779,-.9841830547185881,.9841830547185881],[-.10805494870734367,.10805494870734367,-.31911236892788974,.31911236892788974,-.5152486363581541,.5152486363581541,-.6872929048116855,.6872929048116855,-.827201315069765,.827201315069765,-.9284348836635735,.9284348836635735,-.9862838086968123,.9862838086968123],[0,-.20119409399743451,.20119409399743451,-.3941513470775634,.3941513470775634,-.5709721726085388,.5709721726085388,-.7244177313601701,.7244177313601701,-.8482065834104272,.8482065834104272,-.937273392400706,.937273392400706,-.9879925180204854,.9879925180204854],[-.09501250983763744,.09501250983763744,-.2816035507792589,.2816035507792589,-.45801677765722737,.45801677765722737,-.6178762444026438,.6178762444026438,-.755404408355003,.755404408355003,-.8656312023878318,.8656312023878318,-.9445750230732326,.9445750230732326,-.9894009349916499,.9894009349916499],[0,-.17848418149584785,.17848418149584785,-.3512317634538763,.3512317634538763,-.5126905370864769,.5126905370864769,-.6576711592166907,.6576711592166907,-.7815140038968014,.7815140038968014,-.8802391537269859,.8802391537269859,-.9506755217687678,.9506755217687678,-.9905754753144174,.9905754753144174],[-.0847750130417353,.0847750130417353,-.2518862256915055,.2518862256915055,-.41175116146284263,.41175116146284263,-.5597708310739475,.5597708310739475,-.6916870430603532,.6916870430603532,-.8037049589725231,.8037049589725231,-.8926024664975557,.8926024664975557,-.9558239495713977,.9558239495713977,-.9915651684209309,.9915651684209309],[0,-.16035864564022537,.16035864564022537,-.31656409996362983,.31656409996362983,-.46457074137596094,.46457074137596094,-.600545304661681,.600545304661681,-.7209661773352294,.7209661773352294,-.8227146565371428,.8227146565371428,-.9031559036148179,.9031559036148179,-.96020815213483,.96020815213483,-.9924068438435844,.9924068438435844],[-.07652652113349734,.07652652113349734,-.22778585114164507,.22778585114164507,-.37370608871541955,.37370608871541955,-.5108670019508271,.5108670019508271,-.636053680726515,.636053680726515,-.7463319064601508,.7463319064601508,-.8391169718222188,.8391169718222188,-.912234428251326,.912234428251326,-.9639719272779138,.9639719272779138,-.9931285991850949,.9931285991850949],[0,-.1455618541608951,.1455618541608951,-.2880213168024011,.2880213168024011,-.4243421202074388,.4243421202074388,-.5516188358872198,.5516188358872198,-.6671388041974123,.6671388041974123,-.7684399634756779,.7684399634756779,-.8533633645833173,.8533633645833173,-.9200993341504008,.9200993341504008,-.9672268385663063,.9672268385663063,-.9937521706203895,.9937521706203895],[-.06973927331972223,.06973927331972223,-.20786042668822127,.20786042668822127,-.34193582089208424,.34193582089208424,-.469355837986757,.469355837986757,-.5876404035069116,.5876404035069116,-.6944872631866827,.6944872631866827,-.7878168059792081,.7878168059792081,-.8658125777203002,.8658125777203002,-.926956772187174,.926956772187174,-.9700604978354287,.9700604978354287,-.9942945854823992,.9942945854823992],[0,-.1332568242984661,.1332568242984661,-.26413568097034495,.26413568097034495,-.3903010380302908,.3903010380302908,-.5095014778460075,.5095014778460075,-.6196098757636461,.6196098757636461,-.7186613631319502,.7186613631319502,-.8048884016188399,.8048884016188399,-.8767523582704416,.8767523582704416,-.9329710868260161,.9329710868260161,-.9725424712181152,.9725424712181152,-.9947693349975522,.9947693349975522],[-.06405689286260563,.06405689286260563,-.1911188674736163,.1911188674736163,-.3150426796961634,.3150426796961634,-.4337935076260451,.4337935076260451,-.5454214713888396,.5454214713888396,-.6480936519369755,.6480936519369755,-.7401241915785544,.7401241915785544,-.820001985973903,.820001985973903,-.8864155270044011,.8864155270044011,-.9382745520027328,.9382745520027328,-.9747285559713095,.9747285559713095,-.9951872199970213,.9951872199970213]],verb.eval.nurbs.Cvalues=[[],[],[1,1],[.8888888888888888,.5555555555555556,.5555555555555556],[.6521451548625461,.6521451548625461,.34785484513745385,.34785484513745385],[.5688888888888889,.47862867049936647,.47862867049936647,.23692688505618908,.23692688505618908],[.3607615730481386,.3607615730481386,.46791393457269104,.46791393457269104,.17132449237917036,.17132449237917036],[.4179591836734694,.3818300505051189,.3818300505051189,.27970539148927664,.27970539148927664,.1294849661688697,.1294849661688697],[.362683783378362,.362683783378362,.31370664587788727,.31370664587788727,.22238103445337448,.22238103445337448,.10122853629037626,.10122853629037626],[.3302393550012598,.1806481606948574,.1806481606948574,.08127438836157441,.08127438836157441,.31234707704000286,.31234707704000286,.26061069640293544,.26061069640293544],[.29552422471475287,.29552422471475287,.26926671930999635,.26926671930999635,.21908636251598204,.21908636251598204,.1494513491505806,.1494513491505806,.06667134430868814,.06667134430868814],[.2729250867779006,.26280454451024665,.26280454451024665,.23319376459199048,.23319376459199048,.18629021092773426,.18629021092773426,.1255803694649046,.1255803694649046,.05566856711617366,.05566856711617366],[.24914704581340277,.24914704581340277,.2334925365383548,.2334925365383548,.20316742672306592,.20316742672306592,.16007832854334622,.16007832854334622,.10693932599531843,.10693932599531843,.04717533638651183,.04717533638651183],[.2325515532308739,.22628318026289723,.22628318026289723,.2078160475368885,.2078160475368885,.17814598076194574,.17814598076194574,.13887351021978725,.13887351021978725,.09212149983772845,.09212149983772845,.04048400476531588,.04048400476531588],[.2152638534631578,.2152638534631578,.2051984637212956,.2051984637212956,.18553839747793782,.18553839747793782,.15720316715819355,.15720316715819355,.12151857068790319,.12151857068790319,.08015808715976021,.08015808715976021,.03511946033175186,.03511946033175186],[.2025782419255613,.19843148532711158,.19843148532711158,.1861610000155622,.1861610000155622,.16626920581699392,.16626920581699392,.13957067792615432,.13957067792615432,.10715922046717194,.10715922046717194,.07036604748810812,.07036604748810812,.03075324199611727,.03075324199611727],[.1894506104550685,.1894506104550685,.18260341504492358,.18260341504492358,.16915651939500254,.16915651939500254,.14959598881657674,.14959598881657674,.12462897125553388,.12462897125553388,.09515851168249279,.09515851168249279,.062253523938647894,.062253523938647894,.027152459411754096,.027152459411754096],[.17944647035620653,.17656270536699264,.17656270536699264,.16800410215645004,.16800410215645004,.15404576107681028,.15404576107681028,.13513636846852548,.13513636846852548,.11188384719340397,.11188384719340397,.08503614831717918,.08503614831717918,.0554595293739872,.0554595293739872,.02414830286854793,.02414830286854793],[.1691423829631436,.1691423829631436,.16427648374583273,.16427648374583273,.15468467512626524,.15468467512626524,.14064291467065065,.14064291467065065,.12255520671147846,.12255520671147846,.10094204410628717,.10094204410628717,.07642573025488905,.07642573025488905,.0497145488949698,.0497145488949698,.02161601352648331,.02161601352648331],[.1610544498487837,.15896884339395434,.15896884339395434,.15276604206585967,.15276604206585967,.1426067021736066,.1426067021736066,.12875396253933621,.12875396253933621,.11156664554733399,.11156664554733399,.09149002162245,.09149002162245,.06904454273764123,.06904454273764123,.0448142267656996,.0448142267656996,.019461788229726478,.019461788229726478],[.15275338713072584,.15275338713072584,.14917298647260374,.14917298647260374,.14209610931838204,.14209610931838204,.13168863844917664,.13168863844917664,.11819453196151841,.11819453196151841,.10193011981724044,.10193011981724044,.08327674157670475,.08327674157670475,.06267204833410907,.06267204833410907,.04060142980038694,.04060142980038694,.017614007139152118,.017614007139152118],[.14608113364969041,.14452440398997005,.14452440398997005,.13988739479107315,.13988739479107315,.13226893863333747,.13226893863333747,.12183141605372853,.12183141605372853,.10879729916714838,.10879729916714838,.09344442345603386,.09344442345603386,.0761001136283793,.0761001136283793,.057134425426857205,.057134425426857205,.036953789770852494,.036953789770852494,.016017228257774335,.016017228257774335],[.13925187285563198,.13925187285563198,.13654149834601517,.13654149834601517,.13117350478706238,.13117350478706238,.12325237681051242,.12325237681051242,.11293229608053922,.11293229608053922,.10041414444288096,.10041414444288096,.08594160621706773,.08594160621706773,.06979646842452049,.06979646842452049,.052293335152683286,.052293335152683286,.03377490158481415,.03377490158481415,.0146279952982722,.0146279952982722],[.13365457218610619,.1324620394046966,.1324620394046966,.12890572218808216,.12890572218808216,.12304908430672953,.12304908430672953,.11499664022241136,.11499664022241136,.10489209146454141,.10489209146454141,.09291576606003515,.09291576606003515,.07928141177671895,.07928141177671895,.06423242140852585,.06423242140852585,.04803767173108467,.04803767173108467,.030988005856979445,.030988005856979445,.013411859487141771,.013411859487141771],[.12793819534675216,.12793819534675216,.1258374563468283,.1258374563468283,.12167047292780339,.12167047292780339,.1155056680537256,.1155056680537256,.10744427011596563,.10744427011596563,.09761865210411388,.09761865210411388,.08619016153195327,.08619016153195327,.0733464814110803,.0733464814110803,.05929858491543678,.05929858491543678,.04427743881741981,.04427743881741981,.028531388628933663,.028531388628933663,.0123412297999872,.0123412297999872]],verb.eval.nurbs.rational_interp_curve=function(e,r,n,t){if(r=r||3,r+1>e.length)throw Error("You need to supply at least degree + 1 points!");for(var i=[0],u=1;e.length>u;u++){var s=numeric.norm2(numeric.sub(e[u],e[u-1])),o=i[i.length-1];i.push(o+s)}for(var a=i[i.length-1],u=0;i.length>u;u++)i[u]=i[u]/a;for(var v=numeric.rep([r+1],0),l=void 0!=n&&void 0!=t,c=l?0:1,b=l?i.length-r+1:i.length-r,u=c,m=b;m>u;u++){for(var h=0,_=0;r>_;_++)h+=i[u+_];v.push(1/r*h)}for(var g=v.concat(numeric.rep([r+1],1)),d=[],f=l?e.length+1:e.length-1,p=l?e.length-(r-1):e.length-(r+1),u=0;i.length>u;u++){var k=i[u],y=verb.eval.nurbs.knot_span_given_n(f,r,k,g),x=verb.eval.nurbs.basis_functions_given_knot_span_index(y,k,r,g),N=y-r,E=verb.eval.nurbs.zeros_1d(N),z=verb.eval.nurbs.zeros_1d(p-N);d.push(E.concat(x).concat(z))}if(l){var w=d[0].length-2,S=[-1,1].concat(verb.eval.nurbs.zeros_1d(w)),P=verb.eval.nurbs.zeros_1d(w).concat([-1,1]);d.splice(1,0,S),d.splice(d.length-1,0,P)}for(var M=e[0].length,A=[],I=(1-g[g.length-r-2])/r,L=g[r+1]/r,u=0;M>u;u++){if(l){var C=[e[0][u]];C.push(L*n[u]);for(var _=1;e.length-1>_;_++)C.push(e[_][u]);C.push(I*t[u]),C.push(verb.last(e)[u])}else var C=e.map(function(e){return e[u]});var O=numeric.solve(d,C);A.push(O)}var R=numeric.transpose(A),T=numeric.rep([R.length],1);return{control_points:R,knots:g,degree:r,weights:T}},verb.eval.nurbs.get_sweep1_surface=function(e,r,n,t,i,u,s,o){for(var a=verb.eval.nurbs.homogenize_1d(s,o),v=verb.eval.nurbs.rational_curve_point(u,i,a,0),l=1/s.length,c=[],b=[],m=0;s.length>m;m++){for(var h=verb.eval.nurbs.rational_curve_point(u,i,a,m*l),_=numeric.sub(h,v),g=[],d=[],f=0;n.length>f;f++)g.push(numeric.add(_,n[f])),d.push(t[f]*o[m]);c.push(g),b.push(d)}return{knots_u:i,knots_v:e,control_points:c,degree_u:u,degree_v:r,weights:b}},verb.eval.nurbs.get_ellipse_arc=function(e,r,n,t,i,u,s){u>s&&(s=2*Math.PI+u);var o=s-u,a=0;a=Math.PI/2>=o?1:Math.PI>=o?2:3*Math.PI/2>=o?3:4;var v=o/a,l=Math.cos(v/2),c=numeric.add(e,numeric.mul(t,Math.cos(u),r),numeric.mul(i,Math.sin(u),n)),b=numeric.sub(numeric.mul(Math.cos(u),n),numeric.mul(Math.sin(u),r)),m=verb.eval.nurbs.zeros_1d(2*a),h=verb.eval.nurbs.zeros_1d(2*a+3),_=0,g=u,d=verb.eval.nurbs.zeros_1d(2*a);m[0]=c,d[0]=1;for(var f=1;a>=f;f++){g+=v;var p=numeric.add(e,numeric.mul(t,Math.cos(g),r),numeric.mul(i,Math.sin(g),n));d[_+2]=1,m[_+2]=p;var k=numeric.sub(numeric.mul(Math.cos(g),n),numeric.mul(Math.sin(g),r)),y=verb.eval.geom.intersect_rays(c,numeric.mul(1/numeric.norm2(b),b),p,numeric.mul(1/numeric.norm2(k),k)),x=numeric.add(c,numeric.mul(b,y[0]));d[_+1]=l,m[_+1]=x,_+=2,a>f&&(c=p,b=k)}for(var N=2*a+1,f=0;3>f;f++)h[f]=0,h[f+N]=1;switch(a){case 1:break;case 2:h[3]=h[4]=.5;break;case 3:h[3]=h[4]=1/3,h[5]=h[6]=2/3;break;case 4:h[3]=h[4]=.25,h[5]=h[6]=.5,h[7]=h[8]=.75}return{knots:h,control_points:m,degree:2,weights:d}},verb.eval.nurbs.get_sphere_surface=function(e,r,n,t){var i=verb.eval.nurbs.get_arc(e,numeric.mul(r,-1),n,t,0,Math.PI);return verb.eval.nurbs.get_revolved_surface(e,r,2*Math.PI,i.knots,i.degree,i.control_points,i.weights)},verb.eval.nurbs.get_polyline_curve=function(e){for(var r=e.length-1,n=1/r,t=[0,0],i=1;r>i;i++)t.push(i*n);t.push(1),t.push(1);for(var u=[],i=0;e.length>i;i++)u.push(1);return{knots:t,control_points:e.slice(0),degree:1,weights:u}},verb.eval.nurbs.get_4pt_surface=function(e,r,n,t){var i=numeric.mul(.5,numeric.add(e,t)),u=numeric.mul(.5,numeric.add(r,n)),s=numeric.mul(.5,numeric.add(n,t)),o=numeric.mul(.5,numeric.add(e,r)),a=numeric.mul(.5,numeric.add(i,u));return{knots_u:[0,0,0,1,1,1],knots_v:[0,0,0,1,1,1],control_points:[[e,i,t],[o,a,s],[r,u,n]],degree_u:2,degree_v:2,weights:[[1,1,1],[1,1,1],[1,1,1]]}},verb.eval.nurbs.get_cylinder_surface=function(e,r,n,t,i){var u=crossprod(e,r),s=(2*Math.PI,verb.eval.nurbs.get_arc(n,r,u,i,0,2*Math.PI));return verb.eval.nurbs.get_extruded_surface(e,t,s.knots,s.degree,s.control_points,s.weights)},verb.eval.nurbs.get_cone_surface=function(e,r,n,t,i){var u=2*Math.PI,s=1,o=[numeric.add(n,numeric.mul(t,e)),numeric.add(n,numeric.mul(i,r))],a=[0,0,1,1],v=[1,1];return verb.eval.nurbs.get_revolved_surface(n,e,u,a,s,o,v)},verb.eval.nurbs.get_extruded_surface=function(e,r,n,t,i,u){for(var s=verb.eval.nurbs.zeros_2d(3,i.length),o=verb.eval.nurbs.zeros_2d(3,i.length),a=numeric.mul(e,r),v=numeric.mul(e,.5*r),l=0;i.length>l;l++)s[2][l]=i[l],s[1][l]=numeric.add(v,i[l]),s[0][l]=numeric.add(a,i[l]),o[0][l]=u[l],o[1][l]=u[l],o[2][l]=u[l];return{knots_u:[0,0,0,1,1,1],knots_v:n,control_points:s,degree_u:2,degree_v:t,weights:o}},verb.eval.nurbs.get_revolved_surface=function(e,r,n,t,i,u,s){var o,a,v,l;Math.PI/2>=n?(o=1,a=verb.eval.nurbs.zeros_1d(6+2*(o-1))):Math.PI>=n?(o=2,a=verb.eval.nurbs.zeros_1d(6+2*(o-1)),a[3]=a[4]=.5):3*Math.PI/2>=n?(o=3,a=verb.eval.nurbs.zeros_1d(6+2*(o-1)),a[3]=a[4]=1/3,a[5]=a[6]=2/3):(o=4,a=verb.eval.nurbs.zeros_1d(6+2*(o-1)),a[3]=a[4]=.25,a[5]=a[6]=.5,a[7]=a[8]=.75);for(var c=n/o,b=3+2*(o-1),m=0;3>m;b++,m++)a[m]=0,a[b]=1;for(var h=Math.cos(c/2),_=0,g=verb.eval.nurbs.zeros_1d(o+1),d=verb.eval.nurbs.zeros_1d(o+1),v=verb.eval.nurbs.zeros_2d(2*o+1,u.length),l=verb.eval.nurbs.zeros_2d(2*o+1,u.length),m=1;o>=m;m++)_+=c,d[m]=Math.cos(_),g[m]=Math.sin(_);for(b=0;u.length>b;b++){var f=verb.eval.geom.closest_point_on_ray(u[b],e,r),p=numeric.sub(u[b],f),k=numeric.norm2(p),y=crossprod(r,p);k>verb.EPSILON&&(p=numeric.mul(1/k,p),y=numeric.mul(1/k,y)),v[0][b]=u[b];var x=u[b];l[0][b]=s[b];for(var N=y,E=0,_=0,m=1;o>=m;m++){var z=0==k?f:numeric.add(f,numeric.mul(k,d[m],p),numeric.mul(k,g[m],y));v[E+2][b]=z,l[E+2][b]=s[b];var w=numeric.sub(numeric.mul(d[m],y),numeric.mul(g[m],p));if(0==k)v[E+1][b]=f;else{var S=verb.eval.geom.intersect_rays(x,numeric.mul(1/numeric.norm2(N),N),z,numeric.mul(1/numeric.norm2(w),w)),P=numeric.add(x,numeric.mul(N,S[0]));v[E+1][b]=P}l[E+1][b]=h*s[b],E+=2,o>m&&(x=z,N=w)}}return{knots_u:a,knots_v:t,control_points:v,degree_u:2,degree_v:i,weights:l}},verb.eval.nurbs.get_arc=function(e,r,n,t,i,u){return verb.eval.nurbs.get_ellipse_arc(e,r,n,t,t,i,u)},verb.eval.nurbs.surface_split=function(e,r,n,t,i,u,s){var o,a,v;0===s?(i=numeric.transpose(i),o=r,a=e):(i=i,o=t,a=n);var l=[];for(v=0;a+1>v;v++)l.push(u);var c,b=[],m=[],h=verb.eval.nurbs.knot_span(a,u,o);for(v=0;i.length>v;v++){c=verb.eval.nurbs.curve_knot_refine(a,o,i[v],l);var _=c.control_points.slice(0,h+1),g=c.control_points.slice(h+1);b.push(_),m.push(g)}var d=c.knots.slice(0,h+a+2),f=c.knots.slice(h+1);return 0===s?(b=numeric.transpose(b),m=numeric.transpose(m),[{degree_u:a,knots_u:d,degree_v:n,knots_v:t,control_points:b},{degree_u:a,knots_u:f,degree_v:n,knots_v:t,control_points:m}]):[{degree_u:e,knots_u:r,degree_v:a,knots_v:d,control_points:b},{degree_u:e,knots_u:r,degree_v:a,knots_v:f,control_points:m}]},verb.eval.nurbs.surface_knot_refine=function(e,r,n,t,i,u,s){var o,a,v,l,c,b=[];0===s?(l=numeric.transpose(i),a=r,v=e):(l=i,a=t,v=n);for(var m=0;l.length>m;m++)o=verb.eval.nurbs.curve_knot_refine(v,a,l[m],u),b.push(o.control_points);return c=o.knots,0===s?(b=numeric.transpose(b),{knots_u:c,degree_u:v,knots_v:t,degree_v:n,control_points:b}):{knots_u:r,degree_u:e,knots_v:c,degree_v:v,control_points:b}},verb.eval.nurbs.curve_bezier_decompose=function(e,r,n){for(var t=verb.eval.nurbs.knot_multiplicities(r),i=e+1,u=verb.eval.nurbs.curve_knot_refine,s=0;t.length>s;s++)if(i>t[s][1]){var o=numeric.rep([i-t[s][1]],t[s][0]),a=u(e,r,n,o);r=a.knots,n=a.control_points}r.length/i-1;for(var v=2*i,l=[],s=0;n.length>s;s+=i){var c=r.slice(s,s+v),b=n.slice(s,s+i);l.push({degree:e,knots:c,control_points:b})}return l},verb.eval.nurbs.knot_multiplicities=function(e){for(var r=[[e[0],0]],n=r[0],t=0;e.length>t;t++)Math.abs(e[t]-n[0])>verb.EPSILON&&(n=[e[t],0],r.push(n)),n[1]++;return r},verb.eval.nurbs.curve_split=function(e,r,n,t){for(var i=[],u=0;e+1>u;u++)i.push(t);var s=verb.eval.nurbs.curve_knot_refine(e,r,n,i),o=verb.eval.nurbs.knot_span(e,t,r),a=s.knots.slice(0,o+e+2),v=s.knots.slice(o+1),l=s.control_points.slice(0,o+1),c=s.control_points.slice(o+1);return[{degree:e,knots:a,control_points:l},{degree:e,knots:v,control_points:c}]},verb.eval.nurbs.curve_knot_refine=function(e,r,n,t){var i=n.length-1,u=i+e+1,s=t.length-1,o=verb.eval.nurbs.knot_span(e,t[0],r),a=verb.eval.nurbs.knot_span(e,t[s],r),v=Array(n.length+s+1),l=Array(r.length+s+1),c=0,b=0;for(c=0;o-e>=c;c++)v[c]=n[c];for(c=a-1;i>=c;c++)v[c+s+1]=n[c];for(c=0;o>=c;c++)l[c]=r[c];for(c=a+e;u>=c;c++)l[c+s+1]=r[c];c=a+e-1;var m=a+e+s;for(b=s;b>=0;b--){for(;t[b]<=r[c]&&c>o;)v[m-e-1]=n[c-e-1],l[m]=r[c],m-=1,c-=1;v[m-e-1]=v[m-e];for(var h=1;e>=h;h++){var _=m-e+h,g=l[m+h]-t[b];Math.abs(g)<verb.EPSILON?v[_-1]=v[_]:(g/=l[m+h]-r[c-e+h],v[_-1]=numeric.add(numeric.mul(g,v[_-1]),numeric.mul(1-g,v[_])))}l[m]=t[b],m-=1}return{knots:l,control_points:v}},verb.eval.nurbs.curve_knot_insert=function(e,r,n,t,i){var u=0,s=n.length,o=verb.eval.nurbs.knot_span(e,t,r),a=s+i,v=Array(e-u),l=Array(r.length+i),c=Array(a),b=0;for(b=0;o>=b;b++)l[b]=r[b];for(b=1;i>=b;b++)l[o+b]=t;for(b=o+1;r.length>b;b++)l[b+i]=r[b];for(b=0;o-e>=b;b++)c[b]=n[b];for(b=o-u;s>b;b++)c[b+i]=n[b];for(b=0;e-u>=b;b++)v[b]=n[o-e+b];for(var m=0,h=0,_=1;i>=_;_++){for(m=o-e+_,b=0;e-_-u>=b;b++)h=(t-r[m+b])/(r[b+o+1]-r[m+b]),v[b]=numeric.add(numeric.mul(h,v[b+1]),numeric.mul(1-h,v[b]));c[m]=v[0],c[o+i-_-u]=v[e-_-u]}for(b=m+1;o-u>b;b++)c[b]=v[b-m];return{knots:l,control_points:c}},verb.eval.nurbs.rational_surface_curvature=function(e,r,n,t,i,u,s){var o=verb.eval.nurbs.rational_surface_derivs(e,r,n,t,i,2,u,s),a=o[0][1],v=o[1][0],l=o[0][2],c=o[2][0],b=o[1][1],m=numeric.cross(a,v),h=numeric.dot(l,m),_=numeric.dot(b,m),g=numeric.dot(c,m),d=[[h,_],[_,g]],f=numeric.eig(d),p=f.lambda.x[0],k=f.lambda.x[1],y=.5*(p+k),x=p*k,N=numeric.add(numeric.mul(f.E.x[0][0],a),numeric.mul(f.E.x[0][1],v)),E=numeric.add(numeric.mul(f.E.x[1][0],a),numeric.mul(f.E.x[1][1],v));return{point:o[0][0],normal:m,mean:y,gaussian:x,shapeOperator:d,k1:p,k2:k,p1:N,p2:E,p1p:f.E.x[0],p2p:f.E.x[1]}},verb.eval.nurbs.rational_surface_derivs=function(e,r,n,t,i,u,s,o){var a=verb.eval.nurbs.surface_derivs(e,r,n,t,i,u,s,o),v=verb.eval.nurbs.separate_homo_derivs_2d(a),l=v[0],c=v[1],b=0,m=0,h=0,_=0,g=[],d=l[0][0].length;for(b=0;u>=b;b++)for(g.push([]),_=0;u-b>=_;_++){var o=l[b][_];for(h=1;_>=h;h++)o=numeric.sub(o,numeric.mul(numeric.mul(binomial.get(_,h),c[0][h]),g[b][_-h]));for(m=1;b>=m;m++){o=numeric.sub(o,numeric.mul(numeric.mul(binomial.get(b,m),c[m][0]),g[b-m][_]));var f=verb.eval.nurbs.zeros_1d(d);for(h=1;_>=h;h++)f=numeric.add(f,numeric.mul(numeric.mul(binomial.get(_,h),c[m][h]),g[b-m][_-h]));o=numeric.sub(o,numeric.mul(binomial.get(b,m),f))}g[b].push(numeric.mul(1/c[0][0],o))}return g},verb.eval.nurbs.rational_surface_point=function(e,r,n,t,i,u,s){return verb.eval.nurbs.dehomogenize(verb.eval.nurbs.surface_point(e,r,n,t,i,u,s))},verb.eval.nurbs.rational_curve_derivs=function(e,r,n,t,i){var u=verb.eval.nurbs.separate_homo_derivs_1d(verb.eval.nurbs.curve_derivs(e,r,n,t,i)),s=u[0],o=u[1],a=0,v=0,l=[];for(a=0;i>=a;a++){var c=s[a];for(v=1;a>=v;v++)c=numeric.sub(c,numeric.mul(numeric.mul(binomial.get(a,v),o[v]),l[a-v]));l.push(numeric.mul(1/o[0],c))}return l},verb.eval.nurbs.separate_homo_derivs_1d=function(e){for(var r=e[0].length,n=r-1,t=[],i=[],u=0,s=e.length;s>u;u++)t.push(e[u].slice(0,n)),i.push(e[u][n]);return[t,i]},verb.eval.nurbs.separate_homo_derivs_2d=function(e){for(var r=[],n=[],t=0,i=e.length;i>t;t++){var u=verb.eval.nurbs.separate_homo_derivs_1d(e[t]);r.push(u[0]),n.push(u[1])}return[r,n]},verb.eval.nurbs.rational_curve_point=function(e,r,n,t){return verb.eval.nurbs.dehomogenize(verb.eval.nurbs.curve_point(e,r,n,t))},verb.eval.nurbs.dehomogenize=function(e){for(var r=e.length,n=[],t=e[r-1],i=0;e.length-1>i;i++)n.push(e[i]/t);return n},verb.eval.nurbs.weight_1d=function(e){var r=e[0].length-1;return e.map(function(e){return e[r]})},verb.eval.nurbs.weight_2d=function(e){return e.map(verb.eval.nurbs.weight_1d)},verb.eval.nurbs.dehomogenize_1d=function(e){return e.map(verb.eval.nurbs.dehomogenize)},verb.eval.nurbs.dehomogenize_2d=function(e){return e.map(verb.eval.nurbs.dehomogenize_1d)},verb.eval.nurbs.homogenize_1d=function(e,r){for(var n=e.length,t=e[0].length,i=0,u=[],s=0,o=[],a=0;n>a;a++){var v=[];for(o=e[a],s=r[a],i=0;t>i;i++)v.push(o[i]*s);v.push(s),u.push(v)}return u},verb.eval.nurbs.homogenize_2d=function(e,r){for(var n=e.length,t=(e[0].length,e[0][0].length,[]),i=0;n>i;i++)t.push(verb.eval.nurbs.homogenize_1d(e[i],r[i]));return t},verb.eval.nurbs.surface_derivs=function(e,r,n,t,i,u,s,o){var a=r.length-e-2,v=t.length-n-2;return verb.eval.nurbs.surface_derivs_given_n_m(a,e,r,v,n,t,i,u,s,o)},verb.eval.nurbs.surface_derivs_given_n_m=function(e,r,n,t,i,u,s,o,a,v){if(verb.eval.nurbs.are_valid_relations(r,s.length,n.length)===!1||verb.eval.nurbs.are_valid_relations(i,s[0].length,u.length)===!1)return console.error("Invalid relations between control points, knot vector, and n"),null;var l=s[0][0].length,c=Math.min(o,r),b=Math.min(o,i),m=verb.eval.nurbs.zeros_3d(c+1,b+1,l),h=verb.eval.nurbs.knot_span_given_n(e,r,a,n),_=verb.eval.nurbs.knot_span_given_n(t,i,v,u),g=verb.eval.nurbs.deriv_basis_functions_given_n_i(h,a,r,e,n),d=verb.eval.nurbs.deriv_basis_functions_given_n_i(_,v,i,t,u),f=verb.eval.nurbs.zeros_2d(i+1,l),p=0,k=0,y=0,x=0,N=0;for(p=0;c>=p;p++){for(k=0;i>=k;k++)for(f[k]=verb.eval.nurbs.zeros_1d(l),y=0;r>=y;y++)f[k]=numeric.add(f[k],numeric.mul(g[p][y],s[h-r+y][_-i+k]));for(N=Math.min(o-p,b),x=0;N>=x;x++)for(m[p][x]=verb.eval.nurbs.zeros_1d(l),k=0;i>=k;k++)m[p][x]=numeric.add(m[p][x],numeric.mul(d[x][k],f[k]))}return m},verb.eval.nurbs.surface_point=function(e,r,n,t,i,u,s){var o=r.length-e-2,a=t.length-n-2;return verb.eval.nurbs.surface_point_given_n_m(o,e,r,a,n,t,i,u,s)},verb.eval.nurbs.volume_point=function(e,r,n,t,i,u,s,o,a,v){var l=r.length-e-2,c=t.length-n-2,b=u.length-i-2;return verb.eval.nurbs.volume_point_given_n_m_l(l,e,r,c,n,t,b,i,u,s,o,a,v)},verb.eval.nurbs.volume_point_given_n_m_l=function(e,r,n,t,i,u,s,o,a,v,l,c,b){if(!verb.eval.nurbs.are_valid_relations(r,v.length,n.length)||!verb.eval.nurbs.are_valid_relations(i,v[0].length,u.length)||!verb.eval.nurbs.are_valid_relations(o,v[0][0].length,a.length))return console.error("Invalid relations between control points and knot vector"),null;for(var m=v[0][0][0].length,h=verb.eval.nurbs.knot_span_given_n(e,r,l,n),_=verb.eval.nurbs.knot_span_given_n(t,i,c,u),g=verb.eval.nurbs.knot_span_given_n(s,o,b,a),d=verb.eval.nurbs.basis_functions_given_knot_span_index(h,l,r,n),f=verb.eval.nurbs.basis_functions_given_knot_span_index(_,c,i,u),p=verb.eval.nurbs.basis_functions_given_knot_span_index(g,b,o,a),k=h-r,y=_,x=g,N=verb.eval.nurbs.zeros_1d(m),E=verb.eval.nurbs.zeros_1d(m),z=verb.eval.nurbs.zeros_1d(m),w=0,S=0,P=0;o>=P;P++){for(z=verb.eval.nurbs.zeros_1d(m),x=g-o+P,w=0;i>=w;w++){for(E=verb.eval.nurbs.zeros_1d(m),y=_-i+w,S=0;r>=S;S++)E=numeric.add(E,numeric.mul(d[S],v[k+S][y][x]));z=numeric.add(z,numeric.mul(f[w],E))}N=numeric.add(N,numeric.mul(p[P],z))}return N},verb.eval.nurbs.surface_point_given_n_m=function(e,r,n,t,i,u,s,o,a){if(verb.eval.nurbs.are_valid_relations(r,s.length,n.length)===!1||verb.eval.nurbs.are_valid_relations(i,s[0].length,u.length)===!1)return console.error("Invalid relations between control points, knot vector, and n"),null;var v=s[0][0].length,l=verb.eval.nurbs.knot_span_given_n(e,r,o,n),c=verb.eval.nurbs.knot_span_given_n(t,i,a,u),b=verb.eval.nurbs.basis_functions_given_knot_span_index(l,o,r,n),m=verb.eval.nurbs.basis_functions_given_knot_span_index(c,a,i,u),h=l-r,_=c,g=verb.eval.nurbs.zeros_1d(v),d=verb.eval.nurbs.zeros_1d(v),f=0,p=0;for(f=0;i>=f;f++){for(d=verb.eval.nurbs.zeros_1d(v),_=c-i+f,p=0;r>=p;p++)d=numeric.add(d,numeric.mul(b[p],s[h+p][_]));g=numeric.add(g,numeric.mul(m[f],d))}return g},verb.eval.nurbs.curve_derivs=function(e,r,n,t,i){var u=r.length-e-2;return verb.eval.nurbs.curve_derivs_given_n(u,e,r,n,t,i)},verb.eval.nurbs.curve_derivs_given_n=function(e,r,n,t,i,u){if(verb.eval.nurbs.are_valid_relations(r,t.length,n.length)===!1)return console.error("Invalid relations between control points, knot vector, and n"),null;var s=t[0].length,o=Math.min(u,r),a=verb.eval.nurbs.zeros_2d(o+1,s),v=verb.eval.nurbs.knot_span_given_n(e,r,i,n),l=verb.eval.nurbs.deriv_basis_functions_given_n_i(v,i,r,o,n),c=0,b=0;for(c=0;o>=c;c++)for(b=0;r>=b;b++)a[c]=numeric.add(a[c],numeric.mul(l[c][b],t[v-r+b]));return a},verb.eval.nurbs.are_valid_relations=function(e,r,n){return 0===r+e+1-n?!0:!1},verb.eval.nurbs.curve_point=function(e,r,n,t){var i=r.length-e-2;return verb.eval.nurbs.curve_point_given_n(i,e,r,n,t)},verb.eval.nurbs.curve_point_given_n=function(e,r,n,t,i){if(verb.eval.nurbs.are_valid_relations(r,t.length,n.length)===!1)return console.error("Invalid relations between control points, knot vector, and n"),null;for(var u=verb.eval.nurbs.knot_span_given_n(e,r,i,n),s=verb.eval.nurbs.basis_functions_given_knot_span_index(u,i,r,n),o=verb.eval.nurbs.zeros_1d(t[0].length),a=0;r>=a;a++)o=numeric.add(o,numeric.mul(s[a],t[u-r+a]));return o},verb.eval.nurbs.zeros_1d=function(e){return numeric.rep([e],0)},verb.eval.nurbs.zeros_2d=function(e,r){return r=r>0?r:0,e=e>0?e:0,numeric.rep([e,r],0)},verb.eval.nurbs.zeros_3d=function(e,r,n){return r=r>0?r:0,e=e>0?e:0,numeric.rep([e,r,n],0)},verb.eval.nurbs.deriv_basis_functions=function(e,r,n){var t=verb.eval.nurbs.knot_span(r,e,n),i=n.length-1,u=i-r-1;return verb.eval.nurbs.deriv_basis_functions_given_n_i(t,e,r,u,n)},verb.eval.nurbs.deriv_basis_functions_given_n_i=function(e,r,n,t,i){var u=verb.eval.nurbs.zeros_2d(n+1,n+1),s=Array(n+1),o=Array(n+1),a=0,v=0,l=1,c=0;for(u[0][0]=1,l=1;n>=l;l++){for(s[l]=r-i[e+1-l],o[l]=i[e+l]-r,a=0,c=0;l>c;c++)u[l][c]=o[c+1]+s[l-c],v=u[c][l-1]/u[l][c],u[c][l]=a+o[c+1]*v,a=s[l-c]*v;u[l][l]=a}var b=verb.eval.nurbs.zeros_2d(t+1,n+1),m=verb.eval.nurbs.zeros_2d(2,n+1),h=1,_=0,g=1,d=0,f=0,p=0,k=0,y=0;for(l=0;n>=l;l++)b[0][l]=u[l][n];for(c=0;n>=c;c++)for(_=0,g=1,m[0][0]=1,h=1;t>=h;h++){for(d=0,f=c-h,p=n-h,c>=h&&(m[g][0]=m[_][0]/u[p+1][f],d=m[g][0]*u[f][p]),k=f>=-1?1:-f,y=p>=c-1?h-1:n-c,l=k;y>=l;l++)m[g][l]=(m[_][l]-m[_][l-1])/u[p+1][f+l],d+=m[g][l]*u[f+l][p];p>=c&&(m[g][h]=-m[_][h-1]/u[p+1][c],d+=m[g][h]*u[c][p]),b[h][c]=d,l=_,_=g,g=l}for(c=n,h=1;t>=h;h++){for(l=0;n>=l;l++)b[h][l]*=c;c*=n-h}return b},verb.eval.nurbs.basis_functions=function(e,r,n){var t=verb.eval.nurbs.knot_span(e,r,n);return verb.eval.nurbs.basis_functions_given_knot_span_index(t,e,r,n)},verb.eval.nurbs.basis_functions_given_knot_span_index=function(e,r,n,t){var i=Array(n+1),u=Array(n+1),s=Array(n+1),o=0,a=0;i[0]=1;for(var v=1;n>=v;v++){u[v]=r-t[e+1-v],s[v]=t[e+v]-r,o=0;for(var l=0;v>l;l++)a=i[l]/(s[l+1]+u[v-l]),i[l]=o+s[l+1]*a,o=u[v-l]*a;i[v]=o}return i},verb.eval.nurbs.knot_span=function(e,r,n){var t=n.length-1,i=t-e-1;return verb.eval.nurbs.knot_span_given_n(i,e,r,n)},verb.eval.nurbs.knot_span_given_n=function(e,r,n,t){if(n>=t[e+1])return e;if(t[r]>n)return r;for(var i=r,u=e+1,s=Math.floor((i+u)/2);t[s]>n||n>=t[s+1];)t[s]>n?u=s:i=s,s=Math.floor((i+u)/2);return s};